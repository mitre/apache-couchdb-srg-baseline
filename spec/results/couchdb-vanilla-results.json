{"platform":{"name":"centos","release":"7.8.2003"},"profiles":[{"name":"tests from {:path=>\"C:.Users.zhangc.git.apache-couchdb-srg-baseline.controls\"}","sha256":"85e0d945aaab3bc28a21a3cc52991ccd8e6defd8b73707dd5d8a7bdbaffe57a5","title":"tests from {:path=>\"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls\"}","supports":[],"attributes":[{"name":"couchdb_conf","options":{"value":"/opt/couchdb/etc/local.ini"}}],"groups":[{"id":"V-32157.rb","controls":["V-32157"]},{"id":"V-32192.rb","controls":["V-32192"]},{"id":"V-32203.rb","controls":["V-32203"]},{"id":"V-32347.rb","controls":["V-32347"]},{"id":"V-32362.rb","controls":["V-32362"]},{"id":"V-32363.rb","controls":["V-32363"]},{"id":"V-32364.rb","controls":["V-32364"]},{"id":"V-32365.rb","controls":["V-32365"]},{"id":"V-32368.rb","controls":["V-32368"]},{"id":"V-32369.rb","controls":["V-32369"]},{"id":"V-32370.rb","controls":["V-32370"]},{"id":"V-32371.rb","controls":["V-32371"]},{"id":"V-32373.rb","controls":["V-32373"]},{"id":"V-32374.rb","controls":["V-32374"]},{"id":"V-32375.rb","controls":["V-32375"]},{"id":"V-32383.rb","controls":["V-32383"]},{"id":"V-32391.rb","controls":["V-32391"]},{"id":"V-32393.rb","controls":["V-32393"]},{"id":"V-32394.rb","controls":["V-32394"]},{"id":"V-32395.rb","controls":["V-32395"]},{"id":"V-32397.rb","controls":["V-32397"]},{"id":"V-32398.rb","controls":["V-32398"]},{"id":"V-32399.rb","controls":["V-32399"]},{"id":"V-32412.rb","controls":["V-32412"]},{"id":"V-32413.rb","controls":["V-32413"]},{"id":"V-32414.rb","controls":["V-32414"]},{"id":"V-32415.rb","controls":["V-32415"]},{"id":"V-32423.rb","controls":["V-32423"]},{"id":"V-32424.rb","controls":["V-32424"]},{"id":"V-32426.rb","controls":["V-32426"]},{"id":"V-32427.rb","controls":["V-32427"]},{"id":"V-32428.rb","controls":["V-32428"]},{"id":"V-32442.rb","controls":["V-32442"]},{"id":"V-32468.rb","controls":["V-32468"]},{"id":"V-32469.rb","controls":["V-32469"]},{"id":"V-32475.rb","controls":["V-32475"]},{"id":"V-32476.rb","controls":["V-32476"]},{"id":"V-32478.rb","controls":["V-32478"]},{"id":"V-32479.rb","controls":["V-32479"]},{"id":"V-32480.rb","controls":["V-32480"]},{"id":"V-32481.rb","controls":["V-32481"]},{"id":"V-32514.rb","controls":["V-32514"]},{"id":"V-32523.rb","controls":["V-32523"]},{"id":"V-32526.rb","controls":["V-32526"]},{"id":"V-32528.rb","controls":["V-32528"]},{"id":"V-32529.rb","controls":["V-32529"]},{"id":"V-32534.rb","controls":["V-32534"]},{"id":"V-32536.rb","controls":["V-32536"]},{"id":"V-32547.rb","controls":["V-32547"]},{"id":"V-32555.rb","controls":["V-32555"]},{"id":"V-32570.rb","controls":["V-32570"]},{"id":"V-32571.rb","controls":["V-32571"]},{"id":"V-58019.rb","controls":["V-58019"]},{"id":"V-58021.rb","controls":["V-58021"]},{"id":"V-58023.rb","controls":["V-58023"]},{"id":"V-58025.rb","controls":["V-58025"]},{"id":"V-58035.rb","controls":["V-58035"]},{"id":"V-58037.rb","controls":["V-58037"]},{"id":"V-58039.rb","controls":["V-58039"]},{"id":"V-58041.rb","controls":["V-58041"]},{"id":"V-58049.rb","controls":["V-58049"]},{"id":"V-58051.rb","controls":["V-58051"]},{"id":"V-58053.rb","controls":["V-58053"]},{"id":"V-58055.rb","controls":["V-58055"]},{"id":"V-58057.rb","controls":["V-58057"]},{"id":"V-58059.rb","controls":["V-58059"]},{"id":"V-58061.rb","controls":["V-58061"]},{"id":"V-58063.rb","controls":["V-58063"]},{"id":"V-58065.rb","controls":["V-58065"]},{"id":"V-58067.rb","controls":["V-58067"]},{"id":"V-58069.rb","controls":["V-58069"]},{"id":"V-58071.rb","controls":["V-58071"]},{"id":"V-58073.rb","controls":["V-58073"]},{"id":"V-58075.rb","controls":["V-58075"]},{"id":"V-58077.rb","controls":["V-58077"]},{"id":"V-58079.rb","controls":["V-58079"]},{"id":"V-58081.rb","controls":["V-58081"]},{"id":"V-58083.rb","controls":["V-58083"]},{"id":"V-58085.rb","controls":["V-58085"]},{"id":"V-58087.rb","controls":["V-58087"]},{"id":"V-58089.rb","controls":["V-58089"]},{"id":"V-58091.rb","controls":["V-58091"]},{"id":"V-58093.rb","controls":["V-58093"]},{"id":"V-58095.rb","controls":["V-58095"]},{"id":"V-58097.rb","controls":["V-58097"]},{"id":"V-58099.rb","controls":["V-58099"]},{"id":"V-58101.rb","controls":["V-58101"]},{"id":"V-58103.rb","controls":["V-58103"]},{"id":"V-58105.rb","controls":["V-58105"]},{"id":"V-58107.rb","controls":["V-58107"]},{"id":"V-58109.rb","controls":["V-58109"]},{"id":"V-58111.rb","controls":["V-58111"]},{"id":"V-58113.rb","controls":["V-58113"]},{"id":"V-58115.rb","controls":["V-58115"]},{"id":"V-58117.rb","controls":["V-58117"]},{"id":"V-58119.rb","controls":["V-58119"]},{"id":"V-58121.rb","controls":["V-58121"]},{"id":"V-58123.rb","controls":["V-58123"]},{"id":"V-58125.rb","controls":["V-58125"]},{"id":"V-58127.rb","controls":["V-58127"]},{"id":"V-58129.rb","controls":["V-58129"]},{"id":"V-58131.rb","controls":["V-58131"]},{"id":"V-58133.rb","controls":["V-58133"]},{"id":"V-58135.rb","controls":["V-58135"]},{"id":"V-58137.rb","controls":["V-58137"]},{"id":"V-58147.rb","controls":["V-58147"]},{"id":"V-58149.rb","controls":["V-58149"]},{"id":"V-58151.rb","controls":["V-58151"]},{"id":"V-58153.rb","controls":["V-58153"]},{"id":"V-58155.rb","controls":["V-58155"]},{"id":"V-58157.rb","controls":["V-58157"]},{"id":"V-58159.rb","controls":["V-58159"]},{"id":"V-58161.rb","controls":["V-58161"]},{"id":"V-58163.rb","controls":["V-58163"]},{"id":"V-58165.rb","controls":["V-58165"]},{"id":"V-58167.rb","controls":["V-58167"]},{"id":"V-58169.rb","controls":["V-58169"]},{"id":"V-58171.rb","controls":["V-58171"]},{"id":"V-58173.rb","controls":["V-58173"]},{"id":"V-58175.rb","controls":["V-58175"]},{"id":"V-58177.rb","controls":["V-58177"]},{"id":"V-58179.rb","controls":["V-58179"]},{"id":"V-58181.rb","controls":["V-58181"]},{"id":"V-58183.rb","controls":["V-58183"]},{"id":"V-61407.rb","controls":["V-61407"]}],"controls":[{"id":"V-32157","title":"The DBMS must limit the number of concurrent sessions to an\norganization-defined number per user for all accounts and/or account types.","desc":"Database management includes the ability to control the number of\nusers and user sessions utilizing a DBMS. Unlimited concurrent connections to\nthe DBMS could allow a successful Denial of Service (DoS) attack by exhausting\nconnection resources; and a system can also fail or be degraded by an overload\nof legitimate users. Limiting the number of concurrent sessions per user is\nhelpful in reducing these risks.\n\n    This requirement addresses concurrent session control for a single account.\nIt does not address concurrent sessions by a single user via multiple system\naccounts; and it does not deal with the total number of sessions across all\naccounts.\n\n    The capability to limit the number of concurrent sessions per user must be\nconfigured in or added to the DBMS (for example, by use of a logon trigger),\nwhen this is technically feasible. Note that it is not sufficient to limit\nsessions via a web server or application server alone, because legitimate users\nand adversaries can potentially connect to the DBMS by other means.\n\n    The organization will need to define the maximum number of concurrent\nsessions by account type, by account, or a combination thereof. In deciding on\nthe appropriate number, it is important to consider the work requirements of\nthe various types of users. For example, 2 might be an acceptable limit for\ngeneral users accessing the database via an application; but 10 might be too\nfew for a database administrator using a database management GUI tool, where\neach query tab and navigation pane may count as a separate session.\n\n    (Sessions may also be referred to as connections or logons, which for the\npurposes of this requirement are synonyms.)","descriptions":[{"label":"default","data":"Database management includes the ability to control the number of\nusers and user sessions utilizing a DBMS. Unlimited concurrent connections to\nthe DBMS could allow a successful Denial of Service (DoS) attack by exhausting\nconnection resources; and a system can also fail or be degraded by an overload\nof legitimate users. Limiting the number of concurrent sessions per user is\nhelpful in reducing these risks.\n\n    This requirement addresses concurrent session control for a single account.\nIt does not address concurrent sessions by a single user via multiple system\naccounts; and it does not deal with the total number of sessions across all\naccounts.\n\n    The capability to limit the number of concurrent sessions per user must be\nconfigured in or added to the DBMS (for example, by use of a logon trigger),\nwhen this is technically feasible. Note that it is not sufficient to limit\nsessions via a web server or application server alone, because legitimate users\nand adversaries can potentially connect to the DBMS by other means.\n\n    The organization will need to define the maximum number of concurrent\nsessions by account type, by account, or a combination thereof. In deciding on\nthe appropriate number, it is important to consider the work requirements of\nthe various types of users. For example, 2 might be an acceptable limit for\ngeneral users accessing the database via an application; but 10 might be too\nfew for a database administrator using a database management GUI tool, where\neach query tab and navigation pane may count as a separate session.\n\n    (Sessions may also be referred to as connections or logons, which for the\npurposes of this requirement are synonyms.)"},{"label":"check","data":"Check CouchDB settings and documentation and verify the limit of the\nnumber of concurrent sessions to an organization-defined number per user for\nall accounts and/or account types.\n    Discuss oraganization-defined number of concurrent sessions per user\naccount.\n\n    # find . -name \"default.ini\"\n    # grep \"max_connections\" <path to default.ini>\n    if the max_connections is over the defined amount this is a finding.\n\n    If it is not set to limit the number of concurrent sessions to an\norganization-defined number per user for all accounts and/or account types,\nthis is a finding"},{"label":"fix","data":"Configure CouchDB to produce and verify the limit of the number of\nconcurrent sessions to an organization-defined number per user for all accounts\nand/or account types.\n    # find . -name \"default.ini\"\n    # set \"max_connections\" equal to the organization defined amount."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000001-DB-000031","gid":"V-32157","rid":"SV-42474r3_rule","stig_id":"SRG-APP-000001-DB-000031","fix_id":null,"cci":["CCI-000054"],"nist":["AC-10","Rev_4"]},"code":"control \"V-32157\" do\n  title \"The DBMS must limit the number of concurrent sessions to an\norganization-defined number per user for all accounts and/or account types.\"\n  desc  \"Database management includes the ability to control the number of\nusers and user sessions utilizing a DBMS. Unlimited concurrent connections to\nthe DBMS could allow a successful Denial of Service (DoS) attack by exhausting\nconnection resources; and a system can also fail or be degraded by an overload\nof legitimate users. Limiting the number of concurrent sessions per user is\nhelpful in reducing these risks.\n\n    This requirement addresses concurrent session control for a single account.\nIt does not address concurrent sessions by a single user via multiple system\naccounts; and it does not deal with the total number of sessions across all\naccounts.\n\n    The capability to limit the number of concurrent sessions per user must be\nconfigured in or added to the DBMS (for example, by use of a logon trigger),\nwhen this is technically feasible. Note that it is not sufficient to limit\nsessions via a web server or application server alone, because legitimate users\nand adversaries can potentially connect to the DBMS by other means.\n\n    The organization will need to define the maximum number of concurrent\nsessions by account type, by account, or a combination thereof. In deciding on\nthe appropriate number, it is important to consider the work requirements of\nthe various types of users. For example, 2 might be an acceptable limit for\ngeneral users accessing the database via an application; but 10 might be too\nfew for a database administrator using a database management GUI tool, where\neach query tab and navigation pane may count as a separate session.\n\n    (Sessions may also be referred to as connections or logons, which for the\npurposes of this requirement are synonyms.)\n  \"\n  desc  \"check\", \"\n     Check CouchDB settings and documentation and verify the limit of the\nnumber of concurrent sessions to an organization-defined number per user for\nall accounts and/or account types.\n    Discuss oraganization-defined number of concurrent sessions per user\naccount.\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"max_connections\\\" <path to default.ini>\n    if the max_connections is over the defined amount this is a finding.\n\n    If it is not set to limit the number of concurrent sessions to an\norganization-defined number per user for all accounts and/or account types,\nthis is a finding\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to produce and verify the limit of the number of\nconcurrent sessions to an organization-defined number per user for all accounts\nand/or account types.\n    # find . -name \\\"default.ini\\\"\n    # set \\\"max_connections\\\" equal to the organization defined amount.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000001-DB-000031\"\n  tag \"gid\": \"V-32157\"\n  tag \"rid\": \"SV-42474r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000001-DB-000031\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000054\"]\n  tag \"nist\": [\"AC-10\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32157.rb"},"waiver_data":{},"results":[]},{"id":"V-32192","title":"The DBMS must integrate with an organization-level\nauthentication/access mechanism providing account management and automation for\nall users, groups, roles, and any other principals.","desc":"Enterprise environments make account management for applications and\ndatabases challenging and complex. A manual process for account management\nfunctions adds the risk of a potential oversight or other error. Managing\naccounts for the same person in multiple places is inefficient and prone to\nproblems with consistency and synchronization.\n\n    A comprehensive application account management process that includes\nautomation helps to ensure that accounts designated as requiring attention are\nconsistently and promptly addressed.\n\n    Examples include, but are not limited to, using automation to take action\non multiple accounts designated as inactive, suspended, or terminated, or by\ndisabling accounts located in non-centralized account stores, such as multiple\nservers. Account management functions can also include: assignment of group or\nrole membership; identifying account type; specifying user access\nauthorizations (i.e., privileges); account removal, update, or termination; and\nadministrative alerts. The use of automated mechanisms can include, for\nexample: using email or text messaging to notify account managers when users\nare terminated or transferred; using the information system to monitor account\nusage; and using automated telephone notification to report atypical system\naccount usage.\n\n    The DBMS must be configured to automatically utilize organization-level\naccount management functions, and these functions must immediately enforce the\norganization's current account policy.\n\n    Automation may be comprised of differing technologies that when placed\ntogether contain an overall mechanism supporting an organization's automated\naccount management requirements.","descriptions":[{"label":"default","data":"Enterprise environments make account management for applications and\ndatabases challenging and complex. A manual process for account management\nfunctions adds the risk of a potential oversight or other error. Managing\naccounts for the same person in multiple places is inefficient and prone to\nproblems with consistency and synchronization.\n\n    A comprehensive application account management process that includes\nautomation helps to ensure that accounts designated as requiring attention are\nconsistently and promptly addressed.\n\n    Examples include, but are not limited to, using automation to take action\non multiple accounts designated as inactive, suspended, or terminated, or by\ndisabling accounts located in non-centralized account stores, such as multiple\nservers. Account management functions can also include: assignment of group or\nrole membership; identifying account type; specifying user access\nauthorizations (i.e., privileges); account removal, update, or termination; and\nadministrative alerts. The use of automated mechanisms can include, for\nexample: using email or text messaging to notify account managers when users\nare terminated or transferred; using the information system to monitor account\nusage; and using automated telephone notification to report atypical system\naccount usage.\n\n    The DBMS must be configured to automatically utilize organization-level\naccount management functions, and these functions must immediately enforce the\norganization's current account policy.\n\n    Automation may be comprised of differing technologies that when placed\ntogether contain an overall mechanism supporting an organization's automated\naccount management requirements."},{"label":"check","data":"Check CouchDB settings and documentation and verify an organization-level\nauthentication/access mechanism providing account management and automation for\nall users, groups, roles, and any other principals.\n\n    If all accounts are authenticated by the organization-level\nauthentication/access mechanism, such as LDAP or Kerberos and not by CouchDB,\nthis is not a finding.\n\n    This would need to be done on a basis to basis situation depending on the\nauthentication/access mechanism used , if no authentication/access mechanism is\nin place this is a finding.\n\n    All records must use an auth-method of gss, sspi, or ldap.\n\n    If there are any records with a different auth-method than gss, sspi, or\nldap, review the system documentation for justification and approval of these\nrecords.\n\n    If there are any records with a different auth-method than gss, sspi, or\nldap, that are not documented and approved, this is a finding.\n\n    If it is not set to an organization-level authentication/access mechanism\nproviding account management and automation for all users, groups, roles, and\nany other principals, this is a finding."},{"label":"fix","data":"Implement authentication/access mechanisms to use an\nauth-method of gss, sspi, or ldap. Or discuss with management other approved\nmethods."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000023-DB-000001","gid":"V-32192","rid":"SV-42509r3_rule","stig_id":"SRG-APP-000023-DB-000001","fix_id":null,"cci":["CCI-000015"],"nist":["AC-2 (1)","Rev_4"]},"code":"control \"V-32192\" do\n  title \"The DBMS must integrate with an organization-level\nauthentication/access mechanism providing account management and automation for\nall users, groups, roles, and any other principals.\"\n  desc  \"Enterprise environments make account management for applications and\ndatabases challenging and complex. A manual process for account management\nfunctions adds the risk of a potential oversight or other error. Managing\naccounts for the same person in multiple places is inefficient and prone to\nproblems with consistency and synchronization.\n\n    A comprehensive application account management process that includes\nautomation helps to ensure that accounts designated as requiring attention are\nconsistently and promptly addressed.\n\n    Examples include, but are not limited to, using automation to take action\non multiple accounts designated as inactive, suspended, or terminated, or by\ndisabling accounts located in non-centralized account stores, such as multiple\nservers. Account management functions can also include: assignment of group or\nrole membership; identifying account type; specifying user access\nauthorizations (i.e., privileges); account removal, update, or termination; and\nadministrative alerts. The use of automated mechanisms can include, for\nexample: using email or text messaging to notify account managers when users\nare terminated or transferred; using the information system to monitor account\nusage; and using automated telephone notification to report atypical system\naccount usage.\n\n    The DBMS must be configured to automatically utilize organization-level\naccount management functions, and these functions must immediately enforce the\norganization's current account policy.\n\n    Automation may be comprised of differing technologies that when placed\ntogether contain an overall mechanism supporting an organization's automated\naccount management requirements.\n  \"\n  desc  \"check\", \"\n     Check CouchDB settings and documentation and verify an organization-level\nauthentication/access mechanism providing account management and automation for\nall users, groups, roles, and any other principals.\n\n    If all accounts are authenticated by the organization-level\nauthentication/access mechanism, such as LDAP or Kerberos and not by CouchDB,\nthis is not a finding.\n\n    This would need to be done on a basis to basis situation depending on the\nauthentication/access mechanism used , if no authentication/access mechanism is\nin place this is a finding.\n\n    All records must use an auth-method of gss, sspi, or ldap.\n\n    If there are any records with a different auth-method than gss, sspi, or\nldap, review the system documentation for justification and approval of these\nrecords.\n\n    If there are any records with a different auth-method than gss, sspi, or\nldap, that are not documented and approved, this is a finding.\n\n    If it is not set to an organization-level authentication/access mechanism\nproviding account management and automation for all users, groups, roles, and\nany other principals, this is a finding.\n  \"\n  desc  \"fix\", \"Implement authentication/access mechanisms to use an\nauth-method of gss, sspi, or ldap. Or discuss with management other approved\nmethods.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000023-DB-000001\"\n  tag \"gid\": \"V-32192\"\n  tag \"rid\": \"SV-42509r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000023-DB-000001\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000015\"]\n  tag \"nist\": [\"AC-2 (1)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32192.rb"},"waiver_data":{},"results":[]},{"id":"V-32203","title":"The DBMS must enforce approved authorizations for logical access to\ninformation and system resources in accordance with applicable access control\npolicies.","desc":"Authentication with a DoD-approved PKI certificate does not\nnecessarily imply authorization to access the DBMS.  To mitigate the risk of\nunauthorized access to sensitive information by entities that have been issued\ncertificates by DoD-approved PKIs, all DoD systems, including databases, must\nbe properly configured to implement access control policies.\n\n    Successful authentication must not automatically give an entity access to\nan asset or security boundary. Authorization procedures and controls must be\nimplemented to ensure each authenticated entity also has a validated and\ncurrent authorization. Authorization is the process of determining whether an\nentity, once authenticated, is permitted to access a specific asset.\nInformation systems use access control policies and enforcement mechanisms to\nimplement this requirement.\n\n    Access control policies include identity-based policies, role-based\npolicies, and attribute-based policies. Access enforcement mechanisms include\naccess control lists, access control matrices, and cryptography. These policies\nand mechanisms must be employed by the application to control access between\nusers (or processes acting on behalf of users) and objects (e.g., devices,\nfiles, records, processes, programs, and domains) in the information system.\n\n    This requirement is applicable to access control enforcement applications,\na category that includes database management systems.  If the DBMS does not\nfollow applicable policy when approving access, it may be in conflict with\nnetworks or other applications in the information system. This may result in\nusers either gaining or being denied access inappropriately and in conflict\nwith applicable policy.","descriptions":[{"label":"default","data":"Authentication with a DoD-approved PKI certificate does not\nnecessarily imply authorization to access the DBMS.  To mitigate the risk of\nunauthorized access to sensitive information by entities that have been issued\ncertificates by DoD-approved PKIs, all DoD systems, including databases, must\nbe properly configured to implement access control policies.\n\n    Successful authentication must not automatically give an entity access to\nan asset or security boundary. Authorization procedures and controls must be\nimplemented to ensure each authenticated entity also has a validated and\ncurrent authorization. Authorization is the process of determining whether an\nentity, once authenticated, is permitted to access a specific asset.\nInformation systems use access control policies and enforcement mechanisms to\nimplement this requirement.\n\n    Access control policies include identity-based policies, role-based\npolicies, and attribute-based policies. Access enforcement mechanisms include\naccess control lists, access control matrices, and cryptography. These policies\nand mechanisms must be employed by the application to control access between\nusers (or processes acting on behalf of users) and objects (e.g., devices,\nfiles, records, processes, programs, and domains) in the information system.\n\n    This requirement is applicable to access control enforcement applications,\na category that includes database management systems.  If the DBMS does not\nfollow applicable policy when approving access, it may be in conflict with\nnetworks or other applications in the information system. This may result in\nusers either gaining or being denied access inappropriately and in conflict\nwith applicable policy."},{"label":"check","data":"From the system security plan or equivalent documentation, determine the\nappropriate permissions on database objects for each kind (group role) of user.\nIf this documentation is missing, this is a finding.\n\n    Check the permissions of all databases.\n    #GET /{db}/_security\n    Review all roles and their associated privileges. If any roles' privileges\nexceed those documented, this is a finding.\n\n\n    Review all entries and their associated authentication methods. If any\nentries do not have their documented authentication requirements, this is a\nfinding."},{"label":"fix","data":"Use the following command to set security objects correctly:\n\n    # PUT /{db}/_security\n\n    Example request:\n    shell> curl http://localhost:5984/pineapple/_security -X PUT -H\n'content-type: application/json' -H 'accept: application/json' -d\n'{\"admins\":{\"names\":[\"superuser\"],\"roles\":[\"admins\"]},\"members\":{\"names\":\n[\"user1\",\"user2\"],\"roles\": [\"developers\"]}}'"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000033-DB-000084","gid":"V-32203","rid":"SV-42520r3_rule","stig_id":"SRG-APP-000033-DB-000084","fix_id":null,"cci":["CCI-000213"],"nist":["AC-3","Rev_4"]},"code":"control \"V-32203\" do\n  title \"The DBMS must enforce approved authorizations for logical access to\ninformation and system resources in accordance with applicable access control\npolicies.\"\n  desc  \"Authentication with a DoD-approved PKI certificate does not\nnecessarily imply authorization to access the DBMS.  To mitigate the risk of\nunauthorized access to sensitive information by entities that have been issued\ncertificates by DoD-approved PKIs, all DoD systems, including databases, must\nbe properly configured to implement access control policies.\n\n    Successful authentication must not automatically give an entity access to\nan asset or security boundary. Authorization procedures and controls must be\nimplemented to ensure each authenticated entity also has a validated and\ncurrent authorization. Authorization is the process of determining whether an\nentity, once authenticated, is permitted to access a specific asset.\nInformation systems use access control policies and enforcement mechanisms to\nimplement this requirement.\n\n    Access control policies include identity-based policies, role-based\npolicies, and attribute-based policies. Access enforcement mechanisms include\naccess control lists, access control matrices, and cryptography. These policies\nand mechanisms must be employed by the application to control access between\nusers (or processes acting on behalf of users) and objects (e.g., devices,\nfiles, records, processes, programs, and domains) in the information system.\n\n    This requirement is applicable to access control enforcement applications,\na category that includes database management systems.  If the DBMS does not\nfollow applicable policy when approving access, it may be in conflict with\nnetworks or other applications in the information system. This may result in\nusers either gaining or being denied access inappropriately and in conflict\nwith applicable policy.\n  \"\n  desc  \"check\", \"\n    From the system security plan or equivalent documentation, determine the\nappropriate permissions on database objects for each kind (group role) of user.\nIf this documentation is missing, this is a finding.\n\n    Check the permissions of all databases.\n    #GET /{db}/_security\n    Review all roles and their associated privileges. If any roles' privileges\nexceed those documented, this is a finding.\n\n\n    Review all entries and their associated authentication methods. If any\nentries do not have their documented authentication requirements, this is a\nfinding.\n  \"\n  desc  \"fix\", \"\n    Use the following command to set security objects correctly:\n\n    # PUT /{db}/_security\n\n    Example request:\n    shell> curl http://localhost:5984/pineapple/_security -X PUT -H\n'content-type: application/json' -H 'accept: application/json' -d\n'{\\\"admins\\\":{\\\"names\\\":[\\\"superuser\\\"],\\\"roles\\\":[\\\"admins\\\"]},\\\"members\\\":{\\\"names\\\":\n[\\\"user1\\\",\\\"user2\\\"],\\\"roles\\\": [\\\"developers\\\"]}}'\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000033-DB-000084\"\n  tag \"gid\": \"V-32203\"\n  tag \"rid\": \"SV-42520r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000033-DB-000084\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000213\"]\n  tag \"nist\": [\"AC-3\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32203.rb"},"waiver_data":{},"results":[]},{"id":"V-32347","title":"The DBMS must protect against a user falsely repudiating having\nperformed organization-defined actions.","desc":"Non-repudiation of actions taken is required in order to maintain data\nintegrity. Examples of particular actions taken by individuals include creating\ninformation, sending a message, approving information (e.g., indicating\nconcurrence or signing a contract), and receiving a message.\n\n    Non-repudiation protects against later claims by a user of not having\ncreated, modified, or deleted a particular data item or collection of data in\nthe database.\n\n    In designing a database, the organization must define the types of data and\nthe user actions that must be protected from repudiation. The implementation\nmust then include building audit features into the application data tables and\nconfiguring the DBMS's audit tools to capture the necessary audit trail. Design\nand implementation also must ensure that applications pass individual user\nidentification to the DBMS, even where the application connects to the DBMS\nwith a standard, shared account.","descriptions":[{"label":"default","data":"Non-repudiation of actions taken is required in order to maintain data\nintegrity. Examples of particular actions taken by individuals include creating\ninformation, sending a message, approving information (e.g., indicating\nconcurrence or signing a contract), and receiving a message.\n\n    Non-repudiation protects against later claims by a user of not having\ncreated, modified, or deleted a particular data item or collection of data in\nthe database.\n\n    In designing a database, the organization must define the types of data and\nthe user actions that must be protected from repudiation. The implementation\nmust then include building audit features into the application data tables and\nconfiguring the DBMS's audit tools to capture the necessary audit trail. Design\nand implementation also must ensure that applications pass individual user\nidentification to the DBMS, even where the application connects to the DBMS\nwith a standard, shared account."},{"label":"check","data":"Check CouchDB settings and documentation and protect against a user falsely\nrepudiating having performed organization-defined actions.\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    # grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to protect against a user falsely repudiating having\nperformed organization-defined actions, this is a finding."},{"label":"fix","data":"Configure CouchDB to and protect against a user falsely repudiating having\nperformed organization-defined actions.\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000080-DB-000063","gid":"V-32347","rid":"SV-42684r4_rule","stig_id":"SRG-APP-000080-DB-000063","fix_id":null,"cci":["CCI-000166"],"nist":["AU-10","Rev_4"]},"code":"control \"V-32347\" do\n  title \"The DBMS must protect against a user falsely repudiating having\nperformed organization-defined actions.\"\n  desc  \"Non-repudiation of actions taken is required in order to maintain data\nintegrity. Examples of particular actions taken by individuals include creating\ninformation, sending a message, approving information (e.g., indicating\nconcurrence or signing a contract), and receiving a message.\n\n    Non-repudiation protects against later claims by a user of not having\ncreated, modified, or deleted a particular data item or collection of data in\nthe database.\n\n    In designing a database, the organization must define the types of data and\nthe user actions that must be protected from repudiation. The implementation\nmust then include building audit features into the application data tables and\nconfiguring the DBMS's audit tools to capture the necessary audit trail. Design\nand implementation also must ensure that applications pass individual user\nidentification to the DBMS, even where the application connects to the DBMS\nwith a standard, shared account.\n  \"\n  desc  \"check\", \"\n    Check CouchDB settings and documentation and protect against a user falsely\nrepudiating having performed organization-defined actions.\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    # grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to protect against a user falsely repudiating having\nperformed organization-defined actions, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to and protect against a user falsely repudiating having\nperformed organization-defined actions.\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000080-DB-000063\"\n  tag \"gid\": \"V-32347\"\n  tag \"rid\": \"SV-42684r4_rule\"\n  tag \"stig_id\": \"SRG-APP-000080-DB-000063\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000166\"]\n  tag \"nist\": [\"AU-10\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32347.rb"},"waiver_data":{},"results":[]},{"id":"V-32362","title":null,"desc":"Without the capability to generate audit records, it would be\ndifficult to establish, correlate, and investigate the events relating to an\nincident or identify those responsible for one.\n\n    Audit records can be generated from various components within the DBMS\n(e.g., process, module). Certain specific application functionalities may be\naudited as well. The list of audited events is the set of events for which\naudits are to be generated. This set of events is typically a subset of the\nlist of all events for which the system is capable of generating audit records.\n\n    DoD has defined the list of events for which the DBMS will provide an audit\nrecord generation capability as the following:\n\n    (i) Successful and unsuccessful attempts to access, modify, or delete\nprivileges, security objects, security levels, or categories of information\n(e.g., classification levels);\n\n    (ii) Access actions, such as successful and unsuccessful logon attempts,\nprivileged activities, or other system-level access, starting and ending time\nfor user access to the system, concurrent logons from different workstations,\nsuccessful and unsuccessful accesses to objects, all program initiations, and\nall direct access to the information system; and\n\n    (iii) All account creation, modification, disabling, and termination\nactions.\n\n    Organizations may define additional events requiring continuous or ad hoc\nauditing.","descriptions":[{"label":"default","data":"Without the capability to generate audit records, it would be\ndifficult to establish, correlate, and investigate the events relating to an\nincident or identify those responsible for one.\n\n    Audit records can be generated from various components within the DBMS\n(e.g., process, module). Certain specific application functionalities may be\naudited as well. The list of audited events is the set of events for which\naudits are to be generated. This set of events is typically a subset of the\nlist of all events for which the system is capable of generating audit records.\n\n    DoD has defined the list of events for which the DBMS will provide an audit\nrecord generation capability as the following:\n\n    (i) Successful and unsuccessful attempts to access, modify, or delete\nprivileges, security objects, security levels, or categories of information\n(e.g., classification levels);\n\n    (ii) Access actions, such as successful and unsuccessful logon attempts,\nprivileged activities, or other system-level access, starting and ending time\nfor user access to the system, concurrent logons from different workstations,\nsuccessful and unsuccessful accesses to objects, all program initiations, and\nall direct access to the information system; and\n\n    (iii) All account creation, modification, disabling, and termination\nactions.\n\n    Organizations may define additional events requiring continuous or ad hoc\nauditing."},{"label":"check","data":"Check CouchDB auditing to determine whether organization-defined auditable\nevents are being audited by the system.\n\n    If organization-defined auditable events are not being audited, this is a\nfinding.\n\n    The level of auditing configured can be found by running:\n    # find . -name \"default.ini\"\n    # grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding."},{"label":"fix","data":"# find . -name \"default.ini\"\n# set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000089-DB-000064","gid":"V-32362","rid":"SV-42699r3_rule","stig_id":"SRG-APP-000089-DB-000064","fix_id":null,"cci":["CCI-000169"],"nist":["AU-12 a","Rev_4"]},"code":"control \"V-32362\" do\n  desc  \"Without the capability to generate audit records, it would be\ndifficult to establish, correlate, and investigate the events relating to an\nincident or identify those responsible for one.\n\n    Audit records can be generated from various components within the DBMS\n(e.g., process, module). Certain specific application functionalities may be\naudited as well. The list of audited events is the set of events for which\naudits are to be generated. This set of events is typically a subset of the\nlist of all events for which the system is capable of generating audit records.\n\n    DoD has defined the list of events for which the DBMS will provide an audit\nrecord generation capability as the following:\n\n    (i) Successful and unsuccessful attempts to access, modify, or delete\nprivileges, security objects, security levels, or categories of information\n(e.g., classification levels);\n\n    (ii) Access actions, such as successful and unsuccessful logon attempts,\nprivileged activities, or other system-level access, starting and ending time\nfor user access to the system, concurrent logons from different workstations,\nsuccessful and unsuccessful accesses to objects, all program initiations, and\nall direct access to the information system; and\n\n    (iii) All account creation, modification, disabling, and termination\nactions.\n\n    Organizations may define additional events requiring continuous or ad hoc\nauditing.\n  \"\n  desc  \"check\", \"\n    Check CouchDB auditing to determine whether organization-defined auditable\nevents are being audited by the system.\n\n    If organization-defined auditable events are not being audited, this is a\nfinding.\n\n    The level of auditing configured can be found by running:\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n  \"\n  desc  \"fix\", \"\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000089-DB-000064\"\n  tag \"gid\": \"V-32362\"\n  tag \"rid\": \"SV-42699r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000089-DB-000064\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000169\"]\n  tag \"nist\": [\"AU-12 a\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32362.rb"},"waiver_data":{},"results":[]},{"id":"V-32363","title":"The DBMS must allow only the ISSM (or individuals or roles appointed\nby the ISSM) to select which auditable events are to be audited.","desc":null,"descriptions":[{"label":"check","data":"Review the access permissions to tools used to view or modify audit log\nconfigurations. These tools may include features within CouchDB itself or\nsoftware external to the database.\n\n    Logging configuration is defined in the default.ini configuration file and\nother .ini files. Only ISSM (or individuals or roles appointed by the ISSM)\nshould have permission to write to the file.\n\n    Verify the permission of the .ini files with the following commands:\n\n      # find . -name \"*.ini\"\n      # ls -la <path of .ini file>\n\n    If any of these .ini files give write permissions to any user other than\nISSM (or individuals or roles appointed by the ISSM), this is a finding."},{"label":"fix","data":"# find . -name \"default.ini\"\n# set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000090-DB-000065","gid":"V-32363","rid":"SV-42700r3_rule","stig_id":"SRG-APP-000090-DB-000065","fix_id":null,"cci":["CCI-000171"],"nist":["AU-12 b","Rev_4"]},"code":"control \"V-32363\" do\n  title \"The DBMS must allow only the ISSM (or individuals or roles appointed\nby the ISSM) to select which auditable events are to be audited.\"\n  desc  \"check\", \"\n    Review the access permissions to tools used to view or modify audit log\nconfigurations. These tools may include features within CouchDB itself or\nsoftware external to the database.\n\n    Logging configuration is defined in the default.ini configuration file and\nother .ini files. Only ISSM (or individuals or roles appointed by the ISSM)\nshould have permission to write to the file.\n\n    Verify the permission of the .ini files with the following commands:\n\n      # find . -name \\\"*.ini\\\"\n      # ls -la <path of .ini file>\n\n    If any of these .ini files give write permissions to any user other than\nISSM (or individuals or roles appointed by the ISSM), this is a finding.\n  \"\n  desc  \"fix\", \"\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000090-DB-000065\"\n  tag \"gid\": \"V-32363\"\n  tag \"rid\": \"SV-42700r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000090-DB-000065\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000171\"]\n  tag \"nist\": [\"AU-12 b\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32363.rb"},"waiver_data":{},"results":[]},{"id":"V-32364","title":"The DBMS must be able to generate audit records when\nprivileges/permissions are retrieved.","desc":"Under some circumstances, it may be useful to monitor who/what is\nreading privilege/permission/role information. Therefore, it must be possible\nto configure auditing to do this. DBMSs typically make such information\navailable through views or functions.\n\n    This requirement addresses explicit requests for privilege/permission/role\nmembership information. It does not refer to the implicit retrieval of\nprivileges/permissions/role memberships that the DBMS continually performs to\ndetermine if any and every action on the database is permitted.","descriptions":[{"label":"default","data":"Under some circumstances, it may be useful to monitor who/what is\nreading privilege/permission/role information. Therefore, it must be possible\nto configure auditing to do this. DBMSs typically make such information\navailable through views or functions.\n\n    This requirement addresses explicit requests for privilege/permission/role\nmembership information. It does not refer to the implicit retrieval of\nprivileges/permissions/role memberships that the DBMS continually performs to\ndetermine if any and every action on the database is permitted."},{"label":"check","data":"Check CouchDB settings and documentation and be able to generate audit\nrecords when privileges/permissions are retrieved.\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to generate audit records when privileges/permissions are\nretrieved, this is a finding."},{"label":"fix","data":"As the system administrator, change the permissions of the configuration\nfiles:\n\n      # sudo chown -R <Database Admin>:<Database Admin Group> <Configuration\nfile>\n      # sudo chmod 600 <Configuration file>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000091-DB-000066","gid":"V-32364","rid":"SV-42701r3_rule","stig_id":"SRG-APP-000091-DB-000066","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-32364\" do\n  title \"The DBMS must be able to generate audit records when\nprivileges/permissions are retrieved.\"\n  desc  \"Under some circumstances, it may be useful to monitor who/what is\nreading privilege/permission/role information. Therefore, it must be possible\nto configure auditing to do this. DBMSs typically make such information\navailable through views or functions.\n\n    This requirement addresses explicit requests for privilege/permission/role\nmembership information. It does not refer to the implicit retrieval of\nprivileges/permissions/role memberships that the DBMS continually performs to\ndetermine if any and every action on the database is permitted.\n  \"\n  desc  \"check\", \"\n     Check CouchDB settings and documentation and be able to generate audit\nrecords when privileges/permissions are retrieved.\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to generate audit records when privileges/permissions are\nretrieved, this is a finding.\n  \"\n  desc  \"fix\", \"\n    As the system administrator, change the permissions of the configuration\nfiles:\n\n      # sudo chown -R <Database Admin>:<Database Admin Group> <Configuration\nfile>\n      # sudo chmod 600 <Configuration file>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000091-DB-000066\"\n  tag \"gid\": \"V-32364\"\n  tag \"rid\": \"SV-42701r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000091-DB-000066\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32364.rb"},"waiver_data":{},"results":[]},{"id":"V-32365","title":"The DBMS must initiate session auditing upon startup.","desc":"Session auditing is for use when a user's activities are under\ninvestigation. To be sure of capturing all activity during those periods when\nsession auditing is in use, it needs to be in operation for the whole time the\nDBMS is running.","descriptions":[{"label":"default","data":"Session auditing is for use when a user's activities are under\ninvestigation. To be sure of capturing all activity during those periods when\nsession auditing is in use, it needs to be in operation for the whole time the\nDBMS is running."},{"label":"check","data":"Check CouchDB settings and documentation initiate session auditing upon\nstartup.\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to initiate session auditing upon startup, this is a\nfinding."},{"label":"fix","data":"Configure CouchDB to be able to generate audit records when\nprivileges/permissions are retrieved.\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000092-DB-000208","gid":"V-32365","rid":"SV-42702r2_rule","stig_id":"SRG-APP-000092-DB-000208","fix_id":null,"cci":["CCI-001464"],"nist":["AU-14 (1)","Rev_4"]},"code":"control \"V-32365\" do\n  title 'The DBMS must initiate session auditing upon startup.'\n  desc  \"Session auditing is for use when a user's activities are under\ninvestigation. To be sure of capturing all activity during those periods when\nsession auditing is in use, it needs to be in operation for the whole time the\nDBMS is running.\"\n  desc  \"check\", \"\n     Check CouchDB settings and documentation initiate session auditing upon\nstartup.\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to initiate session auditing upon startup, this is a\nfinding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to be able to generate audit records when\nprivileges/permissions are retrieved.\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000092-DB-000208\"\n  tag \"gid\": \"V-32365\"\n  tag \"rid\": \"SV-42702r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000092-DB-000208\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001464\"]\n  tag \"nist\": [\"AU-14 (1)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32365.rb"},"waiver_data":{},"results":[]},{"id":"V-32368","title":"The DBMS must produce audit records containing sufficient information\nto establish what type of events occurred.","desc":"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing what type of event occurred, it would\nbe difficult to establish, correlate, and investigate the events relating to an\nincident or identify those responsible for one.\n\n    Audit record content that may be necessary to satisfy the requirement of\nthis policy includes, for example, time stamps, user/process identifiers, event\ndescriptions, success/fail indications, filenames involved, and access control\nor flow control rules invoked.\n\n    Associating event types with detected events in the application and audit\nlogs provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication.\n\n    Database software is capable of a range of actions on data stored within\nthe database. It is important, for accurate forensic analysis, to know exactly\nwhat actions were performed. This requires specific information regarding the\nevent type an audit record is referring to. If event type information is not\nrecorded and stored with the audit record, the record itself is of very limited\nuse.","descriptions":[{"label":"default","data":"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing what type of event occurred, it would\nbe difficult to establish, correlate, and investigate the events relating to an\nincident or identify those responsible for one.\n\n    Audit record content that may be necessary to satisfy the requirement of\nthis policy includes, for example, time stamps, user/process identifiers, event\ndescriptions, success/fail indications, filenames involved, and access control\nor flow control rules invoked.\n\n    Associating event types with detected events in the application and audit\nlogs provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication.\n\n    Database software is capable of a range of actions on data stored within\nthe database. It is important, for accurate forensic analysis, to know exactly\nwhat actions were performed. This requires specific information regarding the\nevent type an audit record is referring to. If event type information is not\nrecorded and stored with the audit record, the record itself is of very limited\nuse."},{"label":"check","data":"Check CouchDB settings and documentation produce audit records containing\nsufficient information to establish what type of events occurred.\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to produce audit records containing sufficient information\nto establish what type of events occurred, this is a finding."},{"label":"fix","data":"Configure CouchDB to produce audit records containing sufficient\ninformation to establish what type of events occurred.\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000095-DB-000039","gid":"V-32368","rid":"SV-42705r3_rule","stig_id":"SRG-APP-000095-DB-000039","fix_id":null,"cci":["CCI-000130"],"nist":["AU-3","Rev_4"]},"code":"control \"V-32368\" do\n  title \"The DBMS must produce audit records containing sufficient information\nto establish what type of events occurred.\"\n  desc  \"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing what type of event occurred, it would\nbe difficult to establish, correlate, and investigate the events relating to an\nincident or identify those responsible for one.\n\n    Audit record content that may be necessary to satisfy the requirement of\nthis policy includes, for example, time stamps, user/process identifiers, event\ndescriptions, success/fail indications, filenames involved, and access control\nor flow control rules invoked.\n\n    Associating event types with detected events in the application and audit\nlogs provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication.\n\n    Database software is capable of a range of actions on data stored within\nthe database. It is important, for accurate forensic analysis, to know exactly\nwhat actions were performed. This requires specific information regarding the\nevent type an audit record is referring to. If event type information is not\nrecorded and stored with the audit record, the record itself is of very limited\nuse.\n  \"\n  desc  \"check\", \"\n     Check CouchDB settings and documentation produce audit records containing\nsufficient information to establish what type of events occurred.\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to produce audit records containing sufficient information\nto establish what type of events occurred, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to produce audit records containing sufficient\ninformation to establish what type of events occurred.\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000095-DB-000039\"\n  tag \"gid\": \"V-32368\"\n  tag \"rid\": \"SV-42705r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000095-DB-000039\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000130\"]\n  tag \"nist\": [\"AU-3\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32368.rb"},"waiver_data":{},"results":[]},{"id":"V-32369","title":"The DBMS must produce audit records containing time stamps to\nestablish when the events occurred.","desc":"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing when events occurred, it is impossible\nto establish, correlate, and investigate the events relating to an incident.\n\n    In order to compile an accurate risk assessment and provide forensic\nanalysis, it is essential for security personnel to know the date and time when\nevents occurred.\n\n    Associating the date and time with detected events in the application and\naudit logs provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication.\n\n    Database software is capable of a range of actions on data stored within\nthe database. It is important, for accurate forensic analysis, to know exactly\nwhen specific actions were performed. This requires the date and time an audit\nrecord is referring to. If date and time information is not recorded and stored\nwith the audit record, the record itself is of very limited use.","descriptions":[{"label":"default","data":"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing when events occurred, it is impossible\nto establish, correlate, and investigate the events relating to an incident.\n\n    In order to compile an accurate risk assessment and provide forensic\nanalysis, it is essential for security personnel to know the date and time when\nevents occurred.\n\n    Associating the date and time with detected events in the application and\naudit logs provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication.\n\n    Database software is capable of a range of actions on data stored within\nthe database. It is important, for accurate forensic analysis, to know exactly\nwhen specific actions were performed. This requires the date and time an audit\nrecord is referring to. If date and time information is not recorded and stored\nwith the audit record, the record itself is of very limited use."},{"label":"check","data":"Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to produce audit records containing time\nstamps to establish when the events occurred.\n\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"writer = \" <path to default.ini>\n    if line is equal to journald, this is a finding.\n\n    If it is not set to produce audit records containing time stamps to\nestablish when the events occurred, this is a finding."},{"label":"fix","data":"If applicable remove or comment out the line writer = journald\nwriter needs to be set equal to file.\nFile variable needs to be set to path to where log file will be stored.\n# set writer = <path to log file>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000096-DB-000040","gid":"V-32369","rid":"SV-42706r3_rule","stig_id":"SRG-APP-000096-DB-000040","fix_id":null,"cci":["CCI-000131"],"nist":["AU-3","Rev_4"]},"code":"control \"V-32369\" do\n  title \"The DBMS must produce audit records containing time stamps to\nestablish when the events occurred.\"\n  desc  \"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing when events occurred, it is impossible\nto establish, correlate, and investigate the events relating to an incident.\n\n    In order to compile an accurate risk assessment and provide forensic\nanalysis, it is essential for security personnel to know the date and time when\nevents occurred.\n\n    Associating the date and time with detected events in the application and\naudit logs provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication.\n\n    Database software is capable of a range of actions on data stored within\nthe database. It is important, for accurate forensic analysis, to know exactly\nwhen specific actions were performed. This requires the date and time an audit\nrecord is referring to. If date and time information is not recorded and stored\nwith the audit record, the record itself is of very limited use.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to produce audit records containing time\nstamps to establish when the events occurred.\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"writer = \\\" <path to default.ini>\n    if line is equal to journald, this is a finding.\n\n    If it is not set to produce audit records containing time stamps to\nestablish when the events occurred, this is a finding.\n  \"\n  desc  \"fix\", \"\n    If applicable remove or comment out the line writer = journald\n    writer needs to be set equal to file.\n    File variable needs to be set to path to where log file will be stored.\n    # set writer = <path to log file>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000096-DB-000040\"\n  tag \"gid\": \"V-32369\"\n  tag \"rid\": \"SV-42706r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000096-DB-000040\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000131\"]\n  tag \"nist\": [\"AU-3\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32369.rb"},"waiver_data":{},"results":[]},{"id":"V-32370","title":"The DBMS must produce audit records containing sufficient information\nto establish where the events occurred.","desc":"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing where events occurred, it is impossible\nto establish, correlate, and investigate the events relating to an incident.\n\n    In order to compile an accurate risk assessment and provide forensic\nanalysis, it is essential for security personnel to know where events occurred,\nsuch as application components, modules, session identifiers, filenames, host\nnames, and functionality.\n\n    Associating information about where the event occurred within the\napplication provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication.","descriptions":[{"label":"default","data":"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing where events occurred, it is impossible\nto establish, correlate, and investigate the events relating to an incident.\n\n    In order to compile an accurate risk assessment and provide forensic\nanalysis, it is essential for security personnel to know where events occurred,\nsuch as application components, modules, session identifiers, filenames, host\nnames, and functionality.\n\n    Associating information about where the event occurred within the\napplication provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication."}],"impact":0.5,"refs":[],"tags":{},"code":"control \"V-32370\" do\n  title \"The DBMS must produce audit records containing sufficient information\nto establish where the events occurred.\"\n  desc  \"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing where events occurred, it is impossible\nto establish, correlate, and investigate the events relating to an incident.\n\n    In order to compile an accurate risk assessment and provide forensic\nanalysis, it is essential for security personnel to know where events occurred,\nsuch as application components, modules, session identifiers, filenames, host\nnames, and functionality.\n\n    Associating information about where the event occurred within the\napplication provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication.\n  \"\n  desc  \"check\", \"\n    Check CouchDB settings and existing audit records to verify information\nspecific to where the event occurred is being captured and stored with the\naudit records.\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\x93file = /var/log/couchdb/couch.log\\x94\n\n    If line does not exist, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB audit settings to include where the event occurred as\npart of the audit record.\n    File variable needs to be set to path to where log file will be stored.\n    #writer = file\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000097-DB-000041\"\n  tag \"gid\": \"V-32370\"\n  tag \"rid\": \"SV-42707r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000097-DB-000041\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000132\"]\n  tag \"nist\": [\"AU-3\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32370.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Control Source Code Error C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32370.rb:3 ","run_time":0.000324,"start_time":"2020-07-17T16:26:10-04:00","message":"invalid byte sequence in UTF-8","exception":"RuntimeError","backtrace":["C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/rule.rb:61:in `block (2 levels) in initialize'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `instance_exec'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `block in with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `block in with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:619:in `run_around_example_hooks_for'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:254:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:644:in `block in run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:606:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (3 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (2 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/configuration.rb:2058:in `with_suite_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:116:in `block in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/reporter.rb:74:in `report'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:115:in `run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner_rspec.rb:82:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:159:in `run_tests'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:130:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/kitchen-inspec-2.0.0/lib/kitchen/verifier/inspec.rb:105:in `call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:459:in `block in verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:552:in `synchronize_or_call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:514:in `block in action'","C:/opscode/chef-workstation/embedded/lib/ruby/2.7.0/benchmark.rb:293:in `measure'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:513:in `action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:451:in `verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:382:in `block (2 levels) in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/lifecycle_hooks.rb:45:in `run_with_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:381:in `block in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `each'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:162:in `verify'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `public_send'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `run_action_in_thread'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:169:in `block (2 levels) in run_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/logging-2.2.2/lib/logging/diagnostic_context.rb:474:in `block in create_with_logging_context'"]}]},{"id":"V-32371","title":"The DBMS must produce audit records containing sufficient information\nto establish the sources (origins) of the events.","desc":"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing the source of the event, it is\nimpossible to establish, correlate, and investigate the events relating to an\nincident.\n\n    In order to compile an accurate risk assessment and provide forensic\nanalysis, it is essential for security personnel to know where events occurred,\nsuch as application components, modules, session identifiers, filenames, host\nnames, and functionality.\n\n    In addition to logging where events occur within the application, the\napplication must also produce audit records that identify the application\nitself as the source of the event.\n\n    Associating information about the source of the event within the\napplication provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication.","descriptions":[{"label":"default","data":"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing the source of the event, it is\nimpossible to establish, correlate, and investigate the events relating to an\nincident.\n\n    In order to compile an accurate risk assessment and provide forensic\nanalysis, it is essential for security personnel to know where events occurred,\nsuch as application components, modules, session identifiers, filenames, host\nnames, and functionality.\n\n    In addition to logging where events occur within the application, the\napplication must also produce audit records that identify the application\nitself as the source of the event.\n\n    Associating information about the source of the event within the\napplication provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication."},{"label":"check","data":"Check CouchDB settings and documentation produce audit records containing\nsufficient information to establish the sources (origins) of the events.\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to produce audit records containing sufficient information\nto establish the sources (origins) of the events, this is a finding."},{"label":"fix","data":"Configure CouchDB to produce audit records containing sufficient\ninformation to establish the sources (origins) of the events.\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000098-DB-000042","gid":"V-32371","rid":"SV-42708r3_rule","stig_id":"SRG-APP-000098-DB-000042","fix_id":null,"cci":["CCI-000133"],"nist":["AU-3","Rev_4"]},"code":"control \"V-32371\" do\n  title \"The DBMS must produce audit records containing sufficient information\nto establish the sources (origins) of the events.\"\n  desc  \"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing the source of the event, it is\nimpossible to establish, correlate, and investigate the events relating to an\nincident.\n\n    In order to compile an accurate risk assessment and provide forensic\nanalysis, it is essential for security personnel to know where events occurred,\nsuch as application components, modules, session identifiers, filenames, host\nnames, and functionality.\n\n    In addition to logging where events occur within the application, the\napplication must also produce audit records that identify the application\nitself as the source of the event.\n\n    Associating information about the source of the event within the\napplication provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication.\n  \"\n  desc  \"check\", \"\n     Check CouchDB settings and documentation produce audit records containing\nsufficient information to establish the sources (origins) of the events.\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to produce audit records containing sufficient information\nto establish the sources (origins) of the events, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to produce audit records containing sufficient\ninformation to establish the sources (origins) of the events.\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000098-DB-000042\"\n  tag \"gid\": \"V-32371\"\n  tag \"rid\": \"SV-42708r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000098-DB-000042\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000133\"]\n  tag \"nist\": [\"AU-3\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32371.rb"},"waiver_data":{},"results":[]},{"id":"V-32373","title":"The DBMS must produce audit records containing sufficient information\nto establish the outcome (success or failure) of the events.","desc":"Information system auditing capability is critical for accurate\nforensic analysis. Without information about the outcome of events, security\npersonnel cannot make an accurate assessment as to whether an attack was\nsuccessful or if changes were made to the security state of the system.\n\n    Event outcomes can include indicators of event success or failure and\nevent-specific results (e.g., the security state of the information system\nafter the event occurred). As such, they also provide a means to measure the\nimpact of an event and help authorized personnel to determine the appropriate\nresponse.","descriptions":[{"label":"default","data":"Information system auditing capability is critical for accurate\nforensic analysis. Without information about the outcome of events, security\npersonnel cannot make an accurate assessment as to whether an attack was\nsuccessful or if changes were made to the security state of the system.\n\n    Event outcomes can include indicators of event success or failure and\nevent-specific results (e.g., the security state of the information system\nafter the event occurred). As such, they also provide a means to measure the\nimpact of an event and help authorized personnel to determine the appropriate\nresponse."},{"label":"check","data":"Check CouchDB settings and documentation produce audit records containing\nsufficient information to establish the sources (origins) of the events.\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to produce audit records containing sufficient information\nto establish the sources (origins) of the events, this is a finding."},{"label":"fix","data":"Configure CouchDB to produce audit records containing sufficient\ninformation to establish the sources (origins) of the events.\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000099-DB-000043","gid":"V-32373","rid":"SV-42710r3_rule","stig_id":"SRG-APP-000099-DB-000043","fix_id":null,"cci":["CCI-000134"],"nist":["AU-3","Rev_4"]},"code":"control \"V-32373\" do\n  title \"The DBMS must produce audit records containing sufficient information\nto establish the outcome (success or failure) of the events.\"\n  desc  \"Information system auditing capability is critical for accurate\nforensic analysis. Without information about the outcome of events, security\npersonnel cannot make an accurate assessment as to whether an attack was\nsuccessful or if changes were made to the security state of the system.\n\n    Event outcomes can include indicators of event success or failure and\nevent-specific results (e.g., the security state of the information system\nafter the event occurred). As such, they also provide a means to measure the\nimpact of an event and help authorized personnel to determine the appropriate\nresponse.\n  \"\n  desc  \"check\", \"\n     Check CouchDB settings and documentation produce audit records containing\nsufficient information to establish the sources (origins) of the events.\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to produce audit records containing sufficient information\nto establish the sources (origins) of the events, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to produce audit records containing sufficient\ninformation to establish the sources (origins) of the events.\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000099-DB-000043\"\n  tag \"gid\": \"V-32373\"\n  tag \"rid\": \"SV-42710r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000099-DB-000043\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000134\"]\n  tag \"nist\": [\"AU-3\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32373.rb"},"waiver_data":{},"results":[]},{"id":"V-32374","title":"The DBMS must produce audit records containing sufficient information\nto establish the identity of any user/subject or process associated with the\nevent.","desc":"Information system auditing capability is critical for accurate\nforensic analysis. Without information that establishes the identity of the\nsubjects (i.e., users or processes acting on behalf of users) associated with\nthe events, security personnel cannot determine responsibility for the\npotentially harmful event.\n\n    Identifiers (if authenticated or otherwise known) include, but are not\nlimited to, user database tables, primary key values, user names, or process\nidentifiers.","descriptions":[{"label":"default","data":"Information system auditing capability is critical for accurate\nforensic analysis. Without information that establishes the identity of the\nsubjects (i.e., users or processes acting on behalf of users) associated with\nthe events, security personnel cannot determine responsibility for the\npotentially harmful event.\n\n    Identifiers (if authenticated or otherwise known) include, but are not\nlimited to, user database tables, primary key values, user names, or process\nidentifiers."},{"label":"check","data":"Check CouchDB settings and existing audit records to verify a user name\nassociated with the event is being captured and stored with the audit records.\nIf audit records exist without specific user information, this is a finding.\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to produce audit records containing sufficient information\nto establish the identity of any user/subject or process associated with the\nevent, this is a finding"},{"label":"fix","data":"Configure CouchDB audit settings to include user name as part of the audit\nrecord.\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000100-DB-000201","gid":"V-32374","rid":"SV-42711r3_rule","stig_id":"SRG-APP-000100-DB-000201","fix_id":null,"cci":["CCI-001487"],"nist":["AU-3","Rev_4"]},"code":"control \"V-32374\" do\n  title \"The DBMS must produce audit records containing sufficient information\nto establish the identity of any user/subject or process associated with the\nevent.\"\n  desc  \"Information system auditing capability is critical for accurate\nforensic analysis. Without information that establishes the identity of the\nsubjects (i.e., users or processes acting on behalf of users) associated with\nthe events, security personnel cannot determine responsibility for the\npotentially harmful event.\n\n    Identifiers (if authenticated or otherwise known) include, but are not\nlimited to, user database tables, primary key values, user names, or process\nidentifiers.\n  \"\n  desc  \"check\", \"\n     Check CouchDB settings and existing audit records to verify a user name\nassociated with the event is being captured and stored with the audit records.\nIf audit records exist without specific user information, this is a finding.\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to produce audit records containing sufficient information\nto establish the identity of any user/subject or process associated with the\nevent, this is a finding\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB audit settings to include user name as part of the audit\nrecord.\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000100-DB-000201\"\n  tag \"gid\": \"V-32374\"\n  tag \"rid\": \"SV-42711r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000100-DB-000201\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001487\"]\n  tag \"nist\": [\"AU-3\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32374.rb"},"waiver_data":{},"results":[]},{"id":"V-32375","title":"The DBMS must include additional, more detailed, organization-defined\ninformation in the audit records for audit events identified by type, location,\nor subject.","desc":"Information system auditing capability is critical for accurate\nforensic analysis. Reconstruction of harmful events or forensic analysis is not\npossible if audit records do not contain enough information. To support\nanalysis, some types of events will need information to be logged that exceeds\nthe basic requirements of event type, time stamps, location, source, outcome,\nand user identity. If additional information is not available, it could\nnegatively impact forensic investigations into user actions or other malicious\nevents.\n\n    The organization must determine what additional information is required for\ncomplete analysis of the audited events. The additional information required is\ndependent on the type of information (e.g., sensitivity of the data and the\nenvironment within which it resides). At a minimum, the organization must\nemploy either full-text recording of privileged commands or the individual\nidentities of users of shared accounts, or both. The organization must maintain\naudit trails in sufficient detail to reconstruct events to determine the cause\nand impact of compromise.\n\n    Examples of detailed information the organization may require in audit\nrecords are full-text recording of privileged commands or the individual\nidentities of shared account users.","descriptions":[{"label":"default","data":"Information system auditing capability is critical for accurate\nforensic analysis. Reconstruction of harmful events or forensic analysis is not\npossible if audit records do not contain enough information. To support\nanalysis, some types of events will need information to be logged that exceeds\nthe basic requirements of event type, time stamps, location, source, outcome,\nand user identity. If additional information is not available, it could\nnegatively impact forensic investigations into user actions or other malicious\nevents.\n\n    The organization must determine what additional information is required for\ncomplete analysis of the audited events. The additional information required is\ndependent on the type of information (e.g., sensitivity of the data and the\nenvironment within which it resides). At a minimum, the organization must\nemploy either full-text recording of privileged commands or the individual\nidentities of users of shared accounts, or both. The organization must maintain\naudit trails in sufficient detail to reconstruct events to determine the cause\nand impact of compromise.\n\n    Examples of detailed information the organization may require in audit\nrecords are full-text recording of privileged commands or the individual\nidentities of shared account users."},{"label":"check","data":"Review the system documentation to identify what additional information the\norganization has determined to be necessary.\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to produce audit records to include all\norganization-defined additional, more detailed information in the audit records\nfor audit events identified by type, location, or subject, this is a finding."},{"label":"fix","data":"Configure CouchDB audit settings to produce audit records to include all\norganization-defined additional, more detailed information in the audit records\nfor audit events identified by type, location, or subject, this is a finding.\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000101-DB-000044","gid":"V-32375","rid":"SV-42712r4_rule","stig_id":"SRG-APP-000101-DB-000044","fix_id":null,"cci":["CCI-000135"],"nist":["AU-3 (1)","Rev_4"]},"code":"control \"V-32375\" do\n  title \"The DBMS must include additional, more detailed, organization-defined\ninformation in the audit records for audit events identified by type, location,\nor subject.\"\n  desc  \"Information system auditing capability is critical for accurate\nforensic analysis. Reconstruction of harmful events or forensic analysis is not\npossible if audit records do not contain enough information. To support\nanalysis, some types of events will need information to be logged that exceeds\nthe basic requirements of event type, time stamps, location, source, outcome,\nand user identity. If additional information is not available, it could\nnegatively impact forensic investigations into user actions or other malicious\nevents.\n\n    The organization must determine what additional information is required for\ncomplete analysis of the audited events. The additional information required is\ndependent on the type of information (e.g., sensitivity of the data and the\nenvironment within which it resides). At a minimum, the organization must\nemploy either full-text recording of privileged commands or the individual\nidentities of users of shared accounts, or both. The organization must maintain\naudit trails in sufficient detail to reconstruct events to determine the cause\nand impact of compromise.\n\n    Examples of detailed information the organization may require in audit\nrecords are full-text recording of privileged commands or the individual\nidentities of shared account users.\n  \"\n  desc  \"check\", \"\n    Review the system documentation to identify what additional information the\norganization has determined to be necessary.\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to produce audit records to include all\norganization-defined additional, more detailed information in the audit records\nfor audit events identified by type, location, or subject, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB audit settings to produce audit records to include all\norganization-defined additional, more detailed information in the audit records\nfor audit events identified by type, location, or subject, this is a finding.\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000101-DB-000044\"\n  tag \"gid\": \"V-32375\"\n  tag \"rid\": \"SV-42712r4_rule\"\n  tag \"stig_id\": \"SRG-APP-000101-DB-000044\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000135\"]\n  tag \"nist\": [\"AU-3 (1)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32375.rb"},"waiver_data":{},"results":[]},{"id":"V-32383","title":"The DBMS must by default shut down upon audit failure, to include the\nunavailability of space for more audit log records; or must be configurable to\nshut down upon audit failure.","desc":"It is critical that when the DBMS is at risk of failing to process\naudit logs as required, it take action to mitigate the failure. Audit\nprocessing failures include: software/hardware errors; failures in the audit\ncapturing mechanisms; and audit storage capacity being reached or exceeded.\nResponses to audit failure depend upon the nature of the failure mode.\n\n    When the need for system availability does not outweigh the need for a\ncomplete audit trail, the DBMS should shut down immediately, rolling back all\nin-flight transactions.\n\n    Systems where audit trail completeness is paramount will most likely be at\na lower MAC level than MAC I; the final determination is the prerogative of the\napplication owner, subject to Authorizing Official concurrence. In any case,\nsufficient auditing resources must be allocated to avoid a shutdown in all but\nthe most extreme situations.","descriptions":[{"label":"default","data":"It is critical that when the DBMS is at risk of failing to process\naudit logs as required, it take action to mitigate the failure. Audit\nprocessing failures include: software/hardware errors; failures in the audit\ncapturing mechanisms; and audit storage capacity being reached or exceeded.\nResponses to audit failure depend upon the nature of the failure mode.\n\n    When the need for system availability does not outweigh the need for a\ncomplete audit trail, the DBMS should shut down immediately, rolling back all\nin-flight transactions.\n\n    Systems where audit trail completeness is paramount will most likely be at\na lower MAC level than MAC I; the final determination is the prerogative of the\napplication owner, subject to Authorizing Official concurrence. In any case,\nsufficient auditing resources must be allocated to avoid a shutdown in all but\nthe most extreme situations."},{"label":"check","data":"If the application owner has determined that the need for system\navailability outweighs the need for a complete audit trail, this is not\napplicable (NA).\n\n    Review CouchDB logging application settings and/or documentation to\ndetermine whether the system is capable of shutting down, rolling back all\nin-flight transactions, in the case of an auditing failure. If it is not, this\nis a finding.\n\n    If the system is capable of shutting down upon audit failure but is not\nconfigured to do so, this is a finding."},{"label":"fix","data":"Configure the system to shut down, rolling back all in-flight transactions,\nin the case of an auditing failure."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000109-DB-000049","gid":"V-32383","rid":"SV-42720r3_rule","stig_id":"SRG-APP-000109-DB-000049","fix_id":null,"cci":["CCI-000140"],"nist":["AU-5 b","Rev_4"]},"code":"control \"V-32383\" do\n  title \"The DBMS must by default shut down upon audit failure, to include the\nunavailability of space for more audit log records; or must be configurable to\nshut down upon audit failure.\"\n  desc  \"It is critical that when the DBMS is at risk of failing to process\naudit logs as required, it take action to mitigate the failure. Audit\nprocessing failures include: software/hardware errors; failures in the audit\ncapturing mechanisms; and audit storage capacity being reached or exceeded.\nResponses to audit failure depend upon the nature of the failure mode.\n\n    When the need for system availability does not outweigh the need for a\ncomplete audit trail, the DBMS should shut down immediately, rolling back all\nin-flight transactions.\n\n    Systems where audit trail completeness is paramount will most likely be at\na lower MAC level than MAC I; the final determination is the prerogative of the\napplication owner, subject to Authorizing Official concurrence. In any case,\nsufficient auditing resources must be allocated to avoid a shutdown in all but\nthe most extreme situations.\n  \"\n  desc  \"check\", \"\n    If the application owner has determined that the need for system\navailability outweighs the need for a complete audit trail, this is not\napplicable (NA).\n\n    Review CouchDB logging application settings and/or documentation to\ndetermine whether the system is capable of shutting down, rolling back all\nin-flight transactions, in the case of an auditing failure. If it is not, this\nis a finding.\n\n    If the system is capable of shutting down upon audit failure but is not\nconfigured to do so, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure the system to shut down, rolling back all in-flight transactions,\nin the case of an auditing failure.\n\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000109-DB-000049\"\n  tag \"gid\": \"V-32383\"\n  tag \"rid\": \"SV-42720r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000109-DB-000049\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000140\"]\n  tag \"nist\": [\"AU-5 b\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32383.rb"},"waiver_data":{},"results":[]},{"id":"V-32391","title":"The DBMS must use system clocks to generate time stamps for use in\naudit records and application data.","desc":"Internal system clocks are typically a feature of server hardware and\nare maintained and used by the operating system. They are typically\nsynchronized with an authoritative time server at regular intervals.\n\n    Without an internal system clock used as the reference for the time stored\non each event to provide a trusted common reference for the time, forensic\nanalysis would be impeded. Determining the correct time a particular event\noccurred on a system is critical when conducting forensic analysis and\ninvestigating system events.\n\n    Time stamps generated by the internal system clock and used by the DBMS\nshall include both date and time. The time may be expressed in Coordinated\nUniversal Time (UTC), a modern continuation of Greenwich Mean Time (GMT), or\nlocal time with an offset from UTC.\n\n    If time sources other than the system time are used for audit records, the\ntimeline of events can get skewed. This makes forensic analysis of the logs\nmuch less reliable.","descriptions":[{"label":"default","data":"Internal system clocks are typically a feature of server hardware and\nare maintained and used by the operating system. They are typically\nsynchronized with an authoritative time server at regular intervals.\n\n    Without an internal system clock used as the reference for the time stored\non each event to provide a trusted common reference for the time, forensic\nanalysis would be impeded. Determining the correct time a particular event\noccurred on a system is critical when conducting forensic analysis and\ninvestigating system events.\n\n    Time stamps generated by the internal system clock and used by the DBMS\nshall include both date and time. The time may be expressed in Coordinated\nUniversal Time (UTC), a modern continuation of Greenwich Mean Time (GMT), or\nlocal time with an offset from UTC.\n\n    If time sources other than the system time are used for audit records, the\ntimeline of events can get skewed. This makes forensic analysis of the logs\nmuch less reliable."},{"label":"check","data":"Using product documentation, verify that CouchDB uses current time stamp\nvalues obtained from or synchronized with the internal system clock used by the\noperating system.\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"writer = \" <path to default.ini>\n\n    if line is equal to journald, this is a finding."},{"label":"fix","data":"Deploy a DBMS that can use time stamp values obtained from or synchronized\nwith the internal system clock used by the operating system.\n\n    Configure CouchDB to use time stamp values obtained from or synchronized\nwith the internal system clock used by the operating system."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000116-DB-000057","gid":"V-32391","rid":"SV-42728r3_rule","stig_id":"SRG-APP-000116-DB-000057","fix_id":null,"cci":["CCI-000159"],"nist":["AU-8 a","Rev_4"]},"code":"control \"V-32391\" do\n  title \"The DBMS must use system clocks to generate time stamps for use in\naudit records and application data.\"\n  desc  \"Internal system clocks are typically a feature of server hardware and\nare maintained and used by the operating system. They are typically\nsynchronized with an authoritative time server at regular intervals.\n\n    Without an internal system clock used as the reference for the time stored\non each event to provide a trusted common reference for the time, forensic\nanalysis would be impeded. Determining the correct time a particular event\noccurred on a system is critical when conducting forensic analysis and\ninvestigating system events.\n\n    Time stamps generated by the internal system clock and used by the DBMS\nshall include both date and time. The time may be expressed in Coordinated\nUniversal Time (UTC), a modern continuation of Greenwich Mean Time (GMT), or\nlocal time with an offset from UTC.\n\n    If time sources other than the system time are used for audit records, the\ntimeline of events can get skewed. This makes forensic analysis of the logs\nmuch less reliable.\n  \"\n  desc  \"check\", \"\n    Using product documentation, verify that CouchDB uses current time stamp\nvalues obtained from or synchronized with the internal system clock used by the\noperating system.\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"writer = \\\" <path to default.ini>\n\n    if line is equal to journald, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Deploy a DBMS that can use time stamp values obtained from or synchronized\nwith the internal system clock used by the operating system.\n\n    Configure CouchDB to use time stamp values obtained from or synchronized\nwith the internal system clock used by the operating system.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000116-DB-000057\"\n  tag \"gid\": \"V-32391\"\n  tag \"rid\": \"SV-42728r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000116-DB-000057\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000159\"]\n  tag \"nist\": [\"AU-8 a\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32391.rb"},"waiver_data":{},"results":[]},{"id":"V-32393","title":"The audit information produced by the DBMS must be protected from\nunauthorized read access.","desc":"If audit data were to become compromised, then competent forensic\nanalysis and discovery of the true source of potentially malicious system\nactivity is difficult, if not impossible, to achieve. In addition, access to\naudit records provides information an attacker could potentially use to his or\nher advantage.\n\n    To ensure the veracity of audit data, the information system and/or the\napplication must protect audit information from any and all unauthorized\naccess. This includes read, write, copy, etc.\n\n    This requirement can be achieved through multiple methods which will depend\nupon system architecture and design. Some commonly employed methods include\nensuring log files enjoy the proper file system permissions utilizing file\nsystem protections and limiting log data location.\n\n    Additionally, applications with user interfaces to audit records should not\nallow for the unfettered manipulation of or access to those records via the\napplication. If the application provides access to the audit data, the\napplication becomes accountable for ensuring that audit information is\nprotected from unauthorized access.\n\n    Audit information includes all information (e.g., audit records, audit\nsettings, and audit reports) needed to successfully audit information system\nactivity.","descriptions":[{"label":"default","data":"If audit data were to become compromised, then competent forensic\nanalysis and discovery of the true source of potentially malicious system\nactivity is difficult, if not impossible, to achieve. In addition, access to\naudit records provides information an attacker could potentially use to his or\nher advantage.\n\n    To ensure the veracity of audit data, the information system and/or the\napplication must protect audit information from any and all unauthorized\naccess. This includes read, write, copy, etc.\n\n    This requirement can be achieved through multiple methods which will depend\nupon system architecture and design. Some commonly employed methods include\nensuring log files enjoy the proper file system permissions utilizing file\nsystem protections and limiting log data location.\n\n    Additionally, applications with user interfaces to audit records should not\nallow for the unfettered manipulation of or access to those records via the\napplication. If the application provides access to the audit data, the\napplication becomes accountable for ensuring that audit information is\nprotected from unauthorized access.\n\n    Audit information includes all information (e.g., audit records, audit\nsettings, and audit reports) needed to successfully audit information system\nactivity."},{"label":"check","data":"Review the access permissions to tools used to view or modify audit\ninformation produced by CouchDB. These tools may include features within\nCouchDB itself or software external to the database.\n\n    The file path to audit information produced by CouchDB is defined in the\ndefault.ini configuration file. Only authorized users should have permission to\naccess this information.\n\n    Verify the permission of the log files produced by CouchDB with the\nfollowing commands:\n\n      # find . -name \"default.ini\"\n      # grep \"file =\" <path to default.ini>\n      # ls -la <path of .ini file>\n\n    If the audit information produced by CouchDB is not protected from\nunauthorized read access, this is a finding."},{"label":"fix","data":"As the system administrator, change the permissions of the configuration\nfiles:\n\n      # find . -name \"default.ini\"\n      # grep \"file =\" <path to default.ini>\n      # sudo chown -R <Database Admin>:<Database Admin Group> <Log File>\n      # sudo chmod 600 <Log File>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000118-DB-000059","gid":"V-32393","rid":"SV-42730r3_rule","stig_id":"SRG-APP-000118-DB-000059","fix_id":null,"cci":["CCI-000162"],"nist":["AU-9","Rev_4"]},"code":"control \"V-32393\" do\n  title \"The audit information produced by the DBMS must be protected from\nunauthorized read access.\"\n  desc  \"If audit data were to become compromised, then competent forensic\nanalysis and discovery of the true source of potentially malicious system\nactivity is difficult, if not impossible, to achieve. In addition, access to\naudit records provides information an attacker could potentially use to his or\nher advantage.\n\n    To ensure the veracity of audit data, the information system and/or the\napplication must protect audit information from any and all unauthorized\naccess. This includes read, write, copy, etc.\n\n    This requirement can be achieved through multiple methods which will depend\nupon system architecture and design. Some commonly employed methods include\nensuring log files enjoy the proper file system permissions utilizing file\nsystem protections and limiting log data location.\n\n    Additionally, applications with user interfaces to audit records should not\nallow for the unfettered manipulation of or access to those records via the\napplication. If the application provides access to the audit data, the\napplication becomes accountable for ensuring that audit information is\nprotected from unauthorized access.\n\n    Audit information includes all information (e.g., audit records, audit\nsettings, and audit reports) needed to successfully audit information system\nactivity.\n  \"\n  desc  \"check\", \"\n    Review the access permissions to tools used to view or modify audit\ninformation produced by CouchDB. These tools may include features within\nCouchDB itself or software external to the database.\n\n    The file path to audit information produced by CouchDB is defined in the\ndefault.ini configuration file. Only authorized users should have permission to\naccess this information.\n\n    Verify the permission of the log files produced by CouchDB with the\nfollowing commands:\n\n      # find . -name \\\"default.ini\\\"\n      # grep \\\"file =\\\" <path to default.ini>\n      # ls -la <path of .ini file>\n\n    If the audit information produced by CouchDB is not protected from\nunauthorized read access, this is a finding.\n  \"\n  desc  \"fix\", \"\n    As the system administrator, change the permissions of the configuration\nfiles:\n\n      # find . -name \\\"default.ini\\\"\n      # grep \\\"file =\\\" <path to default.ini>\n      # sudo chown -R <Database Admin>:<Database Admin Group> <Log File>\n      # sudo chmod 600 <Log File>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000118-DB-000059\"\n  tag \"gid\": \"V-32393\"\n  tag \"rid\": \"SV-42730r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000118-DB-000059\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000162\"]\n  tag \"nist\": [\"AU-9\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32393.rb"},"waiver_data":{},"results":[]},{"id":"V-32394","title":"The audit information produced by the DBMS must be protected from\nunauthorized modification.","desc":"If audit data were to become compromised, then competent forensic\nanalysis and discovery of the true source of potentially malicious system\nactivity is impossible to achieve.\n\n    To ensure the veracity of audit data the information system and/or the\napplication must protect audit information from unauthorized modification.\n\n    This requirement can be achieved through multiple methods that will depend\nupon system architecture and design. Some commonly employed methods include\nensuring log files enjoy the proper file system permissions and limiting log\ndata locations.\n\n    Applications providing a user interface to audit data will leverage user\npermissions and roles identifying the user accessing the data and the\ncorresponding rights that the user enjoys in order to make access decisions\nregarding the modification of audit data.\n\n    Audit information includes all information (e.g., audit records, audit\nsettings, and audit reports) needed to successfully audit information system\nactivity.\n\n    Modification of database audit data could mask the theft of, or the\nunauthorized modification of, sensitive data stored in the database.","descriptions":[{"label":"default","data":"If audit data were to become compromised, then competent forensic\nanalysis and discovery of the true source of potentially malicious system\nactivity is impossible to achieve.\n\n    To ensure the veracity of audit data the information system and/or the\napplication must protect audit information from unauthorized modification.\n\n    This requirement can be achieved through multiple methods that will depend\nupon system architecture and design. Some commonly employed methods include\nensuring log files enjoy the proper file system permissions and limiting log\ndata locations.\n\n    Applications providing a user interface to audit data will leverage user\npermissions and roles identifying the user accessing the data and the\ncorresponding rights that the user enjoys in order to make access decisions\nregarding the modification of audit data.\n\n    Audit information includes all information (e.g., audit records, audit\nsettings, and audit reports) needed to successfully audit information system\nactivity.\n\n    Modification of database audit data could mask the theft of, or the\nunauthorized modification of, sensitive data stored in the database."},{"label":"check","data":"Review the access permissions to tools used to view or modify audit\ninformation produced by CouchDB. These tools may include features within\nCouchDB itself or software external to the database.\n\n    The file path to audit information produced by CouchDB is defined in the\ndefault.ini configuration file. Only authorized users should have permission to\nmodify this information.\n\n    Verify the permission of the log files produced by CouchDB with the\nfollowing commands:\n\n      # find . -name \"default.ini\"\n      # grep \"file =\" <path to default.ini>\n      # ls -la <path of .ini file>\n\n    If the audit information produced by CouchDB is not protected from\nunauthorized modification, this is a finding."},{"label":"fix","data":"As the system administrator, change the permissions of the configuration\nfiles:\n\n      # find . -name \"default.ini\"\n      # grep \"file =\" <path to default.ini>\n      # sudo chown -R <Database Admin>:<Database Admin Group> <Log File>\n      # sudo chmod 600 <Log File>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000119-DB-000060","gid":"V-32394","rid":"SV-42731r3_rule","stig_id":"SRG-APP-000119-DB-000060","fix_id":null,"cci":["CCI-000163"],"nist":["AU-9","Rev_4"]},"code":"control \"V-32394\" do\n  title \"The audit information produced by the DBMS must be protected from\nunauthorized modification.\"\n  desc  \"If audit data were to become compromised, then competent forensic\nanalysis and discovery of the true source of potentially malicious system\nactivity is impossible to achieve.\n\n    To ensure the veracity of audit data the information system and/or the\napplication must protect audit information from unauthorized modification.\n\n    This requirement can be achieved through multiple methods that will depend\nupon system architecture and design. Some commonly employed methods include\nensuring log files enjoy the proper file system permissions and limiting log\ndata locations.\n\n    Applications providing a user interface to audit data will leverage user\npermissions and roles identifying the user accessing the data and the\ncorresponding rights that the user enjoys in order to make access decisions\nregarding the modification of audit data.\n\n    Audit information includes all information (e.g., audit records, audit\nsettings, and audit reports) needed to successfully audit information system\nactivity.\n\n    Modification of database audit data could mask the theft of, or the\nunauthorized modification of, sensitive data stored in the database.\n  \"\n  desc  \"check\", \"\n    Review the access permissions to tools used to view or modify audit\ninformation produced by CouchDB. These tools may include features within\nCouchDB itself or software external to the database.\n\n    The file path to audit information produced by CouchDB is defined in the\ndefault.ini configuration file. Only authorized users should have permission to\nmodify this information.\n\n    Verify the permission of the log files produced by CouchDB with the\nfollowing commands:\n\n      # find . -name \\\"default.ini\\\"\n      # grep \\\"file =\\\" <path to default.ini>\n      # ls -la <path of .ini file>\n\n    If the audit information produced by CouchDB is not protected from\nunauthorized modification, this is a finding.\n  \"\n  desc  \"fix\", \"\n    As the system administrator, change the permissions of the configuration\nfiles:\n\n      # find . -name \\\"default.ini\\\"\n      # grep \\\"file =\\\" <path to default.ini>\n      # sudo chown -R <Database Admin>:<Database Admin Group> <Log File>\n      # sudo chmod 600 <Log File>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000119-DB-000060\"\n  tag \"gid\": \"V-32394\"\n  tag \"rid\": \"SV-42731r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000119-DB-000060\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000163\"]\n  tag \"nist\": [\"AU-9\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32394.rb"},"waiver_data":{},"results":[]},{"id":"V-32395","title":"The audit information produced by the DBMS must be protected from\nunauthorized deletion.","desc":"If audit data were to become compromised, then competent forensic\nanalysis and discovery of the true source of potentially malicious system\nactivity is impossible to achieve.\n\n    To ensure the veracity of audit data, the information system and/or the\napplication must protect audit information from unauthorized deletion. This\nrequirement can be achieved through multiple methods which will depend upon\nsystem architecture and design.\n\n    Some commonly employed methods include: ensuring log files enjoy the proper\nfile system permissions utilizing file system protections; restricting access;\nand backing up log data to ensure log data is retained.\n\n    Applications providing a user interface to audit data will leverage user\npermissions and roles identifying the user accessing the data and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe deletion of audit data.\n\n    Audit information includes all information (e.g., audit records, audit\nsettings, and audit reports) needed to successfully audit information system\nactivity.\n\n    Deletion of database audit data could mask the theft of, or the\nunauthorized modification of, sensitive data stored in the database.","descriptions":[{"label":"default","data":"If audit data were to become compromised, then competent forensic\nanalysis and discovery of the true source of potentially malicious system\nactivity is impossible to achieve.\n\n    To ensure the veracity of audit data, the information system and/or the\napplication must protect audit information from unauthorized deletion. This\nrequirement can be achieved through multiple methods which will depend upon\nsystem architecture and design.\n\n    Some commonly employed methods include: ensuring log files enjoy the proper\nfile system permissions utilizing file system protections; restricting access;\nand backing up log data to ensure log data is retained.\n\n    Applications providing a user interface to audit data will leverage user\npermissions and roles identifying the user accessing the data and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe deletion of audit data.\n\n    Audit information includes all information (e.g., audit records, audit\nsettings, and audit reports) needed to successfully audit information system\nactivity.\n\n    Deletion of database audit data could mask the theft of, or the\nunauthorized modification of, sensitive data stored in the database."},{"label":"check","data":"Review the access permissions to tools used to view or modify audit\ninformation produced by CouchDB. These tools may include features within\nCouchDB itself or software external to the database.\n\n    The file path to audit information produced by CouchDB is defined in the\ndefault.ini configuration file. Only authorized users should have permission to\ndelete this information.\n\n    Verify the permission of the log files produced by CouchDB with the\nfollowing commands:\n\n      # find . -name \"default.ini\"\n      # grep \"file =\" <path to default.ini>\n      # ls -la <path of .ini file>\n\n    If the audit information produced by CouchDB is not protected from\nunauthorized deletion, this is a finding."},{"label":"fix","data":"As the system administrator, change the permissions of the configuration\nfiles:\n\n      # find . -name \"default.ini\"\n      # grep \"file =\" <path to default.ini>\n      # sudo chown -R <Database Admin>:<Database Admin Group> <Log File>\n      # sudo chmod 600 <Log File>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000120-DB-000061","gid":"V-32395","rid":"SV-42732r3_rule","stig_id":"SRG-APP-000120-DB-000061","fix_id":null,"cci":["CCI-000164"],"nist":["AU-9","Rev_4"]},"code":"control \"V-32395\" do\n  title \"The audit information produced by the DBMS must be protected from\nunauthorized deletion.\"\n  desc  \"If audit data were to become compromised, then competent forensic\nanalysis and discovery of the true source of potentially malicious system\nactivity is impossible to achieve.\n\n    To ensure the veracity of audit data, the information system and/or the\napplication must protect audit information from unauthorized deletion. This\nrequirement can be achieved through multiple methods which will depend upon\nsystem architecture and design.\n\n    Some commonly employed methods include: ensuring log files enjoy the proper\nfile system permissions utilizing file system protections; restricting access;\nand backing up log data to ensure log data is retained.\n\n    Applications providing a user interface to audit data will leverage user\npermissions and roles identifying the user accessing the data and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe deletion of audit data.\n\n    Audit information includes all information (e.g., audit records, audit\nsettings, and audit reports) needed to successfully audit information system\nactivity.\n\n    Deletion of database audit data could mask the theft of, or the\nunauthorized modification of, sensitive data stored in the database.\n  \"\n  desc  \"check\", \"\n    Review the access permissions to tools used to view or modify audit\ninformation produced by CouchDB. These tools may include features within\nCouchDB itself or software external to the database.\n\n    The file path to audit information produced by CouchDB is defined in the\ndefault.ini configuration file. Only authorized users should have permission to\ndelete this information.\n\n    Verify the permission of the log files produced by CouchDB with the\nfollowing commands:\n\n      # find . -name \\\"default.ini\\\"\n      # grep \\\"file =\\\" <path to default.ini>\n      # ls -la <path of .ini file>\n\n    If the audit information produced by CouchDB is not protected from\nunauthorized deletion, this is a finding.\n  \"\n  desc  \"fix\", \"\n    As the system administrator, change the permissions of the configuration\nfiles:\n\n      # find . -name \\\"default.ini\\\"\n      # grep \\\"file =\\\" <path to default.ini>\n      # sudo chown -R <Database Admin>:<Database Admin Group> <Log File>\n      # sudo chmod 600 <Log File>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000120-DB-000061\"\n  tag \"gid\": \"V-32395\"\n  tag \"rid\": \"SV-42732r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000120-DB-000061\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000164\"]\n  tag \"nist\": [\"AU-9\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32395.rb"},"waiver_data":{},"results":[]},{"id":"V-32397","title":"The DBMS must protect its audit features from unauthorized access.","desc":"Protecting audit data also includes identifying and protecting the\ntools used to view and manipulate log data.\n\n    Depending upon the log format and application, system and application log\ntools may provide the only means to manipulate and manage application and\nsystem log data. It is, therefore, imperative that access to audit tools be\ncontrolled and protected from unauthorized access.\n\n    Applications providing tools to interface with audit data will leverage\nuser permissions and roles identifying the user accessing the tools and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe access to audit tools.\n\n    Audit tools include, but are not limited to, OS-provided audit tools,\nvendor-provided audit tools, and open source audit tools needed to successfully\nview and manipulate audit information system activity and records.\n\n    If an attacker were to gain access to audit tools, he could analyze audit\nlogs for system weaknesses or weaknesses in the auditing itself. An attacker\ncould also manipulate logs to hide evidence of malicious activity.","descriptions":[{"label":"default","data":"Protecting audit data also includes identifying and protecting the\ntools used to view and manipulate log data.\n\n    Depending upon the log format and application, system and application log\ntools may provide the only means to manipulate and manage application and\nsystem log data. It is, therefore, imperative that access to audit tools be\ncontrolled and protected from unauthorized access.\n\n    Applications providing tools to interface with audit data will leverage\nuser permissions and roles identifying the user accessing the tools and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe access to audit tools.\n\n    Audit tools include, but are not limited to, OS-provided audit tools,\nvendor-provided audit tools, and open source audit tools needed to successfully\nview and manipulate audit information system activity and records.\n\n    If an attacker were to gain access to audit tools, he could analyze audit\nlogs for system weaknesses or weaknesses in the auditing itself. An attacker\ncould also manipulate logs to hide evidence of malicious activity."},{"label":"check","data":"Review the access permissions to tools used to view or modify audit log\nconfigurations. These tools may include features within CouchDB itself or\nsoftware external to the database.\n\n    Logging configuration is defined in the default.ini configuration file and\nother .ini files. Only authorized users should have permissions to the file.\n\n    Verify the permission of the .ini files with the following commands:\n\n      # find . -name \"*.ini\"\n      # ls -la <path of .ini file>\n\n    If any audit features can be accessed by unathorized users, this is a\nfinding."},{"label":"fix","data":"As the system administrator, change the permissions of the configuration\nfiles:\n\n      # sudo chown -R <Database Admin>:<Database Admin Group> <Configuration\nfile>\n      # sudo chmod 600 <Configuration file>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000121-DB-000202","gid":"V-32397","rid":"SV-42734r3_rule","stig_id":"SRG-APP-000121-DB-000202","fix_id":null,"cci":["CCI-001493"],"nist":["AU-9","Rev_4"]},"code":"control \"V-32397\" do\n  title 'The DBMS must protect its audit features from unauthorized access.'\n  desc  \"Protecting audit data also includes identifying and protecting the\ntools used to view and manipulate log data.\n\n    Depending upon the log format and application, system and application log\ntools may provide the only means to manipulate and manage application and\nsystem log data. It is, therefore, imperative that access to audit tools be\ncontrolled and protected from unauthorized access.\n\n    Applications providing tools to interface with audit data will leverage\nuser permissions and roles identifying the user accessing the tools and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe access to audit tools.\n\n    Audit tools include, but are not limited to, OS-provided audit tools,\nvendor-provided audit tools, and open source audit tools needed to successfully\nview and manipulate audit information system activity and records.\n\n    If an attacker were to gain access to audit tools, he could analyze audit\nlogs for system weaknesses or weaknesses in the auditing itself. An attacker\ncould also manipulate logs to hide evidence of malicious activity.\n  \"\n  desc  \"check\", \"\n    Review the access permissions to tools used to view or modify audit log\nconfigurations. These tools may include features within CouchDB itself or\nsoftware external to the database.\n\n    Logging configuration is defined in the default.ini configuration file and\nother .ini files. Only authorized users should have permissions to the file.\n\n    Verify the permission of the .ini files with the following commands:\n\n      # find . -name \\\"*.ini\\\"\n      # ls -la <path of .ini file>\n\n    If any audit features can be accessed by unathorized users, this is a\nfinding.\n  \"\n  desc  \"fix\", \"\n    As the system administrator, change the permissions of the configuration\nfiles:\n\n      # sudo chown -R <Database Admin>:<Database Admin Group> <Configuration\nfile>\n      # sudo chmod 600 <Configuration file>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000121-DB-000202\"\n  tag \"gid\": \"V-32397\"\n  tag \"rid\": \"SV-42734r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000121-DB-000202\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001493\"]\n  tag \"nist\": [\"AU-9\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32397.rb"},"waiver_data":{},"results":[]},{"id":"V-32398","title":"The DBMS must protect its audit configuration from unauthorized\nmodification.","desc":"Protecting audit data also includes identifying and protecting the\ntools used to view and manipulate log data. Therefore, protecting audit tools\nis necessary to prevent unauthorized operation on audit data.\n\n    Applications providing tools to interface with audit data will leverage\nuser permissions and roles identifying the user accessing the tools and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe modification of audit tools.\n\n    Audit tools include, but are not limited to, vendor-provided and open\nsource audit tools needed to successfully view and manipulate audit information\nsystem activity and records. Audit tools include custom queries and report\ngenerators.","descriptions":[{"label":"default","data":"Protecting audit data also includes identifying and protecting the\ntools used to view and manipulate log data. Therefore, protecting audit tools\nis necessary to prevent unauthorized operation on audit data.\n\n    Applications providing tools to interface with audit data will leverage\nuser permissions and roles identifying the user accessing the tools and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe modification of audit tools.\n\n    Audit tools include, but are not limited to, vendor-provided and open\nsource audit tools needed to successfully view and manipulate audit information\nsystem activity and records. Audit tools include custom queries and report\ngenerators."},{"label":"check","data":"Review the access permissions to tools used to view or modify audit log\nconfigurations. These tools may include features within CouchDB itself or\nsoftware external to the database.\n\n    Logging configuration is defined in the default.ini configuration file and\nother .ini files. Only authorized users should have permission to modify\nconfiguration files.\n\n    Verify the permission of the .ini files with the following commands:\n\n      # find . -name \"*.ini\"\n      # ls -la <path of .ini file>\n\n    If any audit features can be modified by unathorized users, this is a\nfinding."},{"label":"fix","data":"As the system administrator, change the permissions of the configuration\nfiles:\n\n      # sudo chown -R <Database Admin>:<Database Admin Group> <Configuration\nfile>\n      # sudo chmod 600 <Configuration file>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000122-DB-000203","gid":"V-32398","rid":"SV-42735r3_rule","stig_id":"SRG-APP-000122-DB-000203","fix_id":null,"cci":["CCI-001494"],"nist":["AU-9","Rev_4"]},"code":"control \"V-32398\" do\n  title \"The DBMS must protect its audit configuration from unauthorized\nmodification.\"\n  desc  \"Protecting audit data also includes identifying and protecting the\ntools used to view and manipulate log data. Therefore, protecting audit tools\nis necessary to prevent unauthorized operation on audit data.\n\n    Applications providing tools to interface with audit data will leverage\nuser permissions and roles identifying the user accessing the tools and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe modification of audit tools.\n\n    Audit tools include, but are not limited to, vendor-provided and open\nsource audit tools needed to successfully view and manipulate audit information\nsystem activity and records. Audit tools include custom queries and report\ngenerators.\n  \"\n  desc  \"check\", \"\n    Review the access permissions to tools used to view or modify audit log\nconfigurations. These tools may include features within CouchDB itself or\nsoftware external to the database.\n\n    Logging configuration is defined in the default.ini configuration file and\nother .ini files. Only authorized users should have permission to modify\nconfiguration files.\n\n    Verify the permission of the .ini files with the following commands:\n\n      # find . -name \\\"*.ini\\\"\n      # ls -la <path of .ini file>\n\n    If any audit features can be modified by unathorized users, this is a\nfinding.\n  \"\n  desc  \"fix\", \"\n    As the system administrator, change the permissions of the configuration\nfiles:\n\n      # sudo chown -R <Database Admin>:<Database Admin Group> <Configuration\nfile>\n      # sudo chmod 600 <Configuration file>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000122-DB-000203\"\n  tag \"gid\": \"V-32398\"\n  tag \"rid\": \"SV-42735r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000122-DB-000203\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001494\"]\n  tag \"nist\": [\"AU-9\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32398.rb"},"waiver_data":{},"results":[]},{"id":"V-32399","title":"The DBMS must protect its audit features from unauthorized removal.","desc":"Protecting audit data also includes identifying and protecting the\ntools used to view and manipulate log data. Therefore, protecting audit tools\nis necessary to prevent unauthorized operation on audit data.\n\n    Applications providing tools to interface with audit data will leverage\nuser permissions and roles identifying the user accessing the tools and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe deletion of audit tools.\n\n    Audit tools include, but are not limited to, vendor-provided and open\nsource audit tools needed to successfully view and manipulate audit information\nsystem activity and records. Audit tools include custom queries and report\ngenerators.","descriptions":[{"label":"default","data":"Protecting audit data also includes identifying and protecting the\ntools used to view and manipulate log data. Therefore, protecting audit tools\nis necessary to prevent unauthorized operation on audit data.\n\n    Applications providing tools to interface with audit data will leverage\nuser permissions and roles identifying the user accessing the tools and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe deletion of audit tools.\n\n    Audit tools include, but are not limited to, vendor-provided and open\nsource audit tools needed to successfully view and manipulate audit information\nsystem activity and records. Audit tools include custom queries and report\ngenerators."}],"impact":0.5,"refs":[],"tags":{},"code":"control \"V-32399\" do\n  title 'The DBMS must protect its audit features from unauthorized removal.'\n  desc  \"Protecting audit data also includes identifying and protecting the\ntools used to view and manipulate log data. Therefore, protecting audit tools\nis necessary to prevent unauthorized operation on audit data.\n\n    Applications providing tools to interface with audit data will leverage\nuser permissions and roles identifying the user accessing the tools and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe deletion of audit tools.\n\n    Audit tools include, but are not limited to, vendor-provided and open\nsource audit tools needed to successfully view and manipulate audit information\nsystem activity and records. Audit tools include custom queries and report\ngenerators.\n  \"\n  desc  \"check\", \"\n    Review the access permissions to tools used to view or modify audit log\ndata. These tools may include features within CouchDB itself or software\nexternal to the database.\n\n    Logging configuration is defined in the default.ini configuration file and\nother .ini files. These files should be owned by the database administrator.\n\n    Verify the permission of the .ini files with the following commands:\n\n    \\xA0 # find . -name \\\"*.ini\\\"\n    \\xA0 # ls -la <path of .ini file>\n\n    If any of these .ini files are not owned by the database administrator,\nthis is a finding.\n  \"\n  desc  \"fix\", \"\n    As the system administrator, change the permissions of the configuration\nfiles:\n\n    \\xA0 # sudo chown -R <Database Admin>:<Database Admin Group> <Configuration\nfile>\n    \\xA0 # sudo chmod 600 <Configuration file>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000123-DB-000204\"\n  tag \"gid\": \"V-32399\"\n  tag \"rid\": \"SV-42736r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000123-DB-000204\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001495\"]\n  tag \"nist\": [\"AU-9\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32399.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Control Source Code Error C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32399.rb:3 ","run_time":0.000146,"start_time":"2020-07-17T16:26:10-04:00","message":"invalid byte sequence in UTF-8","exception":"RuntimeError","backtrace":["C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/rule.rb:61:in `block (2 levels) in initialize'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `instance_exec'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `block in with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `block in with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:619:in `run_around_example_hooks_for'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:254:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:644:in `block in run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:606:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (3 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (2 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/configuration.rb:2058:in `with_suite_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:116:in `block in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/reporter.rb:74:in `report'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:115:in `run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner_rspec.rb:82:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:159:in `run_tests'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:130:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/kitchen-inspec-2.0.0/lib/kitchen/verifier/inspec.rb:105:in `call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:459:in `block in verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:552:in `synchronize_or_call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:514:in `block in action'","C:/opscode/chef-workstation/embedded/lib/ruby/2.7.0/benchmark.rb:293:in `measure'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:513:in `action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:451:in `verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:382:in `block (2 levels) in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/lifecycle_hooks.rb:45:in `run_with_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:381:in `block in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `each'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:162:in `verify'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `public_send'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `run_action_in_thread'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:169:in `block (2 levels) in run_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/logging-2.2.2/lib/logging/diagnostic_context.rb:474:in `block in create_with_logging_context'"]}]},{"id":"V-32412","title":"Database objects (including but not limited to tables, indexes,\nstorage, stored procedures, functions, triggers, links to software external to\nthe DBMS, etc.) must be owned by database/DBMS principals authorized for\nownership.","desc":"Within the database, object ownership implies full privileges to the\nowned object, including the privilege to assign access to the owned objects to\nother subjects. Database functions and procedures can be coded using definer's\nrights. This allows anyone who utilizes the object to perform the actions if\nthey were the owner. If not properly managed, this can lead to privileged\nactions being taken by unauthorized individuals.\n\n    Conversely, if critical tables or other objects rely on unauthorized owner\naccounts, these objects may be lost when an account is removed.","descriptions":[{"label":"default","data":"Within the database, object ownership implies full privileges to the\nowned object, including the privilege to assign access to the owned objects to\nother subjects. Database functions and procedures can be coded using definer's\nrights. This allows anyone who utilizes the object to perform the actions if\nthey were the owner. If not properly managed, this can lead to privileged\nactions being taken by unauthorized individuals.\n\n    Conversely, if critical tables or other objects rely on unauthorized owner\naccounts, these objects may be lost when an account is removed."}],"impact":0.5,"refs":[],"tags":{},"code":"control \"V-32412\" do\n  title \"Database objects (including but not limited to tables, indexes,\nstorage, stored procedures, functions, triggers, links to software external to\nthe DBMS, etc.) must be owned by database/DBMS principals authorized for\nownership.\"\n  desc  \"Within the database, object ownership implies full privileges to the\nowned object, including the privilege to assign access to the owned objects to\nother subjects. Database functions and procedures can be coded using definer's\nrights. This allows anyone who utilizes the object to perform the actions if\nthey were the owner. If not properly managed, this can lead to privileged\nactions being taken by unauthorized individuals.\n\n    Conversely, if critical tables or other objects rely on unauthorized owner\naccounts, these objects may be lost when an account is removed.\n  \"\n  desc  \"check\", \"\n    Review system documentation to identify accounts authorized to own database\nobjects. Review accounts that own objects in the database(s).\n\n    If any database objects are found to be owned by users not authorized to\nown database objects, this is a finding.\n    Check for the following:\n\n    Execute the command\n     #GET /db/_security\n    #grep \\x91names\\x92 and verify that all users are authorized to own\ndatabase objects.\n  \"\n  desc  \"fix\", \"\n    Assign ownership of authorized objects to authorized object owner accounts.\n    Use the following command to set privileges correctly:\n\n    # PUT /{db}/_security\n\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000133-DB-000200\"\n  tag \"gid\": \"V-32412\"\n  tag \"rid\": \"SV-42749r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000133-DB-000200\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001499\"]\n  tag \"nist\": [\"CM-5 (6)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32412.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Control Source Code Error C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32412.rb:3 ","run_time":0.0001226,"start_time":"2020-07-17T16:26:10-04:00","message":"invalid byte sequence in UTF-8","exception":"RuntimeError","backtrace":["C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/rule.rb:61:in `block (2 levels) in initialize'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `instance_exec'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `block in with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `block in with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:619:in `run_around_example_hooks_for'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:254:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:644:in `block in run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:606:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (3 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (2 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/configuration.rb:2058:in `with_suite_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:116:in `block in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/reporter.rb:74:in `report'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:115:in `run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner_rspec.rb:82:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:159:in `run_tests'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:130:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/kitchen-inspec-2.0.0/lib/kitchen/verifier/inspec.rb:105:in `call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:459:in `block in verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:552:in `synchronize_or_call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:514:in `block in action'","C:/opscode/chef-workstation/embedded/lib/ruby/2.7.0/benchmark.rb:293:in `measure'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:513:in `action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:451:in `verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:382:in `block (2 levels) in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/lifecycle_hooks.rb:45:in `run_with_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:381:in `block in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `each'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:162:in `verify'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `public_send'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `run_action_in_thread'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:169:in `block (2 levels) in run_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/logging-2.2.2/lib/logging/diagnostic_context.rb:474:in `block in create_with_logging_context'"]}]},{"id":"V-32413","title":"Database software, including DBMS configuration files, must be stored\nin dedicated directories, or DASD pools, separate from the host OS and other\napplications.","desc":"When dealing with change control issues, it should be noted any\nchanges to the hardware, software, and/or firmware components of the\ninformation system and/or application can potentially have significant effects\non the overall security of the system.\n\n    Multiple applications can provide a cumulative negative effect. A\nvulnerability and subsequent exploit to one application can lead to an exploit\nof other applications sharing the same security context. For example, an\nexploit to a web server process that leads to unauthorized administrative\naccess to host system directories can most likely lead to a compromise of all\napplications hosted by the same system. Database software not installed using\ndedicated directories both threatens and is threatened by other hosted\napplications. Access controls defined for one application may by default\nprovide access to the other application's database objects or directories. Any\nmethod that provides any level of separation of security context assists in the\nprotection between applications.","descriptions":[{"label":"default","data":"When dealing with change control issues, it should be noted any\nchanges to the hardware, software, and/or firmware components of the\ninformation system and/or application can potentially have significant effects\non the overall security of the system.\n\n    Multiple applications can provide a cumulative negative effect. A\nvulnerability and subsequent exploit to one application can lead to an exploit\nof other applications sharing the same security context. For example, an\nexploit to a web server process that leads to unauthorized administrative\naccess to host system directories can most likely lead to a compromise of all\napplications hosted by the same system. Database software not installed using\ndedicated directories both threatens and is threatened by other hosted\napplications. Access controls defined for one application may by default\nprovide access to the other application's database objects or directories. Any\nmethod that provides any level of separation of security context assists in the\nprotection between applications."},{"label":"check","data":"Review the CouchDB software library directory and note other root\ndirectories located on the same disk directory or any subdirectories.\n\n    If any non-CouchDB software directories exist on the disk directory,\nexamine or investigate their use. If any of the directories are used by other\napplications, including third-party applications that use the CouchDB, this is\na finding.\n\n    Only applications that are required for the functioning and administration,\nnot use, of the CouchDB should be located in the same disk directory as the\nCouchDB software libraries.\n\n    If other applications are located in the same directory as CouchDB, this is\na finding.\n\n    For databases located on mainframes, confirm that the database and its\nconfiguration files are isolated in their own DASD pools.\n\n    If database software and database configuration files share DASD with other\napplications, this is a finding."},{"label":"fix","data":"Install all applications on directories separate from CouchDB software\nlibrary directory. Relocate any directories or reinstall other application\nsoftware that currently shares the CouchDB software library directory.\n\n    For mainframe-based databases, locate database software and configuration\nfiles in separate DASD pools from other mainframe application"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000133-DB-000199","gid":"V-32413","rid":"SV-42750r3_rule","stig_id":"SRG-APP-000133-DB-000199","fix_id":null,"cci":["CCI-001499"],"nist":["CM-5 (6)","Rev_4"]},"code":"control \"V-32413\" do\n  title \"Database software, including DBMS configuration files, must be stored\nin dedicated directories, or DASD pools, separate from the host OS and other\napplications.\"\n  desc  \"When dealing with change control issues, it should be noted any\nchanges to the hardware, software, and/or firmware components of the\ninformation system and/or application can potentially have significant effects\non the overall security of the system.\n\n    Multiple applications can provide a cumulative negative effect. A\nvulnerability and subsequent exploit to one application can lead to an exploit\nof other applications sharing the same security context. For example, an\nexploit to a web server process that leads to unauthorized administrative\naccess to host system directories can most likely lead to a compromise of all\napplications hosted by the same system. Database software not installed using\ndedicated directories both threatens and is threatened by other hosted\napplications. Access controls defined for one application may by default\nprovide access to the other application's database objects or directories. Any\nmethod that provides any level of separation of security context assists in the\nprotection between applications.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB software library directory and note other root\ndirectories located on the same disk directory or any subdirectories.\n\n    If any non-CouchDB software directories exist on the disk directory,\nexamine or investigate their use. If any of the directories are used by other\napplications, including third-party applications that use the CouchDB, this is\na finding.\n\n    Only applications that are required for the functioning and administration,\nnot use, of the CouchDB should be located in the same disk directory as the\nCouchDB software libraries.\n\n    If other applications are located in the same directory as CouchDB, this is\na finding.\n\n    For databases located on mainframes, confirm that the database and its\nconfiguration files are isolated in their own DASD pools.\n\n    If database software and database configuration files share DASD with other\napplications, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Install all applications on directories separate from CouchDB software\nlibrary directory. Relocate any directories or reinstall other application\nsoftware that currently shares the CouchDB software library directory.\n\n    For mainframe-based databases, locate database software and configuration\nfiles in separate DASD pools from other mainframe application\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000133-DB-000199\"\n  tag \"gid\": \"V-32413\"\n  tag \"rid\": \"SV-42750r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000133-DB-000199\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001499\"]\n  tag \"nist\": [\"CM-5 (6)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32413.rb"},"waiver_data":{},"results":[]},{"id":"V-32414","title":"The DBMS software installation account must be restricted to\nauthorized users.","desc":"When dealing with change control issues, it should be noted any\nchanges to the hardware, software, and/or firmware components of the\ninformation system and/or application can have significant effects on the\noverall security of the system.\n\n    If the system were to allow any user to make changes to software libraries,\nthen those changes might be implemented without undergoing the appropriate\ntesting and approvals that are part of a robust change management process.\n\n    Accordingly, only qualified and authorized individuals shall be allowed\naccess to information system components for purposes of initiating changes,\nincluding upgrades and modifications.\n\n    DBA and other privileged administrative or application owner accounts are\ngranted privileges that allow actions that can have a great impact on database\nsecurity and operation. It is especially important to grant privileged access\nto only those persons who are qualified and authorized to use them.","descriptions":[{"label":"default","data":"When dealing with change control issues, it should be noted any\nchanges to the hardware, software, and/or firmware components of the\ninformation system and/or application can have significant effects on the\noverall security of the system.\n\n    If the system were to allow any user to make changes to software libraries,\nthen those changes might be implemented without undergoing the appropriate\ntesting and approvals that are part of a robust change management process.\n\n    Accordingly, only qualified and authorized individuals shall be allowed\naccess to information system components for purposes of initiating changes,\nincluding upgrades and modifications.\n\n    DBA and other privileged administrative or application owner accounts are\ngranted privileges that allow actions that can have a great impact on database\nsecurity and operation. It is especially important to grant privileged access\nto only those persons who are qualified and authorized to use them."},{"label":"check","data":"Review procedures for controlling, granting access to, and tracking use of\nCouchDB software installation account.\n\n    If access or use of this account is not restricted to the minimum number of\npersonnel required or if unauthorized access to the account has been granted,\nthis is a finding."},{"label":"fix","data":"Develop, document, and implement procedures to restrict and\ntrack use of CouchDB software installation account."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000133-DB-000198","gid":"V-32414","rid":"SV-42751r3_rule","stig_id":"SRG-APP-000133-DB-000198","fix_id":null,"cci":["CCI-001499"],"nist":["CM-5 (6)","Rev_4"]},"code":"control \"V-32414\" do\n  title \"The DBMS software installation account must be restricted to\nauthorized users.\"\n  desc  \"When dealing with change control issues, it should be noted any\nchanges to the hardware, software, and/or firmware components of the\ninformation system and/or application can have significant effects on the\noverall security of the system.\n\n    If the system were to allow any user to make changes to software libraries,\nthen those changes might be implemented without undergoing the appropriate\ntesting and approvals that are part of a robust change management process.\n\n    Accordingly, only qualified and authorized individuals shall be allowed\naccess to information system components for purposes of initiating changes,\nincluding upgrades and modifications.\n\n    DBA and other privileged administrative or application owner accounts are\ngranted privileges that allow actions that can have a great impact on database\nsecurity and operation. It is especially important to grant privileged access\nto only those persons who are qualified and authorized to use them.\n  \"\n  desc  \"check\", \"\n    Review procedures for controlling, granting access to, and tracking use of\nCouchDB software installation account.\n\n    If access or use of this account is not restricted to the minimum number of\npersonnel required or if unauthorized access to the account has been granted,\nthis is a finding.\n  \"\n  desc  \"fix\", \"Develop, document, and implement procedures to restrict and\ntrack use of CouchDB software installation account.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000133-DB-000198\"\n  tag \"gid\": \"V-32414\"\n  tag \"rid\": \"SV-42751r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000133-DB-000198\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001499\"]\n  tag \"nist\": [\"CM-5 (6)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32414.rb"},"waiver_data":{},"results":[]},{"id":"V-32415","title":"The DBMS must limit privileges to change software modules, to include\nstored procedures, functions and triggers, and links to software external to\nthe DBMS.","desc":"If the system were to allow any user to make changes to software\nlibraries, then those changes might be implemented without undergoing the\nappropriate testing and approvals that are part of a robust change management\nprocess.\n\n    Accordingly, only qualified and authorized individuals shall be allowed to\nobtain access to information system components for purposes of initiating\nchanges, including upgrades and modifications.\n\n    Unmanaged changes that occur to the database software libraries or\nconfiguration can lead to unauthorized or compromised installations.","descriptions":[{"label":"default","data":"If the system were to allow any user to make changes to software\nlibraries, then those changes might be implemented without undergoing the\nappropriate testing and approvals that are part of a robust change management\nprocess.\n\n    Accordingly, only qualified and authorized individuals shall be allowed to\nobtain access to information system components for purposes of initiating\nchanges, including upgrades and modifications.\n\n    Unmanaged changes that occur to the database software libraries or\nconfiguration can lead to unauthorized or compromised installations."},{"label":"check","data":"Review monitoring procedures and implementation evidence to verify\nmonitoring of changes to database software libraries, related applications, and\nconfiguration files is done.\n\n    Verify the list of files, directories, and database application objects\n(procedures, functions, and triggers) being monitored is complete.\n\n     #GET /db/_security\n\n    If the privileges are exceed what user and groups should have, this is a\nfinding.\n    If monitoring does not occur or is not complete, this is a finding."},{"label":"fix","data":"Implement procedures to monitor for unauthorized changes to DBMS software\nlibraries, related software application libraries, and configuration files. If\na third-party automated tool is not employed, an automated job that reports\nfile information on the directories and files of interest and compares them to\nthe baseline report for the same will meet the requirement.\n\n    Use file hashes or checksums for comparisons, as file dates may be\nmanipulated by malicious users.\n\n    Use the following command to set privileges correctly:\n\n    # PUT /{db}/_security\n\n    Example request:\n    shell> curl http://localhost:5984/pineapple/_security -X PUT -H\n'content-type: application/json' -H 'accept: application/json' -d\n'{\"admins\":{\"names\":[\"superuser\"],\"roles\":[\"admins\"]},\"members\":{\"names\":\n[\"user1\",\"user2\"],\"roles\": [\"developers\"]}}'"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000133-DB-000179","gid":"V-32415","rid":"SV-42752r3_rule","stig_id":"SRG-APP-000133-DB-000179","fix_id":null,"cci":["CCI-001499"],"nist":["CM-5 (6)","Rev_4"]},"code":"control \"V-32415\" do\n  title \"The DBMS must limit privileges to change software modules, to include\nstored procedures, functions and triggers, and links to software external to\nthe DBMS.\"\n  desc  \"If the system were to allow any user to make changes to software\nlibraries, then those changes might be implemented without undergoing the\nappropriate testing and approvals that are part of a robust change management\nprocess.\n\n    Accordingly, only qualified and authorized individuals shall be allowed to\nobtain access to information system components for purposes of initiating\nchanges, including upgrades and modifications.\n\n    Unmanaged changes that occur to the database software libraries or\nconfiguration can lead to unauthorized or compromised installations.\n  \"\n  desc  \"check\", \"\n     Review monitoring procedures and implementation evidence to verify\nmonitoring of changes to database software libraries, related applications, and\nconfiguration files is done.\n\n    Verify the list of files, directories, and database application objects\n(procedures, functions, and triggers) being monitored is complete.\n\n     #GET /db/_security\n\n    If the privileges are exceed what user and groups should have, this is a\nfinding.\n    If monitoring does not occur or is not complete, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Implement procedures to monitor for unauthorized changes to DBMS software\nlibraries, related software application libraries, and configuration files. If\na third-party automated tool is not employed, an automated job that reports\nfile information on the directories and files of interest and compares them to\nthe baseline report for the same will meet the requirement.\n\n    Use file hashes or checksums for comparisons, as file dates may be\nmanipulated by malicious users.\n\n    Use the following command to set privileges correctly:\n\n    # PUT /{db}/_security\n\n    Example request:\n    shell> curl http://localhost:5984/pineapple/_security -X PUT -H\n'content-type: application/json' -H 'accept: application/json' -d\n'{\\\"admins\\\":{\\\"names\\\":[\\\"superuser\\\"],\\\"roles\\\":[\\\"admins\\\"]},\\\"members\\\":{\\\"names\\\":\n[\\\"user1\\\",\\\"user2\\\"],\\\"roles\\\": [\\\"developers\\\"]}}'\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000133-DB-000179\"\n  tag \"gid\": \"V-32415\"\n  tag \"rid\": \"SV-42752r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000133-DB-000179\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001499\"]\n  tag \"nist\": [\"CM-5 (6)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32415.rb"},"waiver_data":{},"results":[]},{"id":"V-32423","title":"Default demonstration and sample databases, database objects, and\napplications must be removed.","desc":"Information systems are capable of providing a wide variety of\nfunctions and services. Some of the functions and services, provided by\ndefault, may not be necessary to support essential organizational operations\n(e.g., key missions, functions).\n\n    It is detrimental for software products to provide, or install by default,\nfunctionality exceeding requirements or mission objectives. Examples include,\nbut are not limited to, installing advertising software, demonstrations, or\nbrowser plugins not related to requirements or providing a wide array of\nfunctionality, not required for every mission, that cannot be disabled.\n\n    DBMSs must adhere to the principles of least functionality by providing\nonly essential capabilities.\n\n    Demonstration and sample database objects and applications present publicly\nknown attack points for malicious users. These demonstration and sample objects\nare meant to provide simple examples of coding specific functions and are not\ndeveloped to prevent vulnerabilities from being introduced to the DBMS and host\nsystem.","descriptions":[{"label":"default","data":"Information systems are capable of providing a wide variety of\nfunctions and services. Some of the functions and services, provided by\ndefault, may not be necessary to support essential organizational operations\n(e.g., key missions, functions).\n\n    It is detrimental for software products to provide, or install by default,\nfunctionality exceeding requirements or mission objectives. Examples include,\nbut are not limited to, installing advertising software, demonstrations, or\nbrowser plugins not related to requirements or providing a wide array of\nfunctionality, not required for every mission, that cannot be disabled.\n\n    DBMSs must adhere to the principles of least functionality by providing\nonly essential capabilities.\n\n    Demonstration and sample database objects and applications present publicly\nknown attack points for malicious users. These demonstration and sample objects\nare meant to provide simple examples of coding specific functions and are not\ndeveloped to prevent vulnerabilities from being introduced to the DBMS and host\nsystem."},{"label":"check","data":"Review vendor documentation and vendor websites to identify\nvendor-provided demonstration or sample databases, database applications,\nobjects, and files.\n\n    Review CouchDB to determine if any of the demonstration and sample\ndatabases, database applications, or files are installed in the database or are\nincluded with CouchDB application.\n\n    If any are present in the database or are included with CouchDB\napplication, this is a finding."},{"label":"fix","data":"Remove any demonstration and sample databases, database applications,\nobjects, and files from CouchDB.\n    Documentation build can be disabled by adding the --disable-docs flag to\nthe configure script."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000141-DB-000090","gid":"V-32423","rid":"SV-42760r3_rule","stig_id":"SRG-APP-000141-DB-000090","fix_id":null,"cci":["CCI-000381"],"nist":["CM-7 a","Rev_4"]},"code":"control \"V-32423\" do\n  title \"Default demonstration and sample databases, database objects, and\napplications must be removed.\"\n  desc  \"Information systems are capable of providing a wide variety of\nfunctions and services. Some of the functions and services, provided by\ndefault, may not be necessary to support essential organizational operations\n(e.g., key missions, functions).\n\n    It is detrimental for software products to provide, or install by default,\nfunctionality exceeding requirements or mission objectives. Examples include,\nbut are not limited to, installing advertising software, demonstrations, or\nbrowser plugins not related to requirements or providing a wide array of\nfunctionality, not required for every mission, that cannot be disabled.\n\n    DBMSs must adhere to the principles of least functionality by providing\nonly essential capabilities.\n\n    Demonstration and sample database objects and applications present publicly\nknown attack points for malicious users. These demonstration and sample objects\nare meant to provide simple examples of coding specific functions and are not\ndeveloped to prevent vulnerabilities from being introduced to the DBMS and host\nsystem.\n  \"\n  desc  \"check\", \"\n     Review vendor documentation and vendor websites to identify\nvendor-provided demonstration or sample databases, database applications,\nobjects, and files.\n\n    Review CouchDB to determine if any of the demonstration and sample\ndatabases, database applications, or files are installed in the database or are\nincluded with CouchDB application.\n\n    If any are present in the database or are included with CouchDB\napplication, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Remove any demonstration and sample databases, database applications,\nobjects, and files from CouchDB.\n    Documentation build can be disabled by adding the --disable-docs flag to\nthe configure script.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000141-DB-000090\"\n  tag \"gid\": \"V-32423\"\n  tag \"rid\": \"SV-42760r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000141-DB-000090\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000381\"]\n  tag \"nist\": [\"CM-7 a\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32423.rb"},"waiver_data":{},"results":[]},{"id":"V-32424","title":"Unused database components, DBMS software, and database objects must\nbe removed.","desc":"Information systems are capable of providing a wide variety of\nfunctions and services. Some of the functions and services, provided by\ndefault, may not be necessary to support essential organizational operations\n(e.g., key missions, functions).\n\n    It is detrimental for software products to provide, or install by default,\nfunctionality exceeding requirements or mission objectives.\n\n    DBMSs must adhere to the principles of least functionality by providing\nonly essential capabilities.","descriptions":[{"label":"default","data":"Information systems are capable of providing a wide variety of\nfunctions and services. Some of the functions and services, provided by\ndefault, may not be necessary to support essential organizational operations\n(e.g., key missions, functions).\n\n    It is detrimental for software products to provide, or install by default,\nfunctionality exceeding requirements or mission objectives.\n\n    DBMSs must adhere to the principles of least functionality by providing\nonly essential capabilities."},{"label":"check","data":"Review the list of components and features installed with the database.\n\n    Use CouchDB product installation tool if supported and review the product\ninstallation documentation.\n\n    If unused components or features are installed and are not documented and\nauthorized, this is a finding."},{"label":"fix","data":"Uninstall unused components or features that are installed and can be\nuninstalled. Remove any database objects and applications that are installed to\nsupport them.\n    Documentation build can be disabled by adding the --disable-docs flag to\nthe configure script."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000141-DB-000091","gid":"V-32424","rid":"SV-42761r3_rule","stig_id":"SRG-APP-000141-DB-000091","fix_id":null,"cci":["CCI-000381"],"nist":["CM-7 a","Rev_4"]},"code":"control \"V-32424\" do\n  title \"Unused database components, DBMS software, and database objects must\nbe removed.\"\n  desc  \"Information systems are capable of providing a wide variety of\nfunctions and services. Some of the functions and services, provided by\ndefault, may not be necessary to support essential organizational operations\n(e.g., key missions, functions).\n\n    It is detrimental for software products to provide, or install by default,\nfunctionality exceeding requirements or mission objectives.\n\n    DBMSs must adhere to the principles of least functionality by providing\nonly essential capabilities.\n  \"\n  desc  \"check\", \"\n    Review the list of components and features installed with the database.\n\n    Use CouchDB product installation tool if supported and review the product\ninstallation documentation.\n\n    If unused components or features are installed and are not documented and\nauthorized, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Uninstall unused components or features that are installed and can be\nuninstalled. Remove any database objects and applications that are installed to\nsupport them.\n    Documentation build can be disabled by adding the --disable-docs flag to\nthe configure script.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000141-DB-000091\"\n  tag \"gid\": \"V-32424\"\n  tag \"rid\": \"SV-42761r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000141-DB-000091\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000381\"]\n  tag \"nist\": [\"CM-7 a\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32424.rb"},"waiver_data":{},"results":[]},{"id":"V-32426","title":"Unused database components that are integrated in the DBMS and cannot\nbe uninstalled must be disabled.","desc":"Information systems are capable of providing a wide variety of\nfunctions and services. Some of the functions and services, provided by\ndefault, may not be necessary to support essential organizational operations\n(e.g., key missions, functions).\n\n    It is detrimental for software products to provide, or install by default,\nfunctionality exceeding requirements or mission objectives.\n\n    DBMSs must adhere to the principles of least functionality by providing\nonly essential capabilities.\n\n    Unused, unnecessary DBMS components increase the attack vector for the DBMS\nby introducing additional targets for attack. By minimizing the services and\napplications installed on the system, the number of potential vulnerabilities\nis reduced. Components of the system that are unused and cannot be uninstalled\nmust be disabled. The techniques available for disabling components will vary\nby DBMS product, OS, and the nature of the component and may include DBMS\nconfiguration settings, OS service settings, OS file access security, and DBMS\nuser/role permissions.","descriptions":[{"label":"default","data":"Information systems are capable of providing a wide variety of\nfunctions and services. Some of the functions and services, provided by\ndefault, may not be necessary to support essential organizational operations\n(e.g., key missions, functions).\n\n    It is detrimental for software products to provide, or install by default,\nfunctionality exceeding requirements or mission objectives.\n\n    DBMSs must adhere to the principles of least functionality by providing\nonly essential capabilities.\n\n    Unused, unnecessary DBMS components increase the attack vector for the DBMS\nby introducing additional targets for attack. By minimizing the services and\napplications installed on the system, the number of potential vulnerabilities\nis reduced. Components of the system that are unused and cannot be uninstalled\nmust be disabled. The techniques available for disabling components will vary\nby DBMS product, OS, and the nature of the component and may include DBMS\nconfiguration settings, OS service settings, OS file access security, and DBMS\nuser/role permissions."},{"label":"check","data":"To list all installed packages, as the system administrator, run the\nfollowing:\n\n    # RHEL/CENT Systems\n    $ sudo yum list installed | grep couchdb\n\n    # Debian Systems\n    $ dpkg --get-selections | grep couchdb\n\n    If any packages are installed that are not required, this is a finding."},{"label":"fix","data":"To remove any unneeded executables, as the system administrator, run the\nfollowing:\n\n    # RHEL/CENT Systems\n    $ sudo yum erase <package_name>\n\n    # Debian Systems\n    $ sudo apt-get remove <package_name>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000141-DB-000092","gid":"V-32426","rid":"SV-42763r4_rule","stig_id":"SRG-APP-000141-DB-000092","fix_id":null,"cci":["CCI-000381"],"nist":["CM-7 a","Rev_4"]},"code":"control \"V-32426\" do\n  title \"Unused database components that are integrated in the DBMS and cannot\nbe uninstalled must be disabled.\"\n  desc  \"Information systems are capable of providing a wide variety of\nfunctions and services. Some of the functions and services, provided by\ndefault, may not be necessary to support essential organizational operations\n(e.g., key missions, functions).\n\n    It is detrimental for software products to provide, or install by default,\nfunctionality exceeding requirements or mission objectives.\n\n    DBMSs must adhere to the principles of least functionality by providing\nonly essential capabilities.\n\n    Unused, unnecessary DBMS components increase the attack vector for the DBMS\nby introducing additional targets for attack. By minimizing the services and\napplications installed on the system, the number of potential vulnerabilities\nis reduced. Components of the system that are unused and cannot be uninstalled\nmust be disabled. The techniques available for disabling components will vary\nby DBMS product, OS, and the nature of the component and may include DBMS\nconfiguration settings, OS service settings, OS file access security, and DBMS\nuser/role permissions.\n  \"\n  desc  \"check\", \"\n     To list all installed packages, as the system administrator, run the\nfollowing:\n\n    # RHEL/CENT Systems\n    $ sudo yum list installed | grep couchdb\n\n    # Debian Systems\n    $ dpkg --get-selections | grep couchdb\n\n    If any packages are installed that are not required, this is a finding.\n  \"\n  desc  \"fix\", \"\n    To remove any unneeded executables, as the system administrator, run the\nfollowing:\n\n    # RHEL/CENT Systems\n    $ sudo yum erase <package_name>\n\n    # Debian Systems\n    $ sudo apt-get remove <package_name>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000141-DB-000092\"\n  tag \"gid\": \"V-32426\"\n  tag \"rid\": \"SV-42763r4_rule\"\n  tag \"stig_id\": \"SRG-APP-000141-DB-000092\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000381\"]\n  tag \"nist\": [\"CM-7 a\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32426.rb"},"waiver_data":{},"results":[]},{"id":"V-32427","title":"Access to external executables must be disabled or restricted.","desc":"Information systems are capable of providing a wide variety of\nfunctions and services. Some of the functions and services, provided by\ndefault, may not be necessary to support essential organizational operations\n(e.g., key missions, functions).\n\n    It is detrimental for applications to provide, or install by default,\nfunctionality exceeding requirements or mission objectives.\n\n    Applications must adhere to the principles of least functionality by\nproviding only essential capabilities.\n\n    DBMSs may spawn additional external processes to execute procedures that\nare defined in the DBMS but stored in external host files (external\nprocedures). The spawned process used to execute the external procedure may\noperate within a different OS security context than the DBMS and provide\nunauthorized access to the host system.","descriptions":[{"label":"default","data":"Information systems are capable of providing a wide variety of\nfunctions and services. Some of the functions and services, provided by\ndefault, may not be necessary to support essential organizational operations\n(e.g., key missions, functions).\n\n    It is detrimental for applications to provide, or install by default,\nfunctionality exceeding requirements or mission objectives.\n\n    Applications must adhere to the principles of least functionality by\nproviding only essential capabilities.\n\n    DBMSs may spawn additional external processes to execute procedures that\nare defined in the DBMS but stored in external host files (external\nprocedures). The spawned process used to execute the external procedure may\noperate within a different OS security context than the DBMS and provide\nunauthorized access to the host system."},{"label":"check","data":"Review the database for definitions of application executable objects\nstored external to the database.\n\n    Determine if there are methods to disable use or access, or to remove\ndefinitions for external executable objects.\n\n    List all unique file exstensions (with frequencies) for home directory:\n\n    # find <path> -r -type f -printf '%f    ' | grep -o '\\..\\+$' | sort | uniq -c | sort -rn\n\n    If any of these extension types are not allowed, this is a finding."},{"label":"fix","data":"Disable use of or remove any external application executable object\ndefinitions that are not authorized.\n\n    This command will search for a specific file extension and delete any\nfound:\n    # find . -name \"*.<extension>\" -type f -delete"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000141-DB-000093","gid":"V-32427","rid":"SV-42764r3_rule","stig_id":"SRG-APP-000141-DB-000093","fix_id":null,"cci":["CCI-000381"],"nist":["CM-7 a","Rev_4"]},"code":"control \"V-32427\" do\n  title 'Access to external executables must be disabled or restricted.'\n  desc  \"Information systems are capable of providing a wide variety of\nfunctions and services. Some of the functions and services, provided by\ndefault, may not be necessary to support essential organizational operations\n(e.g., key missions, functions).\n\n    It is detrimental for applications to provide, or install by default,\nfunctionality exceeding requirements or mission objectives.\n\n    Applications must adhere to the principles of least functionality by\nproviding only essential capabilities.\n\n    DBMSs may spawn additional external processes to execute procedures that\nare defined in the DBMS but stored in external host files (external\nprocedures). The spawned process used to execute the external procedure may\noperate within a different OS security context than the DBMS and provide\nunauthorized access to the host system.\n  \"\n  desc  \"check\", \"\n    Review the database for definitions of application executable objects\nstored external to the database.\n\n    Determine if there are methods to disable use or access, or to remove\ndefinitions for external executable objects.\n\n    List all unique file exstensions (with frequencies) for home directory:\n\n    # find <path> -r -type f -printf '%f\\\n    ' | grep -o '\\\\..\\\\+$' | sort | uniq -c | sort -rn\n\n    If any of these extension types are not allowed, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Disable use of or remove any external application executable object\ndefinitions that are not authorized.\n\n    This command will search for a specific file extension and delete any\nfound:\n    # find . -name \\\"*.<extension>\\\" -type f -delete\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000141-DB-000093\"\n  tag \"gid\": \"V-32427\"\n  tag \"rid\": \"SV-42764r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000141-DB-000093\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000381\"]\n  tag \"nist\": [\"CM-7 a\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32427.rb"},"waiver_data":{},"results":[]},{"id":"V-32428","title":"The DBMS must be configured to prohibit or restrict the use of\norganization-defined functions, ports, protocols, and/or services, as defined\nin the PPSM CAL and vulnerability assessments.","desc":"In order to prevent unauthorized connection of devices, unauthorized\ntransfer of information, or unauthorized tunneling (i.e., embedding of data\ntypes within data types), organizations must disable or restrict unused or\nunnecessary physical and logical ports/protocols/services on information\nsystems.\n\n    Applications are capable of providing a wide variety of functions and\nservices. Some of the functions and services provided by default may not be\nnecessary to support essential organizational operations. Additionally, it is\nsometimes convenient to provide multiple services from a single component\n(e.g., email and web services); however, doing so increases risk over limiting\nthe services provided by any one component.\n\n    To support the requirements and principles of least functionality, the\napplication must support the organizational requirements providing only\nessential capabilities and limiting the use of ports, protocols, and/or\nservices to only those required, authorized, and approved to conduct official\nbusiness or to address authorized quality of life issues.\n\n    Database Management Systems using ports, protocols, and services deemed\nunsafe are open to attack through those ports, protocols, and services. This\ncan allow unauthorized access to the database and through the database to other\ncomponents of the information system.","descriptions":[{"label":"default","data":"In order to prevent unauthorized connection of devices, unauthorized\ntransfer of information, or unauthorized tunneling (i.e., embedding of data\ntypes within data types), organizations must disable or restrict unused or\nunnecessary physical and logical ports/protocols/services on information\nsystems.\n\n    Applications are capable of providing a wide variety of functions and\nservices. Some of the functions and services provided by default may not be\nnecessary to support essential organizational operations. Additionally, it is\nsometimes convenient to provide multiple services from a single component\n(e.g., email and web services); however, doing so increases risk over limiting\nthe services provided by any one component.\n\n    To support the requirements and principles of least functionality, the\napplication must support the organizational requirements providing only\nessential capabilities and limiting the use of ports, protocols, and/or\nservices to only those required, authorized, and approved to conduct official\nbusiness or to address authorized quality of life issues.\n\n    Database Management Systems using ports, protocols, and services deemed\nunsafe are open to attack through those ports, protocols, and services. This\ncan allow unauthorized access to the database and through the database to other\ncomponents of the information system."}],"impact":0.5,"refs":[],"tags":{},"code":"control \"V-32428\" do\n  title \"The DBMS must be configured to prohibit or restrict the use of\norganization-defined functions, ports, protocols, and/or services, as defined\nin the PPSM CAL and vulnerability assessments.\"\n  desc  \"In order to prevent unauthorized connection of devices, unauthorized\ntransfer of information, or unauthorized tunneling (i.e., embedding of data\ntypes within data types), organizations must disable or restrict unused or\nunnecessary physical and logical ports/protocols/services on information\nsystems.\n\n    Applications are capable of providing a wide variety of functions and\nservices. Some of the functions and services provided by default may not be\nnecessary to support essential organizational operations. Additionally, it is\nsometimes convenient to provide multiple services from a single component\n(e.g., email and web services); however, doing so increases risk over limiting\nthe services provided by any one component.\n\n    To support the requirements and principles of least functionality, the\napplication must support the organizational requirements providing only\nessential capabilities and limiting the use of ports, protocols, and/or\nservices to only those required, authorized, and approved to conduct official\nbusiness or to address authorized quality of life issues.\n\n    Database Management Systems using ports, protocols, and services deemed\nunsafe are open to attack through those ports, protocols, and services. This\ncan allow unauthorized access to the database and through the database to other\ncomponents of the information system.\n  \"\n  desc  \"check\", \"\n    Review the organization-defined network functions, ports, protocols, and\nservices deemed by to be nonsecure, in accord with the Ports, Protocols, and\nServices Management (PPSM) guidance.\n\n    # find . -name \\\"default.ini\\\"\\t\n    # grep \\x91chttpd\\x92 section\n    # grep \\x91port\\x92\n    If the currently defined port configuration is deemed prohibited, this is a\nfinding.\n\n  \"\n  desc  \"fix\", \"Prohibit/restrict nonsecure network functions, ports,\nprotovols, and servies.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000142-DB-000094\"\n  tag \"gid\": \"V-32428\"\n  tag \"rid\": \"SV-42765r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000142-DB-000094\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000382\"]\n  tag \"nist\": [\"CM-7 b\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32428.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Control Source Code Error C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32428.rb:3 ","run_time":0.0001443,"start_time":"2020-07-17T16:26:10-04:00","message":"invalid byte sequence in UTF-8","exception":"RuntimeError","backtrace":["C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/rule.rb:61:in `block (2 levels) in initialize'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `instance_exec'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `block in with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `block in with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:619:in `run_around_example_hooks_for'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:254:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:644:in `block in run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:606:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (3 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (2 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/configuration.rb:2058:in `with_suite_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:116:in `block in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/reporter.rb:74:in `report'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:115:in `run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner_rspec.rb:82:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:159:in `run_tests'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:130:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/kitchen-inspec-2.0.0/lib/kitchen/verifier/inspec.rb:105:in `call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:459:in `block in verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:552:in `synchronize_or_call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:514:in `block in action'","C:/opscode/chef-workstation/embedded/lib/ruby/2.7.0/benchmark.rb:293:in `measure'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:513:in `action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:451:in `verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:382:in `block (2 levels) in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/lifecycle_hooks.rb:45:in `run_with_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:381:in `block in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `each'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:162:in `verify'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `public_send'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `run_action_in_thread'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:169:in `block (2 levels) in run_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/logging-2.2.2/lib/logging/diagnostic_context.rb:474:in `block in create_with_logging_context'"]}]},{"id":"V-32442","title":"The DBMS must uniquely identify and authenticate organizational users\n(or processes acting on behalf of organizational users).","desc":"To assure accountability and prevent unauthenticated access,\norganizational users must be identified and authenticated to prevent potential\nmisuse and compromise of the system.\n\n    Organizational users include organizational employees or individuals the\norganization deems to have equivalent status of employees (e.g., contractors).\nOrganizational users (and any processes acting on behalf of users) must be\nuniquely identified and authenticated for all accesses, except the following:\n\n    (i) Accesses explicitly identified and documented by the organization.\nOrganizations document specific user actions that can be performed on the\ninformation system without identification or authentication; and\n    (ii) Accesses that occur through authorized use of group authenticators\nwithout individual authentication. Organizations may require unique\nidentification of individuals using shared accounts, for detailed\naccountability of individual activity.","descriptions":[{"label":"default","data":"To assure accountability and prevent unauthenticated access,\norganizational users must be identified and authenticated to prevent potential\nmisuse and compromise of the system.\n\n    Organizational users include organizational employees or individuals the\norganization deems to have equivalent status of employees (e.g., contractors).\nOrganizational users (and any processes acting on behalf of users) must be\nuniquely identified and authenticated for all accesses, except the following:\n\n    (i) Accesses explicitly identified and documented by the organization.\nOrganizations document specific user actions that can be performed on the\ninformation system without identification or authentication; and\n    (ii) Accesses that occur through authorized use of group authenticators\nwithout individual authentication. Organizations may require unique\nidentification of individuals using shared accounts, for detailed\naccountability of individual activity."}],"impact":0.5,"refs":[],"tags":{},"code":"control \"V-32442\" do\n  title \"The DBMS must uniquely identify and authenticate organizational users\n(or processes acting on behalf of organizational users).\"\n  desc  \"To assure accountability and prevent unauthenticated access,\norganizational users must be identified and authenticated to prevent potential\nmisuse and compromise of the system.\n\n    Organizational users include organizational employees or individuals the\norganization deems to have equivalent status of employees (e.g., contractors).\nOrganizational users (and any processes acting on behalf of users) must be\nuniquely identified and authenticated for all accesses, except the following:\n\n    (i) Accesses explicitly identified and documented by the organization.\nOrganizations document specific user actions that can be performed on the\ninformation system without identification or authentication; and\n    (ii) Accesses that occur through authorized use of group authenticators\nwithout individual authentication. Organizations may require unique\nidentification of individuals using shared accounts, for detailed\naccountability of individual activity.\n  \"\n  desc  \"check\", \"\n    Review DBMS settings to determine whether organizational users are uniquely\nidentified and authenticated when logging on/connecting to the system.\n    Check for the following:\n\n    # find . -name \\\"local.ini\\\"\n    #grep \\x91roles\\x92 for a list of user roles.\n    If users are not uniquely identified as per organizational documentation,\nthis is a finding.\n  \"\n  desc  \"fix\", \"Configure DBMS settings to uniquely identify and authenticate\nall organizational users who log on/connect to the system.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000148-DB-000103\"\n  tag \"gid\": \"V-32442\"\n  tag \"rid\": \"SV-42779r4_rule\"\n  tag \"stig_id\": \"SRG-APP-000148-DB-000103\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000764\"]\n  tag \"nist\": [\"IA-2\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32442.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Control Source Code Error C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32442.rb:3 ","run_time":0.0001244,"start_time":"2020-07-17T16:26:10-04:00","message":"invalid byte sequence in UTF-8","exception":"RuntimeError","backtrace":["C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/rule.rb:61:in `block (2 levels) in initialize'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `instance_exec'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `block in with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `block in with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:619:in `run_around_example_hooks_for'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:254:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:644:in `block in run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:606:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (3 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (2 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/configuration.rb:2058:in `with_suite_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:116:in `block in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/reporter.rb:74:in `report'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:115:in `run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner_rspec.rb:82:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:159:in `run_tests'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:130:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/kitchen-inspec-2.0.0/lib/kitchen/verifier/inspec.rb:105:in `call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:459:in `block in verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:552:in `synchronize_or_call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:514:in `block in action'","C:/opscode/chef-workstation/embedded/lib/ruby/2.7.0/benchmark.rb:293:in `measure'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:513:in `action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:451:in `verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:382:in `block (2 levels) in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/lifecycle_hooks.rb:45:in `run_with_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:381:in `block in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `each'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:162:in `verify'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `public_send'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `run_action_in_thread'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:169:in `block (2 levels) in run_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/logging-2.2.2/lib/logging/diagnostic_context.rb:474:in `block in create_with_logging_context'"]}]},{"id":"V-32468","title":"If passwords are used for authentication, the DBMS must store only\nhashed, salted representations of passwords.","desc":"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    Authentication based on User ID and Password may be used only when it is\nnot possible to employ a PKI certificate, and requires AO approval.\n\n    In such cases, database passwords stored in clear text, using reversible\nencryption, or using unsalted hashes would be vulnerable to unauthorized\ndisclosure. Database passwords must always be in the form of one-way, salted\nhashes when stored internally or externally to the DBMS.","descriptions":[{"label":"default","data":"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    Authentication based on User ID and Password may be used only when it is\nnot possible to employ a PKI certificate, and requires AO approval.\n\n    In such cases, database passwords stored in clear text, using reversible\nencryption, or using unsalted hashes would be vulnerable to unauthorized\ndisclosure. Database passwords must always be in the form of one-way, salted\nhashes when stored internally or externally to the DBMS."},{"label":"check","data":"Review the CouchDB database settings relating to passwords that are used\nfor authentication, the CouchDB database must store only hashed, salted\nrepresentations of passwords.\n\n    CouchDB salts and hashes passwords automatically, but can be verified by:\n    # find . -name \"local.ini\"\n    #cat <path to local.ini>\n    Review this file for users along with passwords. It can be seen in the\nfollowing format:\n    admin =\n-pbkdf2-71c01cb429088ac1a1e95f3482202622dc1e53fe,226701bece4ae0fc9a373a5e02bf5d07,10\n\n    The -pbkdf2- at the begining indicates that it is hashed. If this pre-fix\nis not there, this is a finding."},{"label":"fix","data":"Restart the CouchDB services.\n    # sudo restart couchdb\n    CouchDB documentation outlines that during startup it is verified that\npasswords are hashed and if it is not, then it is done then."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000171-DB-000074","gid":"V-32468","rid":"SV-42805r3_rule","stig_id":"SRG-APP-000171-DB-000074","fix_id":null,"cci":["CCI-000196"],"nist":["IA-5 (1) (c)","Rev_4"]},"code":"control \"V-32468\" do\n  title \"If passwords are used for authentication, the DBMS must store only\nhashed, salted representations of passwords.\"\n  desc  \"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    Authentication based on User ID and Password may be used only when it is\nnot possible to employ a PKI certificate, and requires AO approval.\n\n    In such cases, database passwords stored in clear text, using reversible\nencryption, or using unsalted hashes would be vulnerable to unauthorized\ndisclosure. Database passwords must always be in the form of one-way, salted\nhashes when stored internally or externally to the DBMS.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB database settings relating to passwords that are used\nfor authentication, the CouchDB database must store only hashed, salted\nrepresentations of passwords.\n\n    CouchDB salts and hashes passwords automatically, but can be verified by:\n    # find . -name \\\"local.ini\\\"\n    #cat <path to local.ini>\n    Review this file for users along with passwords. It can be seen in the\nfollowing format:\n    admin =\n-pbkdf2-71c01cb429088ac1a1e95f3482202622dc1e53fe,226701bece4ae0fc9a373a5e02bf5d07,10\n\n    The -pbkdf2- at the begining indicates that it is hashed. If this pre-fix\nis not there, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Restart the CouchDB services.\n    # sudo restart couchdb\n    CouchDB documentation outlines that during startup it is verified that\npasswords are hashed and if it is not, then it is done then.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000171-DB-000074\"\n  tag \"gid\": \"V-32468\"\n  tag \"rid\": \"SV-42805r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000171-DB-000074\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000196\"]\n  tag \"nist\": [\"IA-5 (1) (c)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32468.rb"},"waiver_data":{},"results":[]},{"id":"V-32469","title":"If passwords are used for authentication, the DBMS must transmit only\nencrypted representations of passwords.","desc":"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    Authentication based on User ID and Password may be used only when it is\nnot possible to employ a PKI certificate, and requires AO approval.\n\n    In such cases, passwords need to be protected at all times, and encryption\nis the standard method for protecting passwords during transmission.\n\n    DBMS passwords sent in clear text format across the network are vulnerable\nto discovery by unauthorized users. Disclosure of passwords may easily lead to\nunauthorized access to the database.","descriptions":[{"label":"default","data":"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    Authentication based on User ID and Password may be used only when it is\nnot possible to employ a PKI certificate, and requires AO approval.\n\n    In such cases, passwords need to be protected at all times, and encryption\nis the standard method for protecting passwords during transmission.\n\n    DBMS passwords sent in clear text format across the network are vulnerable\nto discovery by unauthorized users. Disclosure of passwords may easily lead to\nunauthorized access to the database."},{"label":"check","data":"Review the CouchDB database settings relating to passwords are used for\nauthentication, CouchDB must transmit only encrypted representations of\npasswords.\n\n    CouchDB salts and hashes passwords automatically, but can be verified by:\n    # find . -name \"local.ini\"\n    #cat <path to local.ini>\n    Review this file for users along with passwords. It can be seen in the\nfollowing format:\n    admin =\n-pbkdf2-71c01cb429088ac1a1e95f3482202622dc1e53fe,226701bece4ae0fc9a373a5e02bf5d07,10\n\n    The -pbkdf2- at the begining indicates that it is hashed. If this pre-fix\nis not there, this is a finding."},{"label":"fix","data":"Restart the CouchDB services.\n    # sudo restart couchdb\n    CouchDB documentation outlines that during startup it is verified that\npasswords are hashed and if it is not, then it is done then."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000172-DB-000075","gid":"V-32469","rid":"SV-42806r3_rule","stig_id":"SRG-APP-000172-DB-000075","fix_id":null,"cci":["CCI-000197"],"nist":["IA-5 (1) (c)","Rev_4"]},"code":"control \"V-32469\" do\n  title \"If passwords are used for authentication, the DBMS must transmit only\nencrypted representations of passwords.\"\n  desc  \"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    Authentication based on User ID and Password may be used only when it is\nnot possible to employ a PKI certificate, and requires AO approval.\n\n    In such cases, passwords need to be protected at all times, and encryption\nis the standard method for protecting passwords during transmission.\n\n    DBMS passwords sent in clear text format across the network are vulnerable\nto discovery by unauthorized users. Disclosure of passwords may easily lead to\nunauthorized access to the database.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB database settings relating to passwords are used for\nauthentication, CouchDB must transmit only encrypted representations of\npasswords.\n\n    CouchDB salts and hashes passwords automatically, but can be verified by:\n    # find . -name \\\"local.ini\\\"\n    #cat <path to local.ini>\n    Review this file for users along with passwords. It can be seen in the\nfollowing format:\n    admin =\n-pbkdf2-71c01cb429088ac1a1e95f3482202622dc1e53fe,226701bece4ae0fc9a373a5e02bf5d07,10\n\n    The -pbkdf2- at the begining indicates that it is hashed. If this pre-fix\nis not there, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Restart the CouchDB services.\n    # sudo restart couchdb\n    CouchDB documentation outlines that during startup it is verified that\npasswords are hashed and if it is not, then it is done then.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000172-DB-000075\"\n  tag \"gid\": \"V-32469\"\n  tag \"rid\": \"SV-42806r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000172-DB-000075\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000197\"]\n  tag \"nist\": [\"IA-5 (1) (c)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32469.rb"},"waiver_data":{},"results":[]},{"id":"V-32475","title":"The DBMS, when utilizing PKI-based authentication, must validate\ncertificates by performing RFC 5280-compliant certification path validation.","desc":"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    A certificate’s certification path is the path from the end\nentity certificate to a trusted root certification authority (CA).\nCertification path validation is necessary for a relying party to make an\ninformed decision regarding acceptance of an end entity certificate.\nCertification path validation includes checks such as certificate issuer trust,\ntime validity and revocation status for each certificate in the certification\npath.  Revocation status information for CA and subject certificates in a\ncertification path is commonly provided via certificate revocation lists (CRLs)\nor online certificate status protocol (OCSP) responses.\n\n    Database Management Systems that do not validate certificates by performing\nRFC 5280-compliant certification path validation are in danger of accepting\ncertificates that are invalid and/or counterfeit. This could allow unauthorized\naccess to the database.","descriptions":[{"label":"default","data":"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    A certificate’s certification path is the path from the end\nentity certificate to a trusted root certification authority (CA).\nCertification path validation is necessary for a relying party to make an\ninformed decision regarding acceptance of an end entity certificate.\nCertification path validation includes checks such as certificate issuer trust,\ntime validity and revocation status for each certificate in the certification\npath.  Revocation status information for CA and subject certificates in a\ncertification path is commonly provided via certificate revocation lists (CRLs)\nor online certificate status protocol (OCSP) responses.\n\n    Database Management Systems that do not validate certificates by performing\nRFC 5280-compliant certification path validation are in danger of accepting\ncertificates that are invalid and/or counterfeit. This could allow unauthorized\naccess to the database."},{"label":"check","data":"# find local.ini\n    # grep \"cacert_file =\" <path to local.ini>\n    If cacert_file path does not exist, this is a finding.\n    # grep \"cert_file =\" <path to local.ini>\n    If cert_file path does not exist, this is a finding.\n    # grep \"secure_renegotiate\" <path to local.ini>\n    If commented out, or not set to true, this is a finding.\n\n    If certificates are not being validated by performing RFC 5280-compliant\ncertification path validation, this is a finding."},{"label":"fix","data":"# find local.ini\n    # set secure_renegotiate = true\n    # set cacert_file = <cert path>\n    # set cert_file = <cert path>\n\n    Verify certificates are being validated by performing RFC 5280-compliant\ncertification path validation."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000175-DB-000067","gid":"V-32475","rid":"SV-42812r3_rule","stig_id":"SRG-APP-000175-DB-000067","fix_id":"F-36390r3_fix","cci":["CCI-000185"],"nist":["IA-5 (2) (a)","Rev_4"]},"code":"control \"V-32475\" do\n  title \"The DBMS, when utilizing PKI-based authentication, must validate\ncertificates by performing RFC 5280-compliant certification path validation.\"\n  desc  \"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    A certificate\\xE2\\x80\\x99s certification path is the path from the end\nentity certificate to a trusted root certification authority (CA).\nCertification path validation is necessary for a relying party to make an\ninformed decision regarding acceptance of an end entity certificate.\nCertification path validation includes checks such as certificate issuer trust,\ntime validity and revocation status for each certificate in the certification\npath.  Revocation status information for CA and subject certificates in a\ncertification path is commonly provided via certificate revocation lists (CRLs)\nor online certificate status protocol (OCSP) responses.\n\n    Database Management Systems that do not validate certificates by performing\nRFC 5280-compliant certification path validation are in danger of accepting\ncertificates that are invalid and/or counterfeit. This could allow unauthorized\naccess to the database.\n  \"\n  desc  \"check\", \"\n    # find local.ini\n    # grep \\\"cacert_file =\\\" <path to local.ini>\n    If cacert_file path does not exist, this is a finding.\n    # grep \\\"cert_file =\\\" <path to local.ini>\n    If cert_file path does not exist, this is a finding.\n    # grep \\\"secure_renegotiate\\\" <path to local.ini>\n    If commented out, or not set to true, this is a finding.\n\n    If certificates are not being validated by performing RFC 5280-compliant\ncertification path validation, this is a finding.\n  \"\n  desc  \"fix\", \"\n    # find local.ini\n    # set secure_renegotiate = true\n    # set cacert_file = <cert path>\n    # set cert_file = <cert path>\n\n    Verify certificates are being validated by performing RFC 5280-compliant\ncertification path validation.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000175-DB-000067\"\n  tag \"gid\": \"V-32475\"\n  tag \"rid\": \"SV-42812r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000175-DB-000067\"\n  tag \"fix_id\": \"F-36390r3_fix\"\n  tag \"cci\": [\"CCI-000185\"]\n  tag \"nist\": [\"IA-5 (2) (a)\", \"Rev_4\"]\n\n  describe file(input('couchdb_conf')) do\n    it { should exist }\n  end\n  describe ini(input('couchdb_conf')) do\n    its('ssl.secure_renegotiate') { should eq 'true' }\n  end\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32475.rb"},"waiver_data":{},"results":[{"status":"passed","code_desc":"File /opt/couchdb/etc/local.ini is expected to exist","run_time":0.0732028,"start_time":"2020-07-17T16:26:10-04:00"},{"status":"failed","code_desc":"INI /opt/couchdb/etc/local.ini ssl.secure_renegotiate is expected to eq \"true\"","run_time":0.0767576,"start_time":"2020-07-17T16:26:10-04:00","message":"\nexpected: \"true\"\n     got: nil\n\n(compared using ==)\n"}]},{"id":"V-32476","title":"The DBMS must enforce authorized access to all PKI private keys\nstored/utilized by the DBMS.","desc":"The DoD standard for authentication is DoD-approved PKI certificates.\nPKI certificate-based authentication is performed by requiring the certificate\nholder to cryptographically prove possession of the corresponding private key.\n\n    If the private key is stolen, an attacker can use the private key(s) to\nimpersonate the certificate holder.  In cases where the DBMS-stored private\nkeys are used to authenticate the DBMS to the system’s clients, loss\nof the corresponding private keys would allow an attacker to successfully\nperform undetected man in the middle attacks against the DBMS system and its\nclients.\n\n    Both the holder of a digital certificate and the issuing authority must\ntake careful measures to protect the corresponding private key. Private keys\nshould always be generated and protected in FIPS 140-2 validated cryptographic\nmodules.\n\n    All access to the private key(s) of the DBMS must be restricted to\nauthorized and authenticated users. If unauthorized users have access to one or\nmore of the DBMS's private keys, an attacker could gain access to the key(s)\nand use them to impersonate the database on the network or otherwise perform\nunauthorized actions.","descriptions":[{"label":"default","data":"The DoD standard for authentication is DoD-approved PKI certificates.\nPKI certificate-based authentication is performed by requiring the certificate\nholder to cryptographically prove possession of the corresponding private key.\n\n    If the private key is stolen, an attacker can use the private key(s) to\nimpersonate the certificate holder.  In cases where the DBMS-stored private\nkeys are used to authenticate the DBMS to the system’s clients, loss\nof the corresponding private keys would allow an attacker to successfully\nperform undetected man in the middle attacks against the DBMS system and its\nclients.\n\n    Both the holder of a digital certificate and the issuing authority must\ntake careful measures to protect the corresponding private key. Private keys\nshould always be generated and protected in FIPS 140-2 validated cryptographic\nmodules.\n\n    All access to the private key(s) of the DBMS must be restricted to\nauthorized and authenticated users. If unauthorized users have access to one or\nmore of the DBMS's private keys, an attacker could gain access to the key(s)\nand use them to impersonate the database on the network or otherwise perform\nunauthorized actions."}],"impact":0.5,"refs":[],"tags":{},"code":"control \"V-32476\" do\n  title \"The DBMS must enforce authorized access to all PKI private keys\nstored/utilized by the DBMS.\"\n  desc  \"The DoD standard for authentication is DoD-approved PKI certificates.\nPKI certificate-based authentication is performed by requiring the certificate\nholder to cryptographically prove possession of the corresponding private key.\n\n    If the private key is stolen, an attacker can use the private key(s) to\nimpersonate the certificate holder.  In cases where the DBMS-stored private\nkeys are used to authenticate the DBMS to the system\\xE2\\x80\\x99s clients, loss\nof the corresponding private keys would allow an attacker to successfully\nperform undetected man in the middle attacks against the DBMS system and its\nclients.\n\n    Both the holder of a digital certificate and the issuing authority must\ntake careful measures to protect the corresponding private key. Private keys\nshould always be generated and protected in FIPS 140-2 validated cryptographic\nmodules.\n\n    All access to the private key(s) of the DBMS must be restricted to\nauthorized and authenticated users. If unauthorized users have access to one or\nmore of the DBMS's private keys, an attacker could gain access to the key(s)\nand use them to impersonate the database on the network or otherwise perform\nunauthorized actions.\n  \"\n  desc  \"check\", \"\n    Review CouchDB configuration to determine whether appropriate access\ncontrols exist to protect CouchDB's private key(s). If the CouchDB\\x92s private\nkey(s) are not stored in a FIPS 140-2 validated cryptographic module, this is a\nfinding.\n\n    # find . -name \\\"local.ini\\\"\n\n    # grep \\x91ssl\\x92 section\n    # grep \\\"cacert_file =\\\" <path to local.ini>\n    # grep \\\"cert_file =\\\" <path to local.ini>\n    # grep \\\"key_file =\\\" <path to local.ini>\n\n    If the directory these files are stored in is not protected, this is a\nfinding.\n  \"\n  desc  \"fix\", \"\n    Store all CouchDB PKI private keys in a FIPS 140-2-validated cryptographic\nmodule.\n\n    Ensure access to Couch PKI private keys is restricted to only authenticated\nand authorized users.\n\n    Example:\n\n    ssl_ca_file = \\\"/some/protected/directory/root.crt\\\"\n    ssl_crl_file = \\\"/some/protected/directory/root.crl\\\"\n    ssl_cert_file = \\\"/some/protected/directory/server.crt\\\"\n\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000176-DB-000068\"\n  tag \"gid\": \"V-32476\"\n  tag \"rid\": \"SV-42813r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000176-DB-000068\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000186\"]\n  tag \"nist\": [\"IA-5 (2)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32476.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Control Source Code Error C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32476.rb:3 ","run_time":8.43e-05,"start_time":"2020-07-17T16:26:10-04:00","message":"invalid byte sequence in UTF-8","exception":"RuntimeError","backtrace":["C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/rule.rb:61:in `block (2 levels) in initialize'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `instance_exec'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `block in with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `block in with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:619:in `run_around_example_hooks_for'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:254:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:644:in `block in run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:606:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (3 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (2 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/configuration.rb:2058:in `with_suite_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:116:in `block in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/reporter.rb:74:in `report'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:115:in `run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner_rspec.rb:82:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:159:in `run_tests'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:130:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/kitchen-inspec-2.0.0/lib/kitchen/verifier/inspec.rb:105:in `call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:459:in `block in verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:552:in `synchronize_or_call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:514:in `block in action'","C:/opscode/chef-workstation/embedded/lib/ruby/2.7.0/benchmark.rb:293:in `measure'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:513:in `action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:451:in `verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:382:in `block (2 levels) in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/lifecycle_hooks.rb:45:in `run_with_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:381:in `block in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `each'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:162:in `verify'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `public_send'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `run_action_in_thread'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:169:in `block (2 levels) in run_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/logging-2.2.2/lib/logging/diagnostic_context.rb:474:in `block in create_with_logging_context'"]}]},{"id":"V-32478","title":"The DBMS must map the PKI-authenticated identity to an associated user\naccount.","desc":"The DoD standard for authentication is DoD-approved PKI certificates.\nOnce a PKI certificate has been validated, it must be mapped to a DBMS user\naccount for the authenticated identity to be meaningful to the DBMS and useful\nfor authorization decisions.","descriptions":[{"label":"default","data":"The DoD standard for authentication is DoD-approved PKI certificates.\nOnce a PKI certificate has been validated, it must be mapped to a DBMS user\naccount for the authenticated identity to be meaningful to the DBMS and useful\nfor authorization decisions."},{"label":"check","data":"Review DBMS configuration to verify DBMS user accounts are being mapped\ndirectly to unique identifying information within the validated PKI certificate.\n\n    To check the cn of the certificate, using openssl, do the following:\n\n    # openssl x509 -noout -subject -in client_cert\n\n    If the cn does not match the users listed in CouchDB and no user mapping is\nused, this is a finding.\n\n    If user accounts are not being mapped to authenticated identities, this is\na finding.\n\n    If the cn and the username mapping do not match, this is a finding."},{"label":"fix","data":"Configure CouchDB to map the authenticated identity directly to\nCouchDB user account."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000177-DB-000069","gid":"V-32478","rid":"SV-42815r3_rule","stig_id":"SRG-APP-000177-DB-000069","fix_id":null,"cci":["CCI-000187"],"nist":["IA-5 (2) (c)","Rev_4"]},"code":"control \"V-32478\" do\n  title \"The DBMS must map the PKI-authenticated identity to an associated user\naccount.\"\n  desc  \"The DoD standard for authentication is DoD-approved PKI certificates.\nOnce a PKI certificate has been validated, it must be mapped to a DBMS user\naccount for the authenticated identity to be meaningful to the DBMS and useful\nfor authorization decisions.\"\n  desc  \"check\", \"\n    Review DBMS configuration to verify DBMS user accounts are being mapped\ndirectly to unique identifying information within the validated PKI certificate.\n\n    To check the cn of the certificate, using openssl, do the following:\n\n    # openssl x509 -noout -subject -in client_cert\n\n    If the cn does not match the users listed in CouchDB and no user mapping is\nused, this is a finding.\n\n    If user accounts are not being mapped to authenticated identities, this is\na finding.\n\n    If the cn and the username mapping do not match, this is a finding.\n  \"\n  desc  \"fix\", \"Configure CouchDB to map the authenticated identity directly to\nCouchDB user account.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000177-DB-000069\"\n  tag \"gid\": \"V-32478\"\n  tag \"rid\": \"SV-42815r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000177-DB-000069\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000187\"]\n  tag \"nist\": [\"IA-5 (2) (c)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32478.rb"},"waiver_data":{},"results":[]},{"id":"V-32479","title":"The DBMS must obscure feedback of authentication information during\nthe authentication process to protect the information from possible\nexploitation/use by unauthorized individuals.","desc":"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    Normally, with PKI authentication, the interaction with the user for\nauthentication will be handled by a software component separate from the DBMS,\nsuch as ActivIdentity ActivClient. However, in cases where the DBMS controls\nthe interaction, this requirement applies.\n\n    To prevent the compromise of authentication information such as passwords\nand PINs during the authentication process, the feedback from the system must\nnot provide any information that would allow an unauthorized user to compromise\nthe authentication mechanism.\n\n    Obfuscation of user-provided authentication secrets when typed into the\nsystem is a method used in addressing this risk.\n\n    Displaying asterisks when a user types in a password or a smart card PIN is\nan example of obscuring feedback of authentication secrets.\n\n    This calls for review of applications, which will require collaboration\nwith the application developers. It is recognized that in many cases, the\ndatabase administrator (DBA) is organizationally separate from the application\ndevelopers, and may have limited, if any, access to source code. Nevertheless,\nprotections of this type are so important to the secure operation of databases\nthat they must not be ignored. At a minimum, the DBA must attempt to obtain\nassurances from the development organization that this issue has been\naddressed, and must document what has been discovered.","descriptions":[{"label":"default","data":"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    Normally, with PKI authentication, the interaction with the user for\nauthentication will be handled by a software component separate from the DBMS,\nsuch as ActivIdentity ActivClient. However, in cases where the DBMS controls\nthe interaction, this requirement applies.\n\n    To prevent the compromise of authentication information such as passwords\nand PINs during the authentication process, the feedback from the system must\nnot provide any information that would allow an unauthorized user to compromise\nthe authentication mechanism.\n\n    Obfuscation of user-provided authentication secrets when typed into the\nsystem is a method used in addressing this risk.\n\n    Displaying asterisks when a user types in a password or a smart card PIN is\nan example of obscuring feedback of authentication secrets.\n\n    This calls for review of applications, which will require collaboration\nwith the application developers. It is recognized that in many cases, the\ndatabase administrator (DBA) is organizationally separate from the application\ndevelopers, and may have limited, if any, access to source code. Nevertheless,\nprotections of this type are so important to the secure operation of databases\nthat they must not be ignored. At a minimum, the DBA must attempt to obtain\nassurances from the development organization that this issue has been\naddressed, and must document what has been discovered."},{"label":"check","data":"If all interaction with the user for purposes of authentication is handled\nby a software component separate from CouchDB, this is not a finding.\n\n    If any application, tool or feature associated with CouchDB/database\ndisplays any authentication secrets (to include PINs and passwords) during - or\nafter - the authentication process, this is a finding."},{"label":"fix","data":"Modify and configure each non-compliant application, tool, or\nfeature associated with the CouchDB databse so that it does not display\nauthentication secrets."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000178-DB-000083","gid":"V-32479","rid":"SV-42816r4_rule","stig_id":"SRG-APP-000178-DB-000083","fix_id":null,"cci":["CCI-000206"],"nist":["IA-6","Rev_4"]},"code":"control \"V-32479\" do\n  title \"The DBMS must obscure feedback of authentication information during\nthe authentication process to protect the information from possible\nexploitation/use by unauthorized individuals.\"\n  desc  \"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    Normally, with PKI authentication, the interaction with the user for\nauthentication will be handled by a software component separate from the DBMS,\nsuch as ActivIdentity ActivClient. However, in cases where the DBMS controls\nthe interaction, this requirement applies.\n\n    To prevent the compromise of authentication information such as passwords\nand PINs during the authentication process, the feedback from the system must\nnot provide any information that would allow an unauthorized user to compromise\nthe authentication mechanism.\n\n    Obfuscation of user-provided authentication secrets when typed into the\nsystem is a method used in addressing this risk.\n\n    Displaying asterisks when a user types in a password or a smart card PIN is\nan example of obscuring feedback of authentication secrets.\n\n    This calls for review of applications, which will require collaboration\nwith the application developers. It is recognized that in many cases, the\ndatabase administrator (DBA) is organizationally separate from the application\ndevelopers, and may have limited, if any, access to source code. Nevertheless,\nprotections of this type are so important to the secure operation of databases\nthat they must not be ignored. At a minimum, the DBA must attempt to obtain\nassurances from the development organization that this issue has been\naddressed, and must document what has been discovered.\n  \"\n  desc  \"check\", \"\n    If all interaction with the user for purposes of authentication is handled\nby a software component separate from CouchDB, this is not a finding.\n\n    If any application, tool or feature associated with CouchDB/database\ndisplays any authentication secrets (to include PINs and passwords) during - or\nafter - the authentication process, this is a finding.\n  \"\n  desc  \"fix\", \"Modify and configure each non-compliant application, tool, or\nfeature associated with the CouchDB databse so that it does not display\nauthentication secrets.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000178-DB-000083\"\n  tag \"gid\": \"V-32479\"\n  tag \"rid\": \"SV-42816r4_rule\"\n  tag \"stig_id\": \"SRG-APP-000178-DB-000083\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000206\"]\n  tag \"nist\": [\"IA-6\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32479.rb"},"waiver_data":{},"results":[]},{"id":"V-32480","title":"The DBMS must use NIST FIPS 140-2 validated cryptographic modules for\ncryptographic operations.","desc":"Use of weak or not validated cryptographic algorithms undermines the\npurposes of utilizing encryption and digital signatures to protect data.  Weak\nalgorithms can be easily broken and not validated cryptographic modules may not\nimplement algorithms correctly. Unapproved cryptographic modules or algorithms\nshould not be relied on for authentication, confidentiality or integrity. Weak\ncryptography could allow an attacker to gain access to and modify data stored\nin the database as well as the administration settings of the DBMS.\n\n    Applications, including DBMSs, utilizing cryptography are required to use\napproved NIST FIPS 140-2 validated cryptographic modules that meet the\nrequirements of applicable federal laws, Executive Orders, directives,\npolicies, regulations, standards, and guidance.\n\n    The security functions validated as part of FIPS 140-2 for cryptographic\nmodules are described in FIPS 140-2 Annex A.\n\n    NSA Type-X (where X=1, 2, 3, 4) products are NSA-certified, hardware-based\nencryption modules.","descriptions":[{"label":"default","data":"Use of weak or not validated cryptographic algorithms undermines the\npurposes of utilizing encryption and digital signatures to protect data.  Weak\nalgorithms can be easily broken and not validated cryptographic modules may not\nimplement algorithms correctly. Unapproved cryptographic modules or algorithms\nshould not be relied on for authentication, confidentiality or integrity. Weak\ncryptography could allow an attacker to gain access to and modify data stored\nin the database as well as the administration settings of the DBMS.\n\n    Applications, including DBMSs, utilizing cryptography are required to use\napproved NIST FIPS 140-2 validated cryptographic modules that meet the\nrequirements of applicable federal laws, Executive Orders, directives,\npolicies, regulations, standards, and guidance.\n\n    The security functions validated as part of FIPS 140-2 for cryptographic\nmodules are described in FIPS 140-2 Annex A.\n\n    NSA Type-X (where X=1, 2, 3, 4) products are NSA-certified, hardware-based\nencryption modules."},{"label":"check","data":"As the system administrator, run the following:\n\n$ openssl version\n\nIf \"fips\" is not included in the openssl version, this is a finding."},{"label":"fix","data":"Configure OpenSSL to meet FIPS Compliance using the following documentation\nin section 9.1:\n\n    http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140sp/140sp1758.pdf"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000179-DB-000114","gid":"V-32480","rid":"SV-42817r3_rule","stig_id":"SRG-APP-000179-DB-000114","fix_id":null,"cci":["CCI-000803"],"nist":["IA-7","Rev_4"]},"code":"control \"V-32480\" do\n  title \"The DBMS must use NIST FIPS 140-2 validated cryptographic modules for\ncryptographic operations.\"\n  desc  \"Use of weak or not validated cryptographic algorithms undermines the\npurposes of utilizing encryption and digital signatures to protect data.  Weak\nalgorithms can be easily broken and not validated cryptographic modules may not\nimplement algorithms correctly. Unapproved cryptographic modules or algorithms\nshould not be relied on for authentication, confidentiality or integrity. Weak\ncryptography could allow an attacker to gain access to and modify data stored\nin the database as well as the administration settings of the DBMS.\n\n    Applications, including DBMSs, utilizing cryptography are required to use\napproved NIST FIPS 140-2 validated cryptographic modules that meet the\nrequirements of applicable federal laws, Executive Orders, directives,\npolicies, regulations, standards, and guidance.\n\n    The security functions validated as part of FIPS 140-2 for cryptographic\nmodules are described in FIPS 140-2 Annex A.\n\n    NSA Type-X (where X=1, 2, 3, 4) products are NSA-certified, hardware-based\nencryption modules.\n  \"\n  desc  \"check\", \"\n    As the system administrator, run the following:\n\n    $ openssl version\n\n    If \\\"fips\\\" is not included in the openssl version, this is a finding.\n\n  \"\n  desc  \"fix\", \"\n    Configure OpenSSL to meet FIPS Compliance using the following documentation\nin section 9.1:\n\n    http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140sp/140sp1758.pdf\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000179-DB-000114\"\n  tag \"gid\": \"V-32480\"\n  tag \"rid\": \"SV-42817r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000179-DB-000114\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000803\"]\n  tag \"nist\": [\"IA-7\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32480.rb"},"waiver_data":{},"results":[]},{"id":"V-32481","title":"The DBMS must uniquely identify and authenticate non-organizational\nusers (or processes acting on behalf of non-organizational users).","desc":"Non-organizational users include all information system users other\nthan organizational users, which include organizational employees or\nindividuals the organization deems to have equivalent status of employees\n(e.g., contractors, guest researchers, individuals from allied nations).\n\n    Non-organizational users shall be uniquely identified and authenticated for\nall accesses other than those accesses explicitly identified and documented by\nthe organization when related to the use of anonymous access, such as accessing\na web server.\n\n    Accordingly, a risk assessment is used in determining the authentication\nneeds of the organization.\n\n    Scalability, practicality, and security are simultaneously considered in\nbalancing the need to ensure ease of use for access to federal information and\ninformation systems with the need to protect and adequately mitigate risk to\norganizational operations, organizational assets, individuals, other\norganizations, and the Nation.","descriptions":[{"label":"default","data":"Non-organizational users include all information system users other\nthan organizational users, which include organizational employees or\nindividuals the organization deems to have equivalent status of employees\n(e.g., contractors, guest researchers, individuals from allied nations).\n\n    Non-organizational users shall be uniquely identified and authenticated for\nall accesses other than those accesses explicitly identified and documented by\nthe organization when related to the use of anonymous access, such as accessing\na web server.\n\n    Accordingly, a risk assessment is used in determining the authentication\nneeds of the organization.\n\n    Scalability, practicality, and security are simultaneously considered in\nbalancing the need to ensure ease of use for access to federal information and\ninformation systems with the need to protect and adequately mitigate risk to\norganizational operations, organizational assets, individuals, other\norganizations, and the Nation."}],"impact":0.5,"refs":[],"tags":{},"code":"control \"V-32481\" do\n  title \"The DBMS must uniquely identify and authenticate non-organizational\nusers (or processes acting on behalf of non-organizational users).\"\n  desc  \"Non-organizational users include all information system users other\nthan organizational users, which include organizational employees or\nindividuals the organization deems to have equivalent status of employees\n(e.g., contractors, guest researchers, individuals from allied nations).\n\n    Non-organizational users shall be uniquely identified and authenticated for\nall accesses other than those accesses explicitly identified and documented by\nthe organization when related to the use of anonymous access, such as accessing\na web server.\n\n    Accordingly, a risk assessment is used in determining the authentication\nneeds of the organization.\n\n    Scalability, practicality, and security are simultaneously considered in\nbalancing the need to ensure ease of use for access to federal information and\ninformation systems with the need to protect and adequately mitigate risk to\norganizational operations, organizational assets, individuals, other\norganizations, and the Nation.\n  \"\n  desc  \"check\", \"\n    Check for the following:\n\n    # find . -name \\\"local.ini\\\"\n    #grep \\x91roles\\x92 for a list of user roles.\n    If users are not uniquely identified as per organizational documentation,\nthis is a finding.\n  \"\n  desc  \"fix\", \"Configure DBMS settings to uniquely identify and authenticate\nall non-organizational users who log onto the system.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000180-DB-000115\"\n  tag \"gid\": \"V-32481\"\n  tag \"rid\": \"SV-42818r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000180-DB-000115\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000804\"]\n  tag \"nist\": [\"IA-8\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32481.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Control Source Code Error C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32481.rb:3 ","run_time":5.51e-05,"start_time":"2020-07-17T16:26:10-04:00","message":"invalid byte sequence in UTF-8","exception":"RuntimeError","backtrace":["C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/rule.rb:61:in `block (2 levels) in initialize'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `instance_exec'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `block in with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `block in with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:619:in `run_around_example_hooks_for'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:254:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:644:in `block in run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:606:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (3 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (2 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/configuration.rb:2058:in `with_suite_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:116:in `block in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/reporter.rb:74:in `report'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:115:in `run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner_rspec.rb:82:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:159:in `run_tests'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:130:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/kitchen-inspec-2.0.0/lib/kitchen/verifier/inspec.rb:105:in `call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:459:in `block in verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:552:in `synchronize_or_call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:514:in `block in action'","C:/opscode/chef-workstation/embedded/lib/ruby/2.7.0/benchmark.rb:293:in `measure'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:513:in `action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:451:in `verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:382:in `block (2 levels) in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/lifecycle_hooks.rb:45:in `run_with_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:381:in `block in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `each'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:162:in `verify'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `public_send'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `run_action_in_thread'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:169:in `block (2 levels) in run_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/logging-2.2.2/lib/logging/diagnostic_context.rb:474:in `block in create_with_logging_context'"]}]},{"id":"V-32514","title":"The DBMS must separate user functionality (including user interface\nservices) from database management functionality.","desc":"Information system management functionality includes functions\nnecessary to administer databases, network components, workstations, or servers\nand typically requires privileged user access.\n\n    The separation of user functionality from information system management\nfunctionality is either physical or logical and is accomplished by using\ndifferent computers, different central processing units, different instances of\nthe operating system, different network addresses, combinations of these\nmethods, or other methods, as appropriate.\n\n    An example of this type of separation is observed in web administrative\ninterfaces that use separate authentication methods for users of any other\ninformation system resources.\n\n    This may include isolating the administrative interface on a different\ndomain and with additional access controls.\n\n    If administrative functionality or information regarding DBMS management is\npresented on an interface available for users, information on DBMS settings may\nbe inadvertently made available to the user.","descriptions":[{"label":"default","data":"Information system management functionality includes functions\nnecessary to administer databases, network components, workstations, or servers\nand typically requires privileged user access.\n\n    The separation of user functionality from information system management\nfunctionality is either physical or logical and is accomplished by using\ndifferent computers, different central processing units, different instances of\nthe operating system, different network addresses, combinations of these\nmethods, or other methods, as appropriate.\n\n    An example of this type of separation is observed in web administrative\ninterfaces that use separate authentication methods for users of any other\ninformation system resources.\n\n    This may include isolating the administrative interface on a different\ndomain and with additional access controls.\n\n    If administrative functionality or information regarding DBMS management is\npresented on an interface available for users, information on DBMS settings may\nbe inadvertently made available to the user."}],"impact":0.5,"refs":[],"tags":{},"code":"control \"V-32514\" do\n  title \"The DBMS must separate user functionality (including user interface\nservices) from database management functionality.\"\n  desc  \"Information system management functionality includes functions\nnecessary to administer databases, network components, workstations, or servers\nand typically requires privileged user access.\n\n    The separation of user functionality from information system management\nfunctionality is either physical or logical and is accomplished by using\ndifferent computers, different central processing units, different instances of\nthe operating system, different network addresses, combinations of these\nmethods, or other methods, as appropriate.\n\n    An example of this type of separation is observed in web administrative\ninterfaces that use separate authentication methods for users of any other\ninformation system resources.\n\n    This may include isolating the administrative interface on a different\ndomain and with additional access controls.\n\n    If administrative functionality or information regarding DBMS management is\npresented on an interface available for users, information on DBMS settings may\nbe inadvertently made available to the user.\n  \"\n  desc  \"check\", \"\n    Check DBMS settings and vendor documentation to verify that administrative\nfunctionality is separate from user functionality.\n\n    If administrator and general user functionality are not separated either\nphysically or logically, this is a finding.\n    #grep \\x91roles\\x92 for a list of user roles.\n    If any non-administrative role has the attribute \\\"Superuser\\\", \\\"Create\nrole\\\", \\\"Create DB\\\" or \\\"Bypass RLS\\\", this is a finding.\n\n    If administrator and general user functionality are not separated either\nphysically or logically, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to separate database administration and general user\nfunctionality.\n\n    Do not grant superuser, create role, create db or bypass rls role\nattributes to users that do not require it.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000211-DB-000122\"\n  tag \"gid\": \"V-32514\"\n  tag \"rid\": \"SV-42851r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000211-DB-000122\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001082\"]\n  tag \"nist\": [\"SC-2\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32514.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Control Source Code Error C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32514.rb:3 ","run_time":4.61e-05,"start_time":"2020-07-17T16:26:10-04:00","message":"invalid byte sequence in UTF-8","exception":"RuntimeError","backtrace":["C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/rule.rb:61:in `block (2 levels) in initialize'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `instance_exec'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `block in with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `block in with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:619:in `run_around_example_hooks_for'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:254:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:644:in `block in run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:606:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (3 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (2 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/configuration.rb:2058:in `with_suite_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:116:in `block in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/reporter.rb:74:in `report'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:115:in `run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner_rspec.rb:82:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:159:in `run_tests'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:130:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/kitchen-inspec-2.0.0/lib/kitchen/verifier/inspec.rb:105:in `call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:459:in `block in verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:552:in `synchronize_or_call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:514:in `block in action'","C:/opscode/chef-workstation/embedded/lib/ruby/2.7.0/benchmark.rb:293:in `measure'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:513:in `action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:451:in `verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:382:in `block (2 levels) in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/lifecycle_hooks.rb:45:in `run_with_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:381:in `block in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `each'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:162:in `verify'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `public_send'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `run_action_in_thread'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:169:in `block (2 levels) in run_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/logging-2.2.2/lib/logging/diagnostic_context.rb:474:in `block in create_with_logging_context'"]}]},{"id":"V-32523","title":"The DBMS must invalidate session identifiers upon user logout or other\nsession termination.","desc":"Captured sessions can be reused in \"replay\" attacks. This\nrequirement limits the ability of adversaries to capture and continue to employ\npreviously valid session IDs.\n\n    This requirement focuses on communications protection for the DBMS session\nrather than for the network packet. The intent of this control is to establish\ngrounds for confidence at each end of a communications session in the ongoing\nidentity of the other party and in the validity of the information being\ntransmitted.\n\n    Session IDs are tokens generated by DBMSs to uniquely identify a user's (or\nprocess's) session. DBMSs will make access decisions and execute logic based on\nthe session ID.\n\n    Unique session IDs help to reduce predictability of said identifiers.\nUnique session IDs address man-in-the-middle attacks, including session\nhijacking or insertion of false information into a session. If the attacker is\nunable to identify or guess the session information related to pending\napplication traffic, they will have more difficulty in hijacking the session or\notherwise manipulating valid sessions.\n\n    When a user logs out, or when any other session termination event occurs,\nthe DBMS must terminate the user session(s) to minimize the potential for\nsessions to be hijacked.","descriptions":[{"label":"default","data":"Captured sessions can be reused in \"replay\" attacks. This\nrequirement limits the ability of adversaries to capture and continue to employ\npreviously valid session IDs.\n\n    This requirement focuses on communications protection for the DBMS session\nrather than for the network packet. The intent of this control is to establish\ngrounds for confidence at each end of a communications session in the ongoing\nidentity of the other party and in the validity of the information being\ntransmitted.\n\n    Session IDs are tokens generated by DBMSs to uniquely identify a user's (or\nprocess's) session. DBMSs will make access decisions and execute logic based on\nthe session ID.\n\n    Unique session IDs help to reduce predictability of said identifiers.\nUnique session IDs address man-in-the-middle attacks, including session\nhijacking or insertion of false information into a session. If the attacker is\nunable to identify or guess the session information related to pending\napplication traffic, they will have more difficulty in hijacking the session or\notherwise manipulating valid sessions.\n\n    When a user logs out, or when any other session termination event occurs,\nthe DBMS must terminate the user session(s) to minimize the potential for\nsessions to be hijacked."}],"impact":0.5,"refs":[],"tags":{},"code":"control \"V-32523\" do\n  title \"The DBMS must invalidate session identifiers upon user logout or other\nsession termination.\"\n  desc  \"Captured sessions can be reused in \\\"replay\\\" attacks. This\nrequirement limits the ability of adversaries to capture and continue to employ\npreviously valid session IDs.\n\n    This requirement focuses on communications protection for the DBMS session\nrather than for the network packet. The intent of this control is to establish\ngrounds for confidence at each end of a communications session in the ongoing\nidentity of the other party and in the validity of the information being\ntransmitted.\n\n    Session IDs are tokens generated by DBMSs to uniquely identify a user's (or\nprocess's) session. DBMSs will make access decisions and execute logic based on\nthe session ID.\n\n    Unique session IDs help to reduce predictability of said identifiers.\nUnique session IDs address man-in-the-middle attacks, including session\nhijacking or insertion of false information into a session. If the attacker is\nunable to identify or guess the session information related to pending\napplication traffic, they will have more difficulty in hijacking the session or\notherwise manipulating valid sessions.\n\n    When a user logs out, or when any other session termination event occurs,\nthe DBMS must terminate the user session(s) to minimize the potential for\nsessions to be hijacked.\n  \"\n  desc  \"check\", \"\n    Review DBMS settings and vendor documentation to verify user sessions are\nterminated, and session identifiers invalidated, upon user logout. If they are\nnot, this is a finding.\n\n    Review system documentation and organization policy to identify other\nevents that should result in session terminations.\n    # find . -name \\\"local.ini\\\"\n    #grep \\x93chttpd\\x94 section\n    #grep \\x93couch_httpd_auth\\x94\n    Verify the timeout variable has a set time\n    Ex:  timeout = 600\n    #grep \\\"couchdb\\\" section\n    #Verify \\\"os_process_timeout\\\" has a set time\n\n    If other session termination events are defined, review DBMS settings to\nverify occurrences of these events would cause session termination,\ninvalidating the session identifiers.\n\n    If occurrences of defined session terminating events do not cause session\nterminations, invalidating the session identifiers, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure DBMS settings to terminate sessions, invalidating their session\nidentifiers, upon user logout.\n\n    Configure DBMS settings to terminate sessions, invalidating their session\nidentifiers, upon the occurrence of any organization- or policy-defined session\ntermination event.\n    # Set timeout variable to be 600\n    # Set os_process_timeout to be 5000\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000220-DB-000149\"\n  tag \"gid\": \"V-32523\"\n  tag \"rid\": \"SV-42860r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000220-DB-000149\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001185\"]\n  tag \"nist\": [\"SC-23 (1)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32523.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Control Source Code Error C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32523.rb:3 ","run_time":6.16e-05,"start_time":"2020-07-17T16:26:10-04:00","message":"invalid byte sequence in UTF-8","exception":"RuntimeError","backtrace":["C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/rule.rb:61:in `block (2 levels) in initialize'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `instance_exec'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `block in with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `block in with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:619:in `run_around_example_hooks_for'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:254:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:644:in `block in run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:606:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (3 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (2 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/configuration.rb:2058:in `with_suite_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:116:in `block in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/reporter.rb:74:in `report'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:115:in `run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner_rspec.rb:82:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:159:in `run_tests'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:130:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/kitchen-inspec-2.0.0/lib/kitchen/verifier/inspec.rb:105:in `call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:459:in `block in verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:552:in `synchronize_or_call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:514:in `block in action'","C:/opscode/chef-workstation/embedded/lib/ruby/2.7.0/benchmark.rb:293:in `measure'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:513:in `action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:451:in `verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:382:in `block (2 levels) in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/lifecycle_hooks.rb:45:in `run_with_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:381:in `block in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `each'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:162:in `verify'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `public_send'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `run_action_in_thread'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:169:in `block (2 levels) in run_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/logging-2.2.2/lib/logging/diagnostic_context.rb:474:in `block in create_with_logging_context'"]}]},{"id":"V-32526","title":"The DBMS must recognize only system-generated session identifiers.","desc":"DBMSs utilize sessions and session identifiers to control application\nbehavior and user access. If an attacker can guess the session identifier or\ncan inject or manually insert session information, the session may be\ncompromised.\n\n    This requirement focuses on communications protection for the DBMS session\nrather than for the network packet. The intent of this control is to establish\ngrounds for confidence at each end of a communications session in the ongoing\nidentity of the other party and in the validity of the information being\ntransmitted.\n\n    The DBMS must recognize only system-generated session identifiers. If an\nattacker were able to generate a session with a non-system-generated session\nidentifier and have it recognized by the system, the attacker could gain access\nto the system without passing through access controls designed to limit\ndatabase sessions to authorized users.","descriptions":[{"label":"default","data":"DBMSs utilize sessions and session identifiers to control application\nbehavior and user access. If an attacker can guess the session identifier or\ncan inject or manually insert session information, the session may be\ncompromised.\n\n    This requirement focuses on communications protection for the DBMS session\nrather than for the network packet. The intent of this control is to establish\ngrounds for confidence at each end of a communications session in the ongoing\nidentity of the other party and in the validity of the information being\ntransmitted.\n\n    The DBMS must recognize only system-generated session identifiers. If an\nattacker were able to generate a session with a non-system-generated session\nidentifier and have it recognized by the system, the attacker could gain access\nto the system without passing through access controls designed to limit\ndatabase sessions to authorized users."},{"label":"check","data":"Review the CouchDB settings and vendor documentation to determine whether\nCouchDB recognizes session identifiers that are not system-generated.\n\n    If CouchDB recognizes session identifiers that are not system generated,\nthis is a finding."},{"label":"fix","data":"Utilize a CouchDB product that only recognizes session\nidentifiers that are system-generated."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000223-DB-000168","gid":"V-32526","rid":"SV-42863r2_rule","stig_id":"SRG-APP-000223-DB-000168","fix_id":null,"cci":["CCI-001664"],"nist":["SC-23 (3)","Rev_4"]},"code":"control \"V-32526\" do\n  title 'The DBMS must recognize only system-generated session identifiers.'\n  desc  \"DBMSs utilize sessions and session identifiers to control application\nbehavior and user access. If an attacker can guess the session identifier or\ncan inject or manually insert session information, the session may be\ncompromised.\n\n    This requirement focuses on communications protection for the DBMS session\nrather than for the network packet. The intent of this control is to establish\ngrounds for confidence at each end of a communications session in the ongoing\nidentity of the other party and in the validity of the information being\ntransmitted.\n\n    The DBMS must recognize only system-generated session identifiers. If an\nattacker were able to generate a session with a non-system-generated session\nidentifier and have it recognized by the system, the attacker could gain access\nto the system without passing through access controls designed to limit\ndatabase sessions to authorized users.\n  \"\n  desc  \"check\", \"\n     Review the CouchDB settings and vendor documentation to determine whether\nCouchDB recognizes session identifiers that are not system-generated.\n\n    If CouchDB recognizes session identifiers that are not system generated,\nthis is a finding.\n  \"\n  desc  \"fix\", \"Utilize a CouchDB product that only recognizes session\nidentifiers that are system-generated.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000223-DB-000168\"\n  tag \"gid\": \"V-32526\"\n  tag \"rid\": \"SV-42863r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000223-DB-000168\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001664\"]\n  tag \"nist\": [\"SC-23 (3)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32526.rb"},"waiver_data":{},"results":[]},{"id":"V-32528","title":"The DBMS must fail to a secure state if system initialization fails,\nshutdown fails, or aborts fail.","desc":"Failure to a known state can address safety or security in accordance\nwith the mission/business needs of the organization.\n\n    Failure to a known secure state helps prevent a loss of confidentiality,\nintegrity, or availability in the event of a failure of the information system\nor a component of the system.\n\n    Failure to a known safe state helps prevent systems from failing to a state\nthat may cause loss of data or unauthorized access to system resources. Systems\nthat fail suddenly and with no incorporated failure state planning may leave\nthe hosting system available but with a reduced security protection capability.\nPreserving information system state data also facilitates system restart and\nreturn to the operational mode of the organization with less disruption of\nmission/business processes.\n\n    Databases must fail to a known consistent state. Transactions must be\nsuccessfully completed or rolled back.\n\n    In general, security mechanisms should be designed so that a failure will\nfollow the same execution path as disallowing the operation. For example,\napplication security methods, such as isAuthorized(), isAuthenticated(), and\nvalidate(), should all return false if there is an exception during processing.\nIf security controls can throw exceptions, they must be very clear about\nexactly what that condition means.\n\n    Abort refers to stopping a program or function before it has finished\nnaturally. The term abort refers to both requested and unexpected terminations.","descriptions":[{"label":"default","data":"Failure to a known state can address safety or security in accordance\nwith the mission/business needs of the organization.\n\n    Failure to a known secure state helps prevent a loss of confidentiality,\nintegrity, or availability in the event of a failure of the information system\nor a component of the system.\n\n    Failure to a known safe state helps prevent systems from failing to a state\nthat may cause loss of data or unauthorized access to system resources. Systems\nthat fail suddenly and with no incorporated failure state planning may leave\nthe hosting system available but with a reduced security protection capability.\nPreserving information system state data also facilitates system restart and\nreturn to the operational mode of the organization with less disruption of\nmission/business processes.\n\n    Databases must fail to a known consistent state. Transactions must be\nsuccessfully completed or rolled back.\n\n    In general, security mechanisms should be designed so that a failure will\nfollow the same execution path as disallowing the operation. For example,\napplication security methods, such as isAuthorized(), isAuthenticated(), and\nvalidate(), should all return false if there is an exception during processing.\nIf security controls can throw exceptions, they must be very clear about\nexactly what that condition means.\n\n    Abort refers to stopping a program or function before it has finished\nnaturally. The term abort refers to both requested and unexpected terminations."},{"label":"check","data":"Check CouchDB settings and vendor documentation to verify that CouchDB\nproperly handles transactions in the event of a system failure.\n\n    CouchDB supports replication, which copies the last revision of a database\ndocument\n\n    When changes are made to the configuration at runtime, the very last file\nin the configuration chain will be updated with the changes in .ini files\n\n    If open transactions are not rolled back to a consistent state during\nsystem failure, this is a finding.\n\n    The consistent state must include a security configuration that is at least\nas restrictive as before the system failure. If this is not guaranteed, this is\na finding"},{"label":"fix","data":"Configure DBMS settings so that, in the event of a system\nfailure, CouchDB will roll back open transactions to a consistent state, to\ninclude a security configuration that is at least as restrictive as before the\nsystem failure."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000225-DB-000153","gid":"V-32528","rid":"SV-42865r3_rule","stig_id":"SRG-APP-000225-DB-000153","fix_id":null,"cci":["CCI-001190"],"nist":["SC-24","Rev_4"]},"code":"control \"V-32528\" do\n  title \"The DBMS must fail to a secure state if system initialization fails,\nshutdown fails, or aborts fail.\"\n  desc  \"Failure to a known state can address safety or security in accordance\nwith the mission/business needs of the organization.\n\n    Failure to a known secure state helps prevent a loss of confidentiality,\nintegrity, or availability in the event of a failure of the information system\nor a component of the system.\n\n    Failure to a known safe state helps prevent systems from failing to a state\nthat may cause loss of data or unauthorized access to system resources. Systems\nthat fail suddenly and with no incorporated failure state planning may leave\nthe hosting system available but with a reduced security protection capability.\nPreserving information system state data also facilitates system restart and\nreturn to the operational mode of the organization with less disruption of\nmission/business processes.\n\n    Databases must fail to a known consistent state. Transactions must be\nsuccessfully completed or rolled back.\n\n    In general, security mechanisms should be designed so that a failure will\nfollow the same execution path as disallowing the operation. For example,\napplication security methods, such as isAuthorized(), isAuthenticated(), and\nvalidate(), should all return false if there is an exception during processing.\nIf security controls can throw exceptions, they must be very clear about\nexactly what that condition means.\n\n    Abort refers to stopping a program or function before it has finished\nnaturally. The term abort refers to both requested and unexpected terminations.\n  \"\n  desc  \"check\", \"\n     Check CouchDB settings and vendor documentation to verify that CouchDB\nproperly handles transactions in the event of a system failure.\n\n    CouchDB supports replication, which copies the last revision of a database\ndocument\n\n    When changes are made to the configuration at runtime, the very last file\nin the configuration chain will be updated with the changes in .ini files\n\n    If open transactions are not rolled back to a consistent state during\nsystem failure, this is a finding.\n\n    The consistent state must include a security configuration that is at least\nas restrictive as before the system failure. If this is not guaranteed, this is\na finding\n  \"\n  desc  \"fix\", \"Configure DBMS settings so that, in the event of a system\nfailure, CouchDB will roll back open transactions to a consistent state, to\ninclude a security configuration that is at least as restrictive as before the\nsystem failure.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000225-DB-000153\"\n  tag \"gid\": \"V-32528\"\n  tag \"rid\": \"SV-42865r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000225-DB-000153\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001190\"]\n  tag \"nist\": [\"SC-24\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32528.rb"},"waiver_data":{},"results":[]},{"id":"V-32529","title":"In the event of a system failure, the DBMS must preserve any\ninformation necessary to determine cause of failure and any information\nnecessary to return to operations with least disruption to mission processes.","desc":"Failure to a known state can address safety or security in accordance\nwith the mission/business needs of the organization.\n\n    Failure to a known secure state helps prevent a loss of confidentiality,\nintegrity, or availability in the event of a failure of the information system\nor a component of the system.\n\n    Preserving information system state information helps to facilitate system\nrestart and return to the operational mode of the organization with less\ndisruption of mission/business processes.\n\n    Since it is usually not possible to test this capability in a production\nenvironment, systems should either be validated in a testing environment or\nprior to installation. This requirement is usually a function of the design of\nthe IDPS component. Compliance can be verified by acceptance/validation\nprocesses or vendor attestation.","descriptions":[{"label":"default","data":"Failure to a known state can address safety or security in accordance\nwith the mission/business needs of the organization.\n\n    Failure to a known secure state helps prevent a loss of confidentiality,\nintegrity, or availability in the event of a failure of the information system\nor a component of the system.\n\n    Preserving information system state information helps to facilitate system\nrestart and return to the operational mode of the organization with less\ndisruption of mission/business processes.\n\n    Since it is usually not possible to test this capability in a production\nenvironment, systems should either be validated in a testing environment or\nprior to installation. This requirement is usually a function of the design of\nthe IDPS component. Compliance can be verified by acceptance/validation\nprocesses or vendor attestation."},{"label":"check","data":"Check DBMS settings to determine whether organization-defined system state\ninformation is being preserved in the event of a system failure.\n\n    If organization-defined system state information is not being preserved,\nthis is a finding."},{"label":"fix","data":"Configure DBMS settings to preserve any organization-defined\nsystem state information in the event of a system failure."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000226-DB-000147","gid":"V-32529","rid":"SV-42866r3_rule","stig_id":"SRG-APP-000226-DB-000147","fix_id":null,"cci":["CCI-001665"],"nist":["SC-24","Rev_4"]},"code":"control \"V-32529\" do\n  title \"In the event of a system failure, the DBMS must preserve any\ninformation necessary to determine cause of failure and any information\nnecessary to return to operations with least disruption to mission processes.\"\n  desc  \"Failure to a known state can address safety or security in accordance\nwith the mission/business needs of the organization.\n\n    Failure to a known secure state helps prevent a loss of confidentiality,\nintegrity, or availability in the event of a failure of the information system\nor a component of the system.\n\n    Preserving information system state information helps to facilitate system\nrestart and return to the operational mode of the organization with less\ndisruption of mission/business processes.\n\n    Since it is usually not possible to test this capability in a production\nenvironment, systems should either be validated in a testing environment or\nprior to installation. This requirement is usually a function of the design of\nthe IDPS component. Compliance can be verified by acceptance/validation\nprocesses or vendor attestation.\n  \"\n  desc  \"check\", \"\n    Check DBMS settings to determine whether organization-defined system state\ninformation is being preserved in the event of a system failure.\n\n    If organization-defined system state information is not being preserved,\nthis is a finding.\n  \"\n  desc  \"fix\", \"Configure DBMS settings to preserve any organization-defined\nsystem state information in the event of a system failure.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000226-DB-000147\"\n  tag \"gid\": \"V-32529\"\n  tag \"rid\": \"SV-42866r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000226-DB-000147\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001665\"]\n  tag \"nist\": [\"SC-24\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32529.rb"},"waiver_data":{},"results":[]},{"id":"V-32534","title":"The DBMS must protect the confidentiality and integrity of all\ninformation at rest.","desc":"This control is intended to address the confidentiality and integrity\nof information at rest in non-mobile devices and covers user information and\nsystem information. Information at rest refers to the state of information when\nit is located on a secondary storage device (e.g., disk drive, tape drive)\nwithin an organizational information system. Applications and application users\ngenerate information throughout the course of their application use.\n\n    User data generated, as well as application-specific configuration data,\nneeds to be protected. Organizations may choose to employ different mechanisms\nto achieve confidentiality and integrity protections, as appropriate.\n\n    If the confidentiality and integrity of application data is not protected,\nthe data will be open to compromise and unauthorized modification.","descriptions":[{"label":"default","data":"This control is intended to address the confidentiality and integrity\nof information at rest in non-mobile devices and covers user information and\nsystem information. Information at rest refers to the state of information when\nit is located on a secondary storage device (e.g., disk drive, tape drive)\nwithin an organizational information system. Applications and application users\ngenerate information throughout the course of their application use.\n\n    User data generated, as well as application-specific configuration data,\nneeds to be protected. Organizations may choose to employ different mechanisms\nto achieve confidentiality and integrity protections, as appropriate.\n\n    If the confidentiality and integrity of application data is not protected,\nthe data will be open to compromise and unauthorized modification."},{"label":"check","data":"Review DBMS settings to determine whether controls exist to protect the\nconfidentiality and integrity of data at rest in the database.\n\n    CouchDB does not encrypt data at rest other than passwords.\n\n    If the application owner and Authorizing Official have determined that\nencryption of data at rest is NOT required, this is not a finding.\n\n    If disk or filesystem requires encryption, ask the system owner, DBA, and\nSA to demonstrate the use of disk-level encryption. If this is required and is\nnot found, this is a finding.\n\n    If controls do not exist or are not enabled, this is a finding."},{"label":"fix","data":"Either handled by device/ filesystem level encryption (OS) or\nusing a 3rd party encryption software"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000231-DB-000154","gid":"V-32534","rid":"SV-42871r4_rule","stig_id":"SRG-APP-000231-DB-000154","fix_id":null,"cci":["CCI-001199"],"nist":["SC-28","Rev_4"]},"code":"control \"V-32534\" do\n  title \"The DBMS must protect the confidentiality and integrity of all\ninformation at rest.\"\n  desc  \"This control is intended to address the confidentiality and integrity\nof information at rest in non-mobile devices and covers user information and\nsystem information. Information at rest refers to the state of information when\nit is located on a secondary storage device (e.g., disk drive, tape drive)\nwithin an organizational information system. Applications and application users\ngenerate information throughout the course of their application use.\n\n    User data generated, as well as application-specific configuration data,\nneeds to be protected. Organizations may choose to employ different mechanisms\nto achieve confidentiality and integrity protections, as appropriate.\n\n    If the confidentiality and integrity of application data is not protected,\nthe data will be open to compromise and unauthorized modification.\n  \"\n  desc  \"check\", \"\n    Review DBMS settings to determine whether controls exist to protect the\nconfidentiality and integrity of data at rest in the database.\n\n    CouchDB does not encrypt data at rest other than passwords.\n\n    If the application owner and Authorizing Official have determined that\nencryption of data at rest is NOT required, this is not a finding.\n\n    If disk or filesystem requires encryption, ask the system owner, DBA, and\nSA to demonstrate the use of disk-level encryption. If this is required and is\nnot found, this is a finding.\n\n    If controls do not exist or are not enabled, this is a finding.\n  \"\n  desc  \"fix\", \"Either handled by device/ filesystem level encryption (OS) or\nusing a 3rd party encryption software\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000231-DB-000154\"\n  tag \"gid\": \"V-32534\"\n  tag \"rid\": \"SV-42871r4_rule\"\n  tag \"stig_id\": \"SRG-APP-000231-DB-000154\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001199\"]\n  tag \"nist\": [\"SC-28\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32534.rb"},"waiver_data":{},"results":[]},{"id":"V-32536","title":"The DBMS must isolate security functions from non-security functions.","desc":"An isolation boundary provides access control and protects the\nintegrity of the hardware, software, and firmware that perform security\nfunctions.\n\n    Security functions are the hardware, software, and/or firmware of the\ninformation system responsible for enforcing the system security policy and\nsupporting the isolation of code and data on which the protection is based.\n\n    Developers and implementers can increase the assurance in security\nfunctions by employing well-defined security policy models; structured,\ndisciplined, and rigorous hardware and software development techniques; and\nsound system/security engineering principles.\n\n    Database Management Systems typically separate security functionality from\nnon-security functionality via separate databases or schemas. Database objects\nor code implementing security functionality should not be commingled with\nobjects or code implementing application logic. When security and non-security\nfunctionality are commingled, users who have access to non-security\nfunctionality may be able to access security functionality.","descriptions":[{"label":"default","data":"An isolation boundary provides access control and protects the\nintegrity of the hardware, software, and firmware that perform security\nfunctions.\n\n    Security functions are the hardware, software, and/or firmware of the\ninformation system responsible for enforcing the system security policy and\nsupporting the isolation of code and data on which the protection is based.\n\n    Developers and implementers can increase the assurance in security\nfunctions by employing well-defined security policy models; structured,\ndisciplined, and rigorous hardware and software development techniques; and\nsound system/security engineering principles.\n\n    Database Management Systems typically separate security functionality from\nnon-security functionality via separate databases or schemas. Database objects\nor code implementing security functionality should not be commingled with\nobjects or code implementing application logic. When security and non-security\nfunctionality are commingled, users who have access to non-security\nfunctionality may be able to access security functionality."},{"label":"check","data":"Check DBMS settings to determine whether objects or code implementing\nsecurity functionality are located in a separate security domain, such as a\nseparate database or schema created specifically for security functionality.\n\n\n    Execute the command\n     #GET /db/_security\n    #grep names and verify that all users that are listed in access privileges\nand are documented.\n    If any user besides the database administrator(s) is listed in access\nprivileges and not documented, this is a finding.\n\n    If security-related database objects or code are not kept separate, this is\na finding."},{"label":"fix","data":"Locate security-related database objects and code in a\nseparate database, schema, or other separate security domain from database\nobjects and code implementing application logic."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000233-DB-000124","gid":"V-32536","rid":"SV-42873r3_rule","stig_id":"SRG-APP-000233-DB-000124","fix_id":null,"cci":["CCI-001084"],"nist":["SC-3","Rev_4"]},"code":"control \"V-32536\" do\n  title 'The DBMS must isolate security functions from non-security functions.'\n  desc  \"An isolation boundary provides access control and protects the\nintegrity of the hardware, software, and firmware that perform security\nfunctions.\n\n    Security functions are the hardware, software, and/or firmware of the\ninformation system responsible for enforcing the system security policy and\nsupporting the isolation of code and data on which the protection is based.\n\n    Developers and implementers can increase the assurance in security\nfunctions by employing well-defined security policy models; structured,\ndisciplined, and rigorous hardware and software development techniques; and\nsound system/security engineering principles.\n\n    Database Management Systems typically separate security functionality from\nnon-security functionality via separate databases or schemas. Database objects\nor code implementing security functionality should not be commingled with\nobjects or code implementing application logic. When security and non-security\nfunctionality are commingled, users who have access to non-security\nfunctionality may be able to access security functionality.\n  \"\n  desc  \"check\", \"\n    Check DBMS settings to determine whether objects or code implementing\nsecurity functionality are located in a separate security domain, such as a\nseparate database or schema created specifically for security functionality.\n\n\n    Execute the command\n     #GET /db/_security\n    #grep names and verify that all users that are listed in access privileges\nand are documented.\n    If any user besides the database administrator(s) is listed in access\nprivileges and not documented, this is a finding.\n\n    If security-related database objects or code are not kept separate, this is\na finding.\n  \"\n  desc  \"fix\", \" Locate security-related database objects and code in a\nseparate database, schema, or other separate security domain from database\nobjects and code implementing application logic.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000233-DB-000124\"\n  tag \"gid\": \"V-32536\"\n  tag \"rid\": \"SV-42873r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000233-DB-000124\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001084\"]\n  tag \"nist\": [\"SC-3\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32536.rb"},"waiver_data":{},"results":[]},{"id":"V-32547","title":"Database contents must be protected from unauthorized and unintended\ninformation transfer by enforcement of a data-transfer policy.","desc":"Applications, including DBMSs, must prevent unauthorized and\nunintended information transfer via shared system resources.\n\n    Data used for the development and testing of applications often involves\ncopying data from production. It is important that specific procedures exist\nfor this process, to include the conditions under which such transfer may take\nplace, where the copies may reside, and the rules for ensuring sensitive data\nare not exposed.\n\n    Copies of sensitive data must not be misplaced or left in a temporary\nlocation without the proper controls.","descriptions":[{"label":"default","data":"Applications, including DBMSs, must prevent unauthorized and\nunintended information transfer via shared system resources.\n\n    Data used for the development and testing of applications often involves\ncopying data from production. It is important that specific procedures exist\nfor this process, to include the conditions under which such transfer may take\nplace, where the copies may reside, and the rules for ensuring sensitive data\nare not exposed.\n\n    Copies of sensitive data must not be misplaced or left in a temporary\nlocation without the proper controls."},{"label":"check","data":"Review the procedures for the refreshing of development/test data from\nproduction.\n\n    Review any scripts or code that exists for the movement of production data\nto development/test systems, or to any other location or for any other purpose.\n\n    Verify that copies of production data are not left in unprotected\nlocations.\n\n    If the code that exists for data movement does not comply with the\norganization-defined data transfer policy and/or fails to remove any copies of\nproduction data from unprotected locations, this is a finding."},{"label":"fix","data":"Modify any code used for moving data from production to\ndevelopment/test systems to comply with the organization-defined data transfer\npolicy, and to ensure copies of production data are not left in unsecured\nlocations."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000243-DB-000128","gid":"V-32547","rid":"SV-42884r3_rule","stig_id":"SRG-APP-000243-DB-000128","fix_id":null,"cci":["CCI-001090"],"nist":["SC-4","Rev_4"]},"code":"control \"V-32547\" do\n  title \"Database contents must be protected from unauthorized and unintended\ninformation transfer by enforcement of a data-transfer policy.\"\n  desc  \"Applications, including DBMSs, must prevent unauthorized and\nunintended information transfer via shared system resources.\n\n    Data used for the development and testing of applications often involves\ncopying data from production. It is important that specific procedures exist\nfor this process, to include the conditions under which such transfer may take\nplace, where the copies may reside, and the rules for ensuring sensitive data\nare not exposed.\n\n    Copies of sensitive data must not be misplaced or left in a temporary\nlocation without the proper controls.\n  \"\n  desc  \"check\", \"\n    Review the procedures for the refreshing of development/test data from\nproduction.\n\n    Review any scripts or code that exists for the movement of production data\nto development/test systems, or to any other location or for any other purpose.\n\n    Verify that copies of production data are not left in unprotected\nlocations.\n\n    If the code that exists for data movement does not comply with the\norganization-defined data transfer policy and/or fails to remove any copies of\nproduction data from unprotected locations, this is a finding.\n  \"\n  desc  \"fix\", \"Modify any code used for moving data from production to\ndevelopment/test systems to comply with the organization-defined data transfer\npolicy, and to ensure copies of production data are not left in unsecured\nlocations.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000243-DB-000128\"\n  tag \"gid\": \"V-32547\"\n  tag \"rid\": \"SV-42884r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000243-DB-000128\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001090\"]\n  tag \"nist\": [\"SC-4\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32547.rb"},"waiver_data":{},"results":[]},{"id":"V-32555","title":"The DBMS must check the validity of all data inputs except those\nspecifically identified by the organization.","desc":"Invalid user input occurs when a user inserts data or characters into\nan application's data entry fields and the application is unprepared to process\nthat data. This results in unanticipated application behavior, potentially\nleading to an application or information system compromise. Invalid user input\nis one of the primary methods employed when attempting to compromise an\napplication.\n\n    With respect to database management systems, one class of threat is known\nas SQL Injection, or more generally, code injection. It takes advantage of the\ndynamic execution capabilities of various programming languages, including\ndialects of SQL. Potentially, the attacker can gain unauthorized access to\ndata, including security settings, and severely corrupt or destroy the database.\n\n    Even when no such hijacking takes place, invalid input that gets recorded\nin the database, whether accidental or malicious, reduces the reliability and\nusability of the system. Available protections include data types, referential\nconstraints, uniqueness constraints, range checking, and application-specific\nlogic. Application-specific logic can be implemented within the database in\nstored procedures and triggers, where appropriate.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered.","descriptions":[{"label":"default","data":"Invalid user input occurs when a user inserts data or characters into\nan application's data entry fields and the application is unprepared to process\nthat data. This results in unanticipated application behavior, potentially\nleading to an application or information system compromise. Invalid user input\nis one of the primary methods employed when attempting to compromise an\napplication.\n\n    With respect to database management systems, one class of threat is known\nas SQL Injection, or more generally, code injection. It takes advantage of the\ndynamic execution capabilities of various programming languages, including\ndialects of SQL. Potentially, the attacker can gain unauthorized access to\ndata, including security settings, and severely corrupt or destroy the database.\n\n    Even when no such hijacking takes place, invalid input that gets recorded\nin the database, whether accidental or malicious, reduces the reliability and\nusability of the system. Available protections include data types, referential\nconstraints, uniqueness constraints, range checking, and application-specific\nlogic. Application-specific logic can be implemented within the database in\nstored procedures and triggers, where appropriate.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered."},{"label":"check","data":"Review DBMS code (stored procedures, functions, and triggers), application\ncode, settings, column and field definitions, and constraints to determine\nwhether the database is protected against invalid input.\n\n    If code exists that allows invalid data to be acted upon or input into the\ndatabase, this is a finding.\n\n    If column/field definitions do not exist in the database, this is a finding.\n\n    If columns/fields do not contain constraints and validity checking where\nrequired, this is a finding.\n\n    Where a column/field is noted in the system documentation as necessarily\nfree-form, even though its name and context suggest that it should be strongly\ntyped and constrained, the absence of these protections is not a finding.\n\n    Where a column/field is clearly identified by name, caption or context as\nNotes, Comments, Description, Text, etc., the absence of these protections is\nnot a finding.\n    Check application code that interacts with CouchDB for the use of prepared\nstatements. If prepared statements are not used, this is a finding."},{"label":"fix","data":"Modify database code to properly validate data before it is put into the\ndatabase or acted upon by the database.\n\n    Modify the database to contain constraints and validity checking on\ndatabase columns and tables that require them for data integrity.\n\n    Use prepared statements when taking user input.\n\n    Do not allow general users direct console access to CouchDB."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000251-DB-000160","gid":"V-32555","rid":"SV-42892r4_rule","stig_id":"SRG-APP-000251-DB-000160","fix_id":null,"cci":["CCI-001310"],"nist":["SI-10","Rev_4"]},"code":"control \"V-32555\" do\n  title \"The DBMS must check the validity of all data inputs except those\nspecifically identified by the organization.\"\n  desc  \"Invalid user input occurs when a user inserts data or characters into\nan application's data entry fields and the application is unprepared to process\nthat data. This results in unanticipated application behavior, potentially\nleading to an application or information system compromise. Invalid user input\nis one of the primary methods employed when attempting to compromise an\napplication.\n\n    With respect to database management systems, one class of threat is known\nas SQL Injection, or more generally, code injection. It takes advantage of the\ndynamic execution capabilities of various programming languages, including\ndialects of SQL. Potentially, the attacker can gain unauthorized access to\ndata, including security settings, and severely corrupt or destroy the database.\n\n    Even when no such hijacking takes place, invalid input that gets recorded\nin the database, whether accidental or malicious, reduces the reliability and\nusability of the system. Available protections include data types, referential\nconstraints, uniqueness constraints, range checking, and application-specific\nlogic. Application-specific logic can be implemented within the database in\nstored procedures and triggers, where appropriate.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered.\n  \"\n  desc  \"check\", \"\n     Review DBMS code (stored procedures, functions, and triggers), application\ncode, settings, column and field definitions, and constraints to determine\nwhether the database is protected against invalid input.\n\n    If code exists that allows invalid data to be acted upon or input into the\ndatabase, this is a finding.\n\n    If column/field definitions do not exist in the database, this is a finding.\n\n    If columns/fields do not contain constraints and validity checking where\nrequired, this is a finding.\n\n    Where a column/field is noted in the system documentation as necessarily\nfree-form, even though its name and context suggest that it should be strongly\ntyped and constrained, the absence of these protections is not a finding.\n\n    Where a column/field is clearly identified by name, caption or context as\nNotes, Comments, Description, Text, etc., the absence of these protections is\nnot a finding.\n    Check application code that interacts with CouchDB for the use of prepared\nstatements. If prepared statements are not used, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Modify database code to properly validate data before it is put into the\ndatabase or acted upon by the database.\n\n    Modify the database to contain constraints and validity checking on\ndatabase columns and tables that require them for data integrity.\n\n    Use prepared statements when taking user input.\n\n    Do not allow general users direct console access to CouchDB.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000251-DB-000160\"\n  tag \"gid\": \"V-32555\"\n  tag \"rid\": \"SV-42892r4_rule\"\n  tag \"stig_id\": \"SRG-APP-000251-DB-000160\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001310\"]\n  tag \"nist\": [\"SI-10\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32555.rb"},"waiver_data":{},"results":[]},{"id":"V-32570","title":"The DBMS must provide non-privileged users with error messages that\nprovide information necessary for corrective actions without revealing\ninformation that could be exploited by adversaries.","desc":"Any DBMS or associated application providing too much information in\nerror messages on the screen or printout risks compromising the data and\nsecurity of the system. The structure and content of error messages need to be\ncarefully considered by the organization and development team.\n\n    Databases can inadvertently provide a wealth of information to an attacker\nthrough improperly handled error messages. In addition to sensitive business or\npersonal information, database errors can provide host names, IP addresses,\nuser names, and other system information not required for troubleshooting but\nvery useful to someone targeting the system.\n\n    Carefully consider the structure/content of error messages. The extent to\nwhich information systems are able to identify and handle error conditions is\nguided by organizational policy and operational requirements. Information that\ncould be exploited by adversaries includes, for example, logon attempts with\npasswords entered by mistake as the username, mission/business information that\ncan be derived from (if not stated explicitly by) information recorded, and\npersonal information, such as account numbers, social security numbers, and\ncredit card numbers.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered.","descriptions":[{"label":"default","data":"Any DBMS or associated application providing too much information in\nerror messages on the screen or printout risks compromising the data and\nsecurity of the system. The structure and content of error messages need to be\ncarefully considered by the organization and development team.\n\n    Databases can inadvertently provide a wealth of information to an attacker\nthrough improperly handled error messages. In addition to sensitive business or\npersonal information, database errors can provide host names, IP addresses,\nuser names, and other system information not required for troubleshooting but\nvery useful to someone targeting the system.\n\n    Carefully consider the structure/content of error messages. The extent to\nwhich information systems are able to identify and handle error conditions is\nguided by organizational policy and operational requirements. Information that\ncould be exploited by adversaries includes, for example, logon attempts with\npasswords entered by mistake as the username, mission/business information that\ncan be derived from (if not stated explicitly by) information recorded, and\npersonal information, such as account numbers, social security numbers, and\ncredit card numbers.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered."},{"label":"check","data":"Check DBMS settings and custom database code to verify that error messages\ndo not contain information beyond what is needed for troubleshooting the issue.\n\n    If database errors contain PII data, sensitive business data, or\ninformation useful for identifying the host system or database structure, this\nis a finding."},{"label":"fix","data":"Configure DBMS settings, custom database code, and associated\napplication code not to divulge sensitive information or information useful for\nsystem identification in error messages."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000266-DB-000162","gid":"V-32570","rid":"SV-42907r4_rule","stig_id":"SRG-APP-000266-DB-000162","fix_id":null,"cci":["CCI-001312"],"nist":["SI-11 a","Rev_4"]},"code":"control \"V-32570\" do\n  title \"The DBMS must provide non-privileged users with error messages that\nprovide information necessary for corrective actions without revealing\ninformation that could be exploited by adversaries.\"\n  desc  \"Any DBMS or associated application providing too much information in\nerror messages on the screen or printout risks compromising the data and\nsecurity of the system. The structure and content of error messages need to be\ncarefully considered by the organization and development team.\n\n    Databases can inadvertently provide a wealth of information to an attacker\nthrough improperly handled error messages. In addition to sensitive business or\npersonal information, database errors can provide host names, IP addresses,\nuser names, and other system information not required for troubleshooting but\nvery useful to someone targeting the system.\n\n    Carefully consider the structure/content of error messages. The extent to\nwhich information systems are able to identify and handle error conditions is\nguided by organizational policy and operational requirements. Information that\ncould be exploited by adversaries includes, for example, logon attempts with\npasswords entered by mistake as the username, mission/business information that\ncan be derived from (if not stated explicitly by) information recorded, and\npersonal information, such as account numbers, social security numbers, and\ncredit card numbers.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered.\n  \"\n  desc  \"check\", \"\n    Check DBMS settings and custom database code to verify that error messages\ndo not contain information beyond what is needed for troubleshooting the issue.\n\n    If database errors contain PII data, sensitive business data, or\ninformation useful for identifying the host system or database structure, this\nis a finding.\n  \"\n  desc  \"fix\", \"Configure DBMS settings, custom database code, and associated\napplication code not to divulge sensitive information or information useful for\nsystem identification in error messages.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000266-DB-000162\"\n  tag \"gid\": \"V-32570\"\n  tag \"rid\": \"SV-42907r4_rule\"\n  tag \"stig_id\": \"SRG-APP-000266-DB-000162\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001312\"]\n  tag \"nist\": [\"SI-11 a\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32570.rb"},"waiver_data":{},"results":[]},{"id":"V-32571","title":"The DBMS must reveal detailed error messages only to the ISSO, ISSM,\nSA and DBA.","desc":"If the DBMS provides too much information in error logs and\nadministrative messages to the screen, this could lead to compromise. The\nstructure and content of error messages need to be carefully considered by the\norganization and development team. The extent to which the information system\nis able to identify and handle error conditions is guided by organizational\npolicy and operational requirements.\n\n    Some default DBMS error messages can contain information that could aid an\nattacker in, among others things, identifying the database type, host address,\nor state of the database. Custom errors may contain sensitive customer\ninformation.\n\n    It is important that detailed error messages be visible only to those who\nare authorized to view them; that general users receive only generalized\nacknowledgment that errors have occurred; and that these generalized messages\nappear only when relevant to the user's task. For example, a message along the\nlines of, \"An error has occurred. Unable to save your changes. If this problem\npersists, please contact your help desk\" would be relevant. A message such as\n\"Warning: your transaction generated a large number of page splits\" would\nlikely not be relevant.\n\n    Administrative users authorized to review detailed error messages typically\nare the ISSO, ISSM, SA, and DBA. Other individuals or roles may be specified\naccording to organization-specific needs, with appropriate approval.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered.","descriptions":[{"label":"default","data":"If the DBMS provides too much information in error logs and\nadministrative messages to the screen, this could lead to compromise. The\nstructure and content of error messages need to be carefully considered by the\norganization and development team. The extent to which the information system\nis able to identify and handle error conditions is guided by organizational\npolicy and operational requirements.\n\n    Some default DBMS error messages can contain information that could aid an\nattacker in, among others things, identifying the database type, host address,\nor state of the database. Custom errors may contain sensitive customer\ninformation.\n\n    It is important that detailed error messages be visible only to those who\nare authorized to view them; that general users receive only generalized\nacknowledgment that errors have occurred; and that these generalized messages\nappear only when relevant to the user's task. For example, a message along the\nlines of, \"An error has occurred. Unable to save your changes. If this problem\npersists, please contact your help desk\" would be relevant. A message such as\n\"Warning: your transaction generated a large number of page splits\" would\nlikely not be relevant.\n\n    Administrative users authorized to review detailed error messages typically\nare the ISSO, ISSM, SA, and DBA. Other individuals or roles may be specified\naccording to organization-specific needs, with appropriate approval.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered."},{"label":"check","data":"Check DBMS settings and custom database code to determine if detailed error\nmessages are ever displayed to unauthorized individuals.\n\n    If detailed error messages are displayed to individuals not authorized to\nview them, this is a finding."},{"label":"fix","data":"Configure DBMS settings, custom database code, and associated\napplication code not to display detailed error messages to those not authorized\nto view them."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000267-DB-000163","gid":"V-32571","rid":"SV-42908r5_rule","stig_id":"SRG-APP-000267-DB-000163","fix_id":null,"cci":["CCI-001314"],"nist":["SI-11 b","Rev_4"]},"code":"control \"V-32571\" do\n  title \"The DBMS must reveal detailed error messages only to the ISSO, ISSM,\nSA and DBA.\"\n  desc  \"If the DBMS provides too much information in error logs and\nadministrative messages to the screen, this could lead to compromise. The\nstructure and content of error messages need to be carefully considered by the\norganization and development team. The extent to which the information system\nis able to identify and handle error conditions is guided by organizational\npolicy and operational requirements.\n\n    Some default DBMS error messages can contain information that could aid an\nattacker in, among others things, identifying the database type, host address,\nor state of the database. Custom errors may contain sensitive customer\ninformation.\n\n    It is important that detailed error messages be visible only to those who\nare authorized to view them; that general users receive only generalized\nacknowledgment that errors have occurred; and that these generalized messages\nappear only when relevant to the user's task. For example, a message along the\nlines of, \\\"An error has occurred. Unable to save your changes. If this problem\npersists, please contact your help desk\\\" would be relevant. A message such as\n\\\"Warning: your transaction generated a large number of page splits\\\" would\nlikely not be relevant.\n\n    Administrative users authorized to review detailed error messages typically\nare the ISSO, ISSM, SA, and DBA. Other individuals or roles may be specified\naccording to organization-specific needs, with appropriate approval.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered.\n  \"\n  desc  \"check\", \"\n    Check DBMS settings and custom database code to determine if detailed error\nmessages are ever displayed to unauthorized individuals.\n\n    If detailed error messages are displayed to individuals not authorized to\nview them, this is a finding.\n  \"\n  desc  \"fix\", \"Configure DBMS settings, custom database code, and associated\napplication code not to display detailed error messages to those not authorized\nto view them.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000267-DB-000163\"\n  tag \"gid\": \"V-32571\"\n  tag \"rid\": \"SV-42908r5_rule\"\n  tag \"stig_id\": \"SRG-APP-000267-DB-000163\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001314\"]\n  tag \"nist\": [\"SI-11 b\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-32571.rb"},"waiver_data":{},"results":[]},{"id":"V-58019","title":"The DBMS must enforce discretionary access control policies, as\ndefined by the data owner, over defined subjects and objects.","desc":"Discretionary Access Control (DAC) is based on the notion that\nindividual users are \"owners\" of objects and therefore have discretion over\nwho should be authorized to access the object and in which mode (e.g., read or\nwrite). Ownership is usually acquired as a consequence of creating the object\nor via specified ownership assignment. DAC allows the owner to determine who\nwill have access to objects they control. An example of DAC includes\nuser-controlled table permissions.\n\n    When discretionary access control policies are implemented, subjects are\nnot constrained with regard to what actions they can take with information for\nwhich they have already been granted access. Thus, subjects that have been\ngranted access to information are not prevented from passing (i.e., the\nsubjects have the discretion to pass) the information to other subjects or\nobjects.\n\n    A subject that is constrained in its operation by Mandatory Access Control\npolicies is still able to operate under the less rigorous constraints of this\nrequirement. Thus, while Mandatory Access Control imposes constraints\npreventing a subject from passing information to another subject operating at a\ndifferent sensitivity level, this requirement permits the subject to pass the\ninformation to any subject at the same sensitivity level.\n\n    The policy is bounded by the information system boundary. Once the\ninformation is passed outside of the control of the information system,\nadditional means may be required to ensure the constraints remain in effect.\nWhile the older, more traditional definitions of discretionary access control\nrequire identity-based access control, that limitation is not required for this\nuse of discretionary access control.","descriptions":[{"label":"default","data":"Discretionary Access Control (DAC) is based on the notion that\nindividual users are \"owners\" of objects and therefore have discretion over\nwho should be authorized to access the object and in which mode (e.g., read or\nwrite). Ownership is usually acquired as a consequence of creating the object\nor via specified ownership assignment. DAC allows the owner to determine who\nwill have access to objects they control. An example of DAC includes\nuser-controlled table permissions.\n\n    When discretionary access control policies are implemented, subjects are\nnot constrained with regard to what actions they can take with information for\nwhich they have already been granted access. Thus, subjects that have been\ngranted access to information are not prevented from passing (i.e., the\nsubjects have the discretion to pass) the information to other subjects or\nobjects.\n\n    A subject that is constrained in its operation by Mandatory Access Control\npolicies is still able to operate under the less rigorous constraints of this\nrequirement. Thus, while Mandatory Access Control imposes constraints\npreventing a subject from passing information to another subject operating at a\ndifferent sensitivity level, this requirement permits the subject to pass the\ninformation to any subject at the same sensitivity level.\n\n    The policy is bounded by the information system boundary. Once the\ninformation is passed outside of the control of the information system,\nadditional means may be required to ensure the constraints remain in effect.\nWhile the older, more traditional definitions of discretionary access control\nrequire identity-based access control, that limitation is not required for this\nuse of discretionary access control."},{"label":"check","data":"Review system documentation to identify the required discretionary access\ncontrol (DAC).\n\n    Review the security configuration of CouchDB. If applicable, review the\nsecurity configuration of the application(s) using the database.\n\n\n    Check the permissions of all databases.\n    #GET /{db}/_security\n    If the discretionary access control defined in the documentation is not\nimplemented in the security configuration, this is a finding."},{"label":"fix","data":"Implement the organization's DAC policy in the security\nconfiguration of the database and DBMS, and, if applicable, the security\nconfiguration of the application(s) using the database."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000328-DB-000301","gid":"V-58019","rid":"SV-72449r1_rule","stig_id":"SRG-APP-000328-DB-000301","fix_id":null,"cci":["CCI-002165"],"nist":["AC-3 (4)","Rev_4"]},"code":"control \"V-58019\" do\n  title \"The DBMS must enforce discretionary access control policies, as\ndefined by the data owner, over defined subjects and objects.\"\n  desc  \"Discretionary Access Control (DAC) is based on the notion that\nindividual users are \\\"owners\\\" of objects and therefore have discretion over\nwho should be authorized to access the object and in which mode (e.g., read or\nwrite). Ownership is usually acquired as a consequence of creating the object\nor via specified ownership assignment. DAC allows the owner to determine who\nwill have access to objects they control. An example of DAC includes\nuser-controlled table permissions.\n\n    When discretionary access control policies are implemented, subjects are\nnot constrained with regard to what actions they can take with information for\nwhich they have already been granted access. Thus, subjects that have been\ngranted access to information are not prevented from passing (i.e., the\nsubjects have the discretion to pass) the information to other subjects or\nobjects.\n\n    A subject that is constrained in its operation by Mandatory Access Control\npolicies is still able to operate under the less rigorous constraints of this\nrequirement. Thus, while Mandatory Access Control imposes constraints\npreventing a subject from passing information to another subject operating at a\ndifferent sensitivity level, this requirement permits the subject to pass the\ninformation to any subject at the same sensitivity level.\n\n    The policy is bounded by the information system boundary. Once the\ninformation is passed outside of the control of the information system,\nadditional means may be required to ensure the constraints remain in effect.\nWhile the older, more traditional definitions of discretionary access control\nrequire identity-based access control, that limitation is not required for this\nuse of discretionary access control.\n  \"\n  desc  \"check\", \"\n     Review system documentation to identify the required discretionary access\ncontrol (DAC).\n\n    Review the security configuration of CouchDB. If applicable, review the\nsecurity configuration of the application(s) using the database.\n\n\n    Check the permissions of all databases.\n    #GET /{db}/_security\n    If the discretionary access control defined in the documentation is not\nimplemented in the security configuration, this is a finding.\n  \"\n  desc  \"fix\", \"Implement the organization's DAC policy in the security\nconfiguration of the database and DBMS, and, if applicable, the security\nconfiguration of the application(s) using the database.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000328-DB-000301\"\n  tag \"gid\": \"V-58019\"\n  tag \"rid\": \"SV-72449r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000328-DB-000301\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002165\"]\n  tag \"nist\": [\"AC-3 (4)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58019.rb"},"waiver_data":{},"results":[]},{"id":"V-58021","title":"Execution of software modules (to include stored procedures,\nfunctions, and triggers) with elevated privileges must be restricted to\nnecessary cases only.","desc":"In certain situations, to provide required functionality, a DBMS needs\nto execute internal logic (stored procedures, functions, triggers, etc.) and/or\nexternal code modules with elevated privileges. However, if the privileges\nrequired for execution are at a higher level than the privileges assigned to\norganizational users invoking the functionality applications/programs, those\nusers are indirectly provided with greater privileges than assigned by\norganizations.\n\n    Privilege elevation must be utilized only where necessary and protected\nfrom misuse.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered.","descriptions":[{"label":"default","data":"In certain situations, to provide required functionality, a DBMS needs\nto execute internal logic (stored procedures, functions, triggers, etc.) and/or\nexternal code modules with elevated privileges. However, if the privileges\nrequired for execution are at a higher level than the privileges assigned to\norganizational users invoking the functionality applications/programs, those\nusers are indirectly provided with greater privileges than assigned by\norganizations.\n\n    Privilege elevation must be utilized only where necessary and protected\nfrom misuse.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered."},{"label":"check","data":"Review the system documentation, database and CouchDB security\nconfiguration, source code for DBMS internal logic, source code of external\nmodules invoked by CouchDB, and source code of the application(s) using the\ndatabase.\n\n    #GET /{db}/_security\n    #grep 'roles'\n\n    If elevation of DBMS privileges is utilized but not documented, this is a\nfinding.\n\n    If elevation of DBMS privileges is documented, but not implemented as\ndescribed in the documentation, this is a finding.\n\n    If the privilege-elevation logic can be invoked in ways other than\nintended, or in contexts other than intended, or by subjects/principals other\nthan intended, this is a finding."},{"label":"fix","data":"Determine where, when, how, and by what principals/subjects elevated\nprivilege is needed.\n\n    Modify the database and DBMS security configuration, DBMS internal logic,\nexternal modules invoked by CouchDB, and the application(s) using the database,\nto ensure privilege elevation is used only as required."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000342-DB-000302","gid":"V-58021","rid":"SV-72451r2_rule","stig_id":"SRG-APP-000342-DB-000302","fix_id":null,"cci":["CCI-002233"],"nist":["AC-6 (8)","Rev_4"]},"code":"control \"V-58021\" do\n  title \"Execution of software modules (to include stored procedures,\nfunctions, and triggers) with elevated privileges must be restricted to\nnecessary cases only.\"\n  desc  \"In certain situations, to provide required functionality, a DBMS needs\nto execute internal logic (stored procedures, functions, triggers, etc.) and/or\nexternal code modules with elevated privileges. However, if the privileges\nrequired for execution are at a higher level than the privileges assigned to\norganizational users invoking the functionality applications/programs, those\nusers are indirectly provided with greater privileges than assigned by\norganizations.\n\n    Privilege elevation must be utilized only where necessary and protected\nfrom misuse.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered.\n  \"\n  desc  \"check\", \"\n     Review the system documentation, database and CouchDB security\nconfiguration, source code for DBMS internal logic, source code of external\nmodules invoked by CouchDB, and source code of the application(s) using the\ndatabase.\n\n    #GET /{db}/_security\n    #grep 'roles'\n\n    If elevation of DBMS privileges is utilized but not documented, this is a\nfinding.\n\n    If elevation of DBMS privileges is documented, but not implemented as\ndescribed in the documentation, this is a finding.\n\n    If the privilege-elevation logic can be invoked in ways other than\nintended, or in contexts other than intended, or by subjects/principals other\nthan intended, this is a finding.\n  \"\n  desc  \"fix\", \"\n     Determine where, when, how, and by what principals/subjects elevated\nprivilege is needed.\n\n    Modify the database and DBMS security configuration, DBMS internal logic,\nexternal modules invoked by CouchDB, and the application(s) using the database,\nto ensure privilege elevation is used only as required.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000342-DB-000302\"\n  tag \"gid\": \"V-58021\"\n  tag \"rid\": \"SV-72451r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000342-DB-000302\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002233\"]\n  tag \"nist\": [\"AC-6 (8)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58021.rb"},"waiver_data":{},"results":[]},{"id":"V-58023","title":"The DBMS must prevent non-privileged users from executing privileged\nfunctions, to include disabling, circumventing, or altering implemented\nsecurity safeguards/countermeasures.","desc":"Preventing non-privileged users from executing privileged functions\nmitigates the risk that unauthorized individuals or processes may gain\nunnecessary access to information or privileges.\n\n    System documentation should include a definition of the functionality\nconsidered privileged.\n\n    Depending on circumstances, privileged functions can include, for example,\nestablishing accounts, performing system integrity checks, or administering\ncryptographic key management activities. Non-privileged users are individuals\nthat do not possess appropriate authorizations. Circumventing intrusion\ndetection and prevention mechanisms or malicious code protection mechanisms are\nexamples of privileged functions that require protection from non-privileged\nusers.\n\n    A privileged function in the DBMS/database context is any operation that\nmodifies the structure of the database, its built-in logic, or its security\nsettings. This would include all Data Definition Language (DDL) statements and\nall security-related statements. In an SQL environment, it encompasses, but is\nnot necessarily limited to:\n    CREATE\n    ALTER\n    DROP\n    GRANT\n    REVOKE\n    DENY\n\n    There may also be Data Manipulation Language (DML) statements that, subject\nto context, should be regarded as privileged. Possible examples include:\n\n    TRUNCATE TABLE;\n    DELETE, or\n    DELETE affecting more than n rows, for some n, or\n    DELETE without a WHERE clause;\n\n    UPDATE or\n    UPDATE affecting more than n rows, for some n, or\n    UPDATE without a WHERE clause;\n\n    any SELECT, INSERT, UPDATE, or DELETE to an application-defined security\ntable executed by other than a security principal.\n\n    Depending on the capabilities of the DBMS and the design of the database\nand associated applications, the prevention of unauthorized use of privileged\nfunctions may be achieved by means of DBMS security features, database\ntriggers, other mechanisms, or a combination of these.","descriptions":[{"label":"default","data":"Preventing non-privileged users from executing privileged functions\nmitigates the risk that unauthorized individuals or processes may gain\nunnecessary access to information or privileges.\n\n    System documentation should include a definition of the functionality\nconsidered privileged.\n\n    Depending on circumstances, privileged functions can include, for example,\nestablishing accounts, performing system integrity checks, or administering\ncryptographic key management activities. Non-privileged users are individuals\nthat do not possess appropriate authorizations. Circumventing intrusion\ndetection and prevention mechanisms or malicious code protection mechanisms are\nexamples of privileged functions that require protection from non-privileged\nusers.\n\n    A privileged function in the DBMS/database context is any operation that\nmodifies the structure of the database, its built-in logic, or its security\nsettings. This would include all Data Definition Language (DDL) statements and\nall security-related statements. In an SQL environment, it encompasses, but is\nnot necessarily limited to:\n    CREATE\n    ALTER\n    DROP\n    GRANT\n    REVOKE\n    DENY\n\n    There may also be Data Manipulation Language (DML) statements that, subject\nto context, should be regarded as privileged. Possible examples include:\n\n    TRUNCATE TABLE;\n    DELETE, or\n    DELETE affecting more than n rows, for some n, or\n    DELETE without a WHERE clause;\n\n    UPDATE or\n    UPDATE affecting more than n rows, for some n, or\n    UPDATE without a WHERE clause;\n\n    any SELECT, INSERT, UPDATE, or DELETE to an application-defined security\ntable executed by other than a security principal.\n\n    Depending on the capabilities of the DBMS and the design of the database\nand associated applications, the prevention of unauthorized use of privileged\nfunctions may be achieved by means of DBMS security features, database\ntriggers, other mechanisms, or a combination of these."},{"label":"check","data":"Review the system documentation to obtain the definition of the CouchDB\nfunctionality considered privileged in the context of the system in question.\n\n    Review the CouchDB security configuration and/or other means used to\nprotect privileged functionality from unauthorized use.\n\n    If the configuration does not protect all of the actions defined as\nprivileged, this is a finding."},{"label":"fix","data":"Configure CouchDB security to protect all privileged\nfunctionality."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000340-DB-000304","gid":"V-58023","rid":"SV-72453r1_rule","stig_id":"SRG-APP-000340-DB-000304","fix_id":null,"cci":["CCI-002235"],"nist":["AC-6 (10)","Rev_4"]},"code":"control \"V-58023\" do\n  title \"The DBMS must prevent non-privileged users from executing privileged\nfunctions, to include disabling, circumventing, or altering implemented\nsecurity safeguards/countermeasures.\"\n  desc  \"Preventing non-privileged users from executing privileged functions\nmitigates the risk that unauthorized individuals or processes may gain\nunnecessary access to information or privileges.\n\n    System documentation should include a definition of the functionality\nconsidered privileged.\n\n    Depending on circumstances, privileged functions can include, for example,\nestablishing accounts, performing system integrity checks, or administering\ncryptographic key management activities. Non-privileged users are individuals\nthat do not possess appropriate authorizations. Circumventing intrusion\ndetection and prevention mechanisms or malicious code protection mechanisms are\nexamples of privileged functions that require protection from non-privileged\nusers.\n\n    A privileged function in the DBMS/database context is any operation that\nmodifies the structure of the database, its built-in logic, or its security\nsettings. This would include all Data Definition Language (DDL) statements and\nall security-related statements. In an SQL environment, it encompasses, but is\nnot necessarily limited to:\n    CREATE\n    ALTER\n    DROP\n    GRANT\n    REVOKE\n    DENY\n\n    There may also be Data Manipulation Language (DML) statements that, subject\nto context, should be regarded as privileged. Possible examples include:\n\n    TRUNCATE TABLE;\n    DELETE, or\n    DELETE affecting more than n rows, for some n, or\n    DELETE without a WHERE clause;\n\n    UPDATE or\n    UPDATE affecting more than n rows, for some n, or\n    UPDATE without a WHERE clause;\n\n    any SELECT, INSERT, UPDATE, or DELETE to an application-defined security\ntable executed by other than a security principal.\n\n    Depending on the capabilities of the DBMS and the design of the database\nand associated applications, the prevention of unauthorized use of privileged\nfunctions may be achieved by means of DBMS security features, database\ntriggers, other mechanisms, or a combination of these.\n  \"\n  desc  \"check\", \"\n    Review the system documentation to obtain the definition of the CouchDB\nfunctionality considered privileged in the context of the system in question.\n\n    Review the CouchDB security configuration and/or other means used to\nprotect privileged functionality from unauthorized use.\n\n    If the configuration does not protect all of the actions defined as\nprivileged, this is a finding.\n  \"\n  desc  \"fix\", \"Configure CouchDB security to protect all privileged\nfunctionality.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000340-DB-000304\"\n  tag \"gid\": \"V-58023\"\n  tag \"rid\": \"SV-72453r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000340-DB-000304\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002235\"]\n  tag \"nist\": [\"AC-6 (10)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58023.rb"},"waiver_data":{},"results":[]},{"id":"V-58025","title":"The DBMS must automatically terminate a user session after\norganization-defined conditions or trigger events requiring session disconnect.","desc":"This addresses the termination of user-initiated logical sessions in\ncontrast to the termination of network connections that are associated with\ncommunications sessions (i.e., network disconnect). A logical session (for\nlocal, network, and remote access) is initiated whenever a user (or process\nacting on behalf of a user) accesses an organizational information system. Such\nuser sessions can be terminated (and thus terminate user access) without\nterminating network sessions.\n\n    Session termination ends all processes associated with a user's logical\nsession except those batch processes/jobs that are specifically created by the\nuser (i.e., session owner) to continue after the session is terminated.\n\n    Conditions or trigger events requiring automatic session termination can\ninclude, for example, organization-defined periods of user inactivity, targeted\nresponses to certain types of incidents, and time-of-day restrictions on\ninformation system use.\n\n    This capability is typically reserved for specific cases where the system\nowner, data owner, or organization requires additional assurance.","descriptions":[{"label":"default","data":"This addresses the termination of user-initiated logical sessions in\ncontrast to the termination of network connections that are associated with\ncommunications sessions (i.e., network disconnect). A logical session (for\nlocal, network, and remote access) is initiated whenever a user (or process\nacting on behalf of a user) accesses an organizational information system. Such\nuser sessions can be terminated (and thus terminate user access) without\nterminating network sessions.\n\n    Session termination ends all processes associated with a user's logical\nsession except those batch processes/jobs that are specifically created by the\nuser (i.e., session owner) to continue after the session is terminated.\n\n    Conditions or trigger events requiring automatic session termination can\ninclude, for example, organization-defined periods of user inactivity, targeted\nresponses to certain types of incidents, and time-of-day restrictions on\ninformation system use.\n\n    This capability is typically reserved for specific cases where the system\nowner, data owner, or organization requires additional assurance."},{"label":"check","data":"Review system documentation to obtain the organization's definition of\ncircumstances requiring automatic session termination. If the documentation\nexplicitly states that such termination is not required or is prohibited, this\nis not a finding.\n\n    If the documentation requires automatic session termination, but CouchDB is\nnot configured accordingly, this is a finding."},{"label":"fix","data":"Configure CouchDB to automatically terminate a user session after\norganization-defined conditions or trigger events requiring session termination."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000295-DB-000305","gid":"V-58025","rid":"SV-72455r1_rule","stig_id":"SRG-APP-000295-DB-000305","fix_id":null,"cci":["CCI-002361"],"nist":["AC-12","Rev_4"]},"code":"control \"V-58025\" do\n  title \"The DBMS must automatically terminate a user session after\norganization-defined conditions or trigger events requiring session disconnect.\"\n  desc  \"This addresses the termination of user-initiated logical sessions in\ncontrast to the termination of network connections that are associated with\ncommunications sessions (i.e., network disconnect). A logical session (for\nlocal, network, and remote access) is initiated whenever a user (or process\nacting on behalf of a user) accesses an organizational information system. Such\nuser sessions can be terminated (and thus terminate user access) without\nterminating network sessions.\n\n    Session termination ends all processes associated with a user's logical\nsession except those batch processes/jobs that are specifically created by the\nuser (i.e., session owner) to continue after the session is terminated.\n\n    Conditions or trigger events requiring automatic session termination can\ninclude, for example, organization-defined periods of user inactivity, targeted\nresponses to certain types of incidents, and time-of-day restrictions on\ninformation system use.\n\n    This capability is typically reserved for specific cases where the system\nowner, data owner, or organization requires additional assurance.\n  \"\n  desc  \"check\", \"\n     Review system documentation to obtain the organization's definition of\ncircumstances requiring automatic session termination. If the documentation\nexplicitly states that such termination is not required or is prohibited, this\nis not a finding.\n\n    If the documentation requires automatic session termination, but CouchDB is\nnot configured accordingly, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to automatically terminate a user session after\norganization-defined conditions or trigger events requiring session termination.\n\n\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000295-DB-000305\"\n  tag \"gid\": \"V-58025\"\n  tag \"rid\": \"SV-72455r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000295-DB-000305\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002361\"]\n  tag \"nist\": [\"AC-12\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58025.rb"},"waiver_data":{},"results":[]},{"id":"V-58035","title":"The DBMS must provide logout functionality to allow the user to\nmanually terminate a session initiated by that user.","desc":"If a user cannot explicitly end a DBMS session, the session may remain\nopen and be exploited by an attacker; this is referred to as a zombie session.\n\n    Such logout may be explicit or implicit. Examples of explicit are: clicking\non a \"Log Out\" link or button in the application window; clicking the Windows\nStart button and selecting \"Log Out\" or \"Shut Down.\" Examples of implicit\nlogout are: closing the application's (main) window; powering off the\nworkstation without invoking the OS shutdown.\n\n    Both the explicit and implicit logouts must be detected by the DBMS.\n\n    In all cases, the DBMS must ensure that the user's DBMS session and all\nprocesses owned by the session are terminated.\n\n    This should not, however, interfere with batch processes/jobs initiated by\nthe user during his/her online session: these should be permitted to run to\ncompletion.","descriptions":[{"label":"default","data":"If a user cannot explicitly end a DBMS session, the session may remain\nopen and be exploited by an attacker; this is referred to as a zombie session.\n\n    Such logout may be explicit or implicit. Examples of explicit are: clicking\non a \"Log Out\" link or button in the application window; clicking the Windows\nStart button and selecting \"Log Out\" or \"Shut Down.\" Examples of implicit\nlogout are: closing the application's (main) window; powering off the\nworkstation without invoking the OS shutdown.\n\n    Both the explicit and implicit logouts must be detected by the DBMS.\n\n    In all cases, the DBMS must ensure that the user's DBMS session and all\nprocesses owned by the session are terminated.\n\n    This should not, however, interfere with batch processes/jobs initiated by\nthe user during his/her online session: these should be permitted to run to\ncompletion."},{"label":"check","data":"Determine, by reviewing the CouchDB documentation and/or inquiring of the\nvendor's technical support staff, whether CouchDB satisfies this requirement;\nand, if it does, determine whether this is inherent, unchangeable behavior, or\na configurable feature.\n\n    If CouchDB does not satisfy the requirement, this is a permanent finding.\n\n    If the behavior is inherent, this is permanently not a finding.\n\n    If the behavior is configurable, and the current configuration does not\nenforce it, this is a finding."},{"label":"fix","data":"Where relevant, modify the configuration to allow the user to\nmanually terminate a session initiated by that user."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000296-DB-000306","gid":"V-58035","rid":"SV-72465r1_rule","stig_id":"SRG-APP-000296-DB-000306","fix_id":null,"cci":["CCI-002363"],"nist":["AC-12 (1)","Rev_4"]},"code":"control \"V-58035\" do\n  title \"The DBMS must provide logout functionality to allow the user to\nmanually terminate a session initiated by that user.\"\n  desc  \"If a user cannot explicitly end a DBMS session, the session may remain\nopen and be exploited by an attacker; this is referred to as a zombie session.\n\n    Such logout may be explicit or implicit. Examples of explicit are: clicking\non a \\\"Log Out\\\" link or button in the application window; clicking the Windows\nStart button and selecting \\\"Log Out\\\" or \\\"Shut Down.\\\" Examples of implicit\nlogout are: closing the application's (main) window; powering off the\nworkstation without invoking the OS shutdown.\n\n    Both the explicit and implicit logouts must be detected by the DBMS.\n\n    In all cases, the DBMS must ensure that the user's DBMS session and all\nprocesses owned by the session are terminated.\n\n    This should not, however, interfere with batch processes/jobs initiated by\nthe user during his/her online session: these should be permitted to run to\ncompletion.\n  \"\n  desc  \"check\", \"\n    Determine, by reviewing the CouchDB documentation and/or inquiring of the\nvendor's technical support staff, whether CouchDB satisfies this requirement;\nand, if it does, determine whether this is inherent, unchangeable behavior, or\na configurable feature.\n\n    If CouchDB does not satisfy the requirement, this is a permanent finding.\n\n    If the behavior is inherent, this is permanently not a finding.\n\n    If the behavior is configurable, and the current configuration does not\nenforce it, this is a finding.\n  \"\n  desc  \"fix\", \"Where relevant, modify the configuration to allow the user to\nmanually terminate a session initiated by that user.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000296-DB-000306\"\n  tag \"gid\": \"V-58035\"\n  tag \"rid\": \"SV-72465r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000296-DB-000306\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002363\"]\n  tag \"nist\": [\"AC-12 (1)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58035.rb"},"waiver_data":{},"results":[]},{"id":"V-58037","title":"The DBMS must associate organization-defined types of security labels\nhaving organization-defined security label values with information in storage.","desc":"Without the association of security labels to information, there is no\nbasis for the DBMS to make security-related access-control decisions.\n\n    Security labels are abstractions representing the basic properties or\ncharacteristics of an entity (e.g., subjects and objects) with respect to\nsafeguarding information.\n\n    These labels are typically associated with internal data structures (e.g.,\ntables, rows) within the database and are used to enable the implementation of\naccess control and flow control policies, reflect special dissemination,\nhandling or distribution instructions, or support other aspects of the\ninformation security policy.\n\n    One example includes marking data as classified or FOUO. These security\nlabels may be assigned manually or during data processing, but, either way, it\nis imperative these assignments are maintained while the data is in storage. If\nthe security labels are lost when the data is stored, there is the risk of a\ndata compromise.\n\n    The mechanism used to support security labeling may be a feature of the\nDBMS product, a third-party product, or custom application code.","descriptions":[{"label":"default","data":"Without the association of security labels to information, there is no\nbasis for the DBMS to make security-related access-control decisions.\n\n    Security labels are abstractions representing the basic properties or\ncharacteristics of an entity (e.g., subjects and objects) with respect to\nsafeguarding information.\n\n    These labels are typically associated with internal data structures (e.g.,\ntables, rows) within the database and are used to enable the implementation of\naccess control and flow control policies, reflect special dissemination,\nhandling or distribution instructions, or support other aspects of the\ninformation security policy.\n\n    One example includes marking data as classified or FOUO. These security\nlabels may be assigned manually or during data processing, but, either way, it\nis imperative these assignments are maintained while the data is in storage. If\nthe security labels are lost when the data is stored, there is the risk of a\ndata compromise.\n\n    The mechanism used to support security labeling may be a feature of the\nDBMS product, a third-party product, or custom application code."},{"label":"check","data":"If security labeling is not required, this is not a finding.\n\n    Review organization-defined types of security labels.\n\n    If security labeling is required and not implemented according to the\nsystem documentation, such as SSP, this is a finding.\n\n    If security labeling requirements have been specified, but the security\nlabeling is not implemented or does not reliably maintain labels on information\nin storage, this is a finding."},{"label":"fix","data":"If security labeling is not defined by the organizaiton, but should be,\nthis should be implemented and recorded by organization in their defined plan.\n\n    If security labeling is defined, but not present, it must be added."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000311-DB-000308","gid":"V-58037","rid":"SV-72467r1_rule","stig_id":"SRG-APP-000311-DB-000308","fix_id":null,"cci":["CCI-002262"],"nist":["AC-16 a","Rev_4"]},"code":"control \"V-58037\" do\n  title \"The DBMS must associate organization-defined types of security labels\nhaving organization-defined security label values with information in storage.\"\n  desc  \"Without the association of security labels to information, there is no\nbasis for the DBMS to make security-related access-control decisions.\n\n    Security labels are abstractions representing the basic properties or\ncharacteristics of an entity (e.g., subjects and objects) with respect to\nsafeguarding information.\n\n    These labels are typically associated with internal data structures (e.g.,\ntables, rows) within the database and are used to enable the implementation of\naccess control and flow control policies, reflect special dissemination,\nhandling or distribution instructions, or support other aspects of the\ninformation security policy.\n\n    One example includes marking data as classified or FOUO. These security\nlabels may be assigned manually or during data processing, but, either way, it\nis imperative these assignments are maintained while the data is in storage. If\nthe security labels are lost when the data is stored, there is the risk of a\ndata compromise.\n\n    The mechanism used to support security labeling may be a feature of the\nDBMS product, a third-party product, or custom application code.\n  \"\n  desc  \"check\", \"\n    If security labeling is not required, this is not a finding.\n\n    Review organization-defined types of security labels.\n\n    If security labeling is required and not implemented according to the\nsystem documentation, such as SSP, this is a finding.\n\n    If security labeling requirements have been specified, but the security\nlabeling is not implemented or does not reliably maintain labels on information\nin storage, this is a finding.\n  \"\n  desc  \"fix\", \"\n    If security labeling is not defined by the organizaiton, but should be,\nthis should be implemented and recorded by organization in their defined plan.\n\n    If security labeling is defined, but not present, it must be added.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000311-DB-000308\"\n  tag \"gid\": \"V-58037\"\n  tag \"rid\": \"SV-72467r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000311-DB-000308\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002262\"]\n  tag \"nist\": [\"AC-16 a\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58037.rb"},"waiver_data":{},"results":[]},{"id":"V-58039","title":"The DBMS must associate organization-defined types of security labels\nhaving organization-defined security label values with information in process.","desc":"Without the association of security labels to information, there is no\nbasis for the DBMS to make security-related access-control decisions.\n\n    Security labels are abstractions representing the basic properties or\ncharacteristics of an entity (e.g., subjects and objects) with respect to\nsafeguarding information.\n\n    These labels are typically associated with internal data structures (e.g.,\ntables, rows) within the database and are used to enable the implementation of\naccess control and flow control policies, reflect special dissemination,\nhandling or distribution instructions, or support other aspects of the\ninformation security policy.\n\n    One example includes marking data as classified or FOUO. These security\nlabels may be assigned manually or during data processing, but, either way, it\nis imperative these assignments are maintained while the data is in storage. If\nthe security labels are lost when the data is stored, there is the risk of a\ndata compromise.\n\n    The mechanism used to support security labeling may be a feature of the\nDBMS product, a third-party product, or custom application code.","descriptions":[{"label":"default","data":"Without the association of security labels to information, there is no\nbasis for the DBMS to make security-related access-control decisions.\n\n    Security labels are abstractions representing the basic properties or\ncharacteristics of an entity (e.g., subjects and objects) with respect to\nsafeguarding information.\n\n    These labels are typically associated with internal data structures (e.g.,\ntables, rows) within the database and are used to enable the implementation of\naccess control and flow control policies, reflect special dissemination,\nhandling or distribution instructions, or support other aspects of the\ninformation security policy.\n\n    One example includes marking data as classified or FOUO. These security\nlabels may be assigned manually or during data processing, but, either way, it\nis imperative these assignments are maintained while the data is in storage. If\nthe security labels are lost when the data is stored, there is the risk of a\ndata compromise.\n\n    The mechanism used to support security labeling may be a feature of the\nDBMS product, a third-party product, or custom application code."},{"label":"check","data":"If security labeling is not required, this is not a finding.\n\n    Review organization-defined types of security labels.\n\n    If security labeling requirements have been specified, but the security\nlabeling is not implemented or does not reliably maintain labels on information\nin process, this is a finding."},{"label":"fix","data":"If security labeling is not defined by the organizaiton, but should be,\nthis should be implemented and recorded by organization in their defined plan.\n\n    If security labeling is defined, but not present, it must be added."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000313-DB-000309","gid":"V-58039","rid":"SV-72469r1_rule","stig_id":"SRG-APP-000313-DB-000309","fix_id":null,"cci":["CCI-002263"],"nist":["AC-16 a","Rev_4"]},"code":"control \"V-58039\" do\n  title \"The DBMS must associate organization-defined types of security labels\nhaving organization-defined security label values with information in process.\"\n  desc  \"Without the association of security labels to information, there is no\nbasis for the DBMS to make security-related access-control decisions.\n\n    Security labels are abstractions representing the basic properties or\ncharacteristics of an entity (e.g., subjects and objects) with respect to\nsafeguarding information.\n\n    These labels are typically associated with internal data structures (e.g.,\ntables, rows) within the database and are used to enable the implementation of\naccess control and flow control policies, reflect special dissemination,\nhandling or distribution instructions, or support other aspects of the\ninformation security policy.\n\n    One example includes marking data as classified or FOUO. These security\nlabels may be assigned manually or during data processing, but, either way, it\nis imperative these assignments are maintained while the data is in storage. If\nthe security labels are lost when the data is stored, there is the risk of a\ndata compromise.\n\n    The mechanism used to support security labeling may be a feature of the\nDBMS product, a third-party product, or custom application code.\n  \"\n  desc  \"check\", \"\n    If security labeling is not required, this is not a finding.\n\n    Review organization-defined types of security labels.\n\n    If security labeling requirements have been specified, but the security\nlabeling is not implemented or does not reliably maintain labels on information\nin process, this is a finding.\n  \"\n  desc  \"fix\", \"\n    If security labeling is not defined by the organizaiton, but should be,\nthis should be implemented and recorded by organization in their defined plan.\n\n    If security labeling is defined, but not present, it must be added.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000313-DB-000309\"\n  tag \"gid\": \"V-58039\"\n  tag \"rid\": \"SV-72469r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000313-DB-000309\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002263\"]\n  tag \"nist\": [\"AC-16 a\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58039.rb"},"waiver_data":{},"results":[]},{"id":"V-58041","title":"The DBMS must associate organization-defined types of security labels\nhaving organization-defined security label values with information in\ntransmission.","desc":"Without the association of security labels to information, there is no\nbasis for the DBMS to make security-related access-control decisions.\n\n    Security labels are abstractions representing the basic properties or\ncharacteristics of an entity (e.g., subjects and objects) with respect to\nsafeguarding information.\n\n    These labels are typically associated with internal data structures (e.g.,\ntables, rows) within the database and are used to enable the implementation of\naccess control and flow control policies, reflect special dissemination,\nhandling or distribution instructions, or support other aspects of the\ninformation security policy.\n\n    One example includes marking data as classified or FOUO. These security\nlabels may be assigned manually or during data processing, but, either way, it\nis imperative these assignments are maintained while the data is in storage. If\nthe security labels are lost when the data is stored, there is the risk of a\ndata compromise.\n\n    The mechanism used to support security labeling may be a feature of the\nDBMS product, a third-party product, or custom application code.","descriptions":[{"label":"default","data":"Without the association of security labels to information, there is no\nbasis for the DBMS to make security-related access-control decisions.\n\n    Security labels are abstractions representing the basic properties or\ncharacteristics of an entity (e.g., subjects and objects) with respect to\nsafeguarding information.\n\n    These labels are typically associated with internal data structures (e.g.,\ntables, rows) within the database and are used to enable the implementation of\naccess control and flow control policies, reflect special dissemination,\nhandling or distribution instructions, or support other aspects of the\ninformation security policy.\n\n    One example includes marking data as classified or FOUO. These security\nlabels may be assigned manually or during data processing, but, either way, it\nis imperative these assignments are maintained while the data is in storage. If\nthe security labels are lost when the data is stored, there is the risk of a\ndata compromise.\n\n    The mechanism used to support security labeling may be a feature of the\nDBMS product, a third-party product, or custom application code."},{"label":"check","data":"If security labeling is not required, this is not a finding.\n\n    Review organization-defined types of security labels.\n\n    If security labeling is required and not implemented according to the\nsystem documentation, such as SSP, this is a finding.\n\n    If security labeling requirements have been specified, but the security\nlabeling is not implemented or does not reliably maintain labels on information\nin storage, this is a finding."},{"label":"fix","data":"If security labeling is not defined by the organizaiton, but should be,\nthis should be implemented and recorded by organization in their defined plan.\n\n    If security labeling is defined, but not present, it must be added."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000314-DB-000310","gid":"V-58041","rid":"SV-72471r1_rule","stig_id":"SRG-APP-000314-DB-000310","fix_id":null,"cci":["CCI-002264"],"nist":["AC-16 a","Rev_4"]},"code":"control \"V-58041\" do\n  title \"The DBMS must associate organization-defined types of security labels\nhaving organization-defined security label values with information in\ntransmission.\"\n  desc  \"Without the association of security labels to information, there is no\nbasis for the DBMS to make security-related access-control decisions.\n\n    Security labels are abstractions representing the basic properties or\ncharacteristics of an entity (e.g., subjects and objects) with respect to\nsafeguarding information.\n\n    These labels are typically associated with internal data structures (e.g.,\ntables, rows) within the database and are used to enable the implementation of\naccess control and flow control policies, reflect special dissemination,\nhandling or distribution instructions, or support other aspects of the\ninformation security policy.\n\n    One example includes marking data as classified or FOUO. These security\nlabels may be assigned manually or during data processing, but, either way, it\nis imperative these assignments are maintained while the data is in storage. If\nthe security labels are lost when the data is stored, there is the risk of a\ndata compromise.\n\n    The mechanism used to support security labeling may be a feature of the\nDBMS product, a third-party product, or custom application code.\n  \"\n  desc  \"check\", \"\n    If security labeling is not required, this is not a finding.\n\n    Review organization-defined types of security labels.\n\n    If security labeling is required and not implemented according to the\nsystem documentation, such as SSP, this is a finding.\n\n    If security labeling requirements have been specified, but the security\nlabeling is not implemented or does not reliably maintain labels on information\nin storage, this is a finding.\n  \"\n  desc  \"fix\", \"\n    If security labeling is not defined by the organizaiton, but should be,\nthis should be implemented and recorded by organization in their defined plan.\n\n    If security labeling is defined, but not present, it must be added.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000314-DB-000310\"\n  tag \"gid\": \"V-58041\"\n  tag \"rid\": \"SV-72471r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000314-DB-000310\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002264\"]\n  tag \"nist\": [\"AC-16 a\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58041.rb"},"waiver_data":{},"results":[]},{"id":"V-58049","title":"The DBMS must utilize centralized management of the content captured\nin audit records generated by all components of the DBMS.","desc":"Without the ability to centrally manage the content captured in the\naudit records, identification, troubleshooting, and correlation of suspicious\nbehavior would be difficult and could lead to a delayed or incomplete analysis\nof an ongoing attack.\n\n    The content captured in audit records must be managed from a central\nlocation (necessitating automation). Centralized management of audit records\nand logs provides for efficiency in maintenance and management of records, as\nwell as the backup and archiving of those records.\n\n    The DBMS may write audit records to database tables, to files in the file\nsystem, to other kinds of local repository, or directly to a centralized log\nmanagement system. Whatever the method used, it must be compatible with\noff-loading the records to the centralized system.","descriptions":[{"label":"default","data":"Without the ability to centrally manage the content captured in the\naudit records, identification, troubleshooting, and correlation of suspicious\nbehavior would be difficult and could lead to a delayed or incomplete analysis\nof an ongoing attack.\n\n    The content captured in audit records must be managed from a central\nlocation (necessitating automation). Centralized management of audit records\nand logs provides for efficiency in maintenance and management of records, as\nwell as the backup and archiving of those records.\n\n    The DBMS may write audit records to database tables, to files in the file\nsystem, to other kinds of local repository, or directly to a centralized log\nmanagement system. Whatever the method used, it must be compatible with\noff-loading the records to the centralized system."}],"impact":0.5,"refs":[],"tags":{},"code":"control \"V-58049\" do\n  title \"The DBMS must utilize centralized management of the content captured\nin audit records generated by all components of the DBMS.\"\n  desc  \"Without the ability to centrally manage the content captured in the\naudit records, identification, troubleshooting, and correlation of suspicious\nbehavior would be difficult and could lead to a delayed or incomplete analysis\nof an ongoing attack.\n\n    The content captured in audit records must be managed from a central\nlocation (necessitating automation). Centralized management of audit records\nand logs provides for efficiency in maintenance and management of records, as\nwell as the backup and archiving of those records.\n\n    The DBMS may write audit records to database tables, to files in the file\nsystem, to other kinds of local repository, or directly to a centralized log\nmanagement system. Whatever the method used, it must be compatible with\noff-loading the records to the centralized system.\n  \"\n  desc  \"check\", \"\n    Review the system documentation for a description of how audit records are\noff-loaded and how local audit log space is managed.\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\x93log\\x94 section\n    #grep \\\"sys_facilities =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n    If the CouchDB audit records are not written directly to or systematically\ntransferred to a centralized log management system, this is a finding.\n  \"\n  desc  \"fix\", \"Configure and/or deploy software tools to ensure that the\nCouchDB audit records are written directly to or systematically transferred to\na centralized log management system. Configure loging to be enabled\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000356-DB-000314\"\n  tag \"gid\": \"V-58049\"\n  tag \"rid\": \"SV-72479r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000356-DB-000314\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001844\"]\n  tag \"nist\": [\"AU-3 (2)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58049.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Control Source Code Error C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58049.rb:3 ","run_time":5.09e-05,"start_time":"2020-07-17T16:26:10-04:00","message":"invalid byte sequence in UTF-8","exception":"RuntimeError","backtrace":["C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/rule.rb:61:in `block (2 levels) in initialize'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `instance_exec'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `block in with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `block in with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:619:in `run_around_example_hooks_for'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:254:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:644:in `block in run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:606:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (3 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (2 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/configuration.rb:2058:in `with_suite_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:116:in `block in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/reporter.rb:74:in `report'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:115:in `run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner_rspec.rb:82:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:159:in `run_tests'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:130:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/kitchen-inspec-2.0.0/lib/kitchen/verifier/inspec.rb:105:in `call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:459:in `block in verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:552:in `synchronize_or_call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:514:in `block in action'","C:/opscode/chef-workstation/embedded/lib/ruby/2.7.0/benchmark.rb:293:in `measure'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:513:in `action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:451:in `verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:382:in `block (2 levels) in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/lifecycle_hooks.rb:45:in `run_with_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:381:in `block in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `each'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:162:in `verify'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `public_send'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `run_action_in_thread'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:169:in `block (2 levels) in run_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/logging-2.2.2/lib/logging/diagnostic_context.rb:474:in `block in create_with_logging_context'"]}]},{"id":"V-58051","title":"The DBMS must provide centralized configuration of the content to be\ncaptured in audit records generated by all components of the DBMS.","desc":"If the configuration of the DBMS's auditing is spread across multiple\nlocations in the database management software, or across multiple commands,\nonly loosely related, it is harder to use and takes longer to reconfigure in\nresponse to events.\n\n    The DBMS must provide a unified tool for audit configuration.","descriptions":[{"label":"default","data":"If the configuration of the DBMS's auditing is spread across multiple\nlocations in the database management software, or across multiple commands,\nonly loosely related, it is harder to use and takes longer to reconfigure in\nresponse to events.\n\n    The DBMS must provide a unified tool for audit configuration."},{"label":"check","data":"Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for centralized\nconfiguration of the content to be captured in audit records generated by all\ncomponents of the CouchDB database.\n\n    # find . -name \"default.ini\"\n\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records for centralized configuration of the\ncontent to be captured in audit records generated by all components of the\nCouchDB database, this is a finding."},{"label":"fix","data":"Configure CouchDB to provide centralized configuration of the content to be\ncaptured in audit records generated by all components of CouchDB.\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000356-DB-000315","gid":"V-58051","rid":"SV-72481r1_rule","stig_id":"SRG-APP-000356-DB-000315","fix_id":null,"cci":["CCI-001844"],"nist":["AU-3 (2)","Rev_4"]},"code":"control \"V-58051\" do\n  title \"The DBMS must provide centralized configuration of the content to be\ncaptured in audit records generated by all components of the DBMS.\"\n  desc  \"If the configuration of the DBMS's auditing is spread across multiple\nlocations in the database management software, or across multiple commands,\nonly loosely related, it is harder to use and takes longer to reconfigure in\nresponse to events.\n\n    The DBMS must provide a unified tool for audit configuration.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for centralized\nconfiguration of the content to be captured in audit records generated by all\ncomponents of the CouchDB database.\n\n    # find . -name \\\"default.ini\\\"\n\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records for centralized configuration of the\ncontent to be captured in audit records generated by all components of the\nCouchDB database, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to provide centralized configuration of the content to be\ncaptured in audit records generated by all components of CouchDB.\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000356-DB-000315\"\n  tag \"gid\": \"V-58051\"\n  tag \"rid\": \"SV-72481r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000356-DB-000315\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001844\"]\n  tag \"nist\": [\"AU-3 (2)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58051.rb"},"waiver_data":{},"results":[]},{"id":"V-58053","title":"The DBMS must allocate audit record storage capacity in accordance\nwith organization-defined audit record storage requirements.","desc":"In order to ensure sufficient storage capacity for the audit logs, the\nDBMS must be able to allocate audit record storage capacity. Although another\nrequirement (SRG-APP-000515-DB-000318) mandates that audit data be off-loaded\nto a centralized log management system, it remains necessary to provide space\non the database server to serve as a buffer against outages and capacity limits\nof the off-loading mechanism.\n\n    The task of allocating audit record storage capacity is usually performed\nduring initial installation of the DBMS and is closely associated with the DBA\nand system administrator roles. The DBA or system administrator will usually\ncoordinate the allocation of physical drive space with the application\nowner/installer and the application will prompt the installer to provide the\ncapacity information, the physical location of the disk, or both.\n\n    In determining the capacity requirements, consider such factors as: total\nnumber of users; expected number of concurrent users during busy periods;\nnumber and type of events being monitored; types and amounts of data being\ncaptured; the frequency/speed with which audit records are off-loaded to the\ncentral log management system; and any limitations that exist on the DBMS's\nability to reuse the space formerly occupied by off-loaded records.","descriptions":[{"label":"default","data":"In order to ensure sufficient storage capacity for the audit logs, the\nDBMS must be able to allocate audit record storage capacity. Although another\nrequirement (SRG-APP-000515-DB-000318) mandates that audit data be off-loaded\nto a centralized log management system, it remains necessary to provide space\non the database server to serve as a buffer against outages and capacity limits\nof the off-loading mechanism.\n\n    The task of allocating audit record storage capacity is usually performed\nduring initial installation of the DBMS and is closely associated with the DBA\nand system administrator roles. The DBA or system administrator will usually\ncoordinate the allocation of physical drive space with the application\nowner/installer and the application will prompt the installer to provide the\ncapacity information, the physical location of the disk, or both.\n\n    In determining the capacity requirements, consider such factors as: total\nnumber of users; expected number of concurrent users during busy periods;\nnumber and type of events being monitored; types and amounts of data being\ncaptured; the frequency/speed with which audit records are off-loaded to the\ncentral log management system; and any limitations that exist on the DBMS's\nability to reuse the space formerly occupied by off-loaded records."},{"label":"check","data":"Review the organization=defined audit record storage requirements.\n\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    # df <path to log file>\n\n    If disk space returned is lower than organization-defined storage\nrequirements, this is a finding."},{"label":"fix","data":"Configure CouchDB to allocate audit record storage capacity in\naccordance with organization-defined audit record storage requirements."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000357-DB-000316","gid":"V-58053","rid":"SV-72483r1_rule","stig_id":"SRG-APP-000357-DB-000316","fix_id":null,"cci":["CCI-001849"],"nist":["AU-4","Rev_4"]},"code":"control \"V-58053\" do\n  title \"The DBMS must allocate audit record storage capacity in accordance\nwith organization-defined audit record storage requirements.\"\n  desc  \"In order to ensure sufficient storage capacity for the audit logs, the\nDBMS must be able to allocate audit record storage capacity. Although another\nrequirement (SRG-APP-000515-DB-000318) mandates that audit data be off-loaded\nto a centralized log management system, it remains necessary to provide space\non the database server to serve as a buffer against outages and capacity limits\nof the off-loading mechanism.\n\n    The task of allocating audit record storage capacity is usually performed\nduring initial installation of the DBMS and is closely associated with the DBA\nand system administrator roles. The DBA or system administrator will usually\ncoordinate the allocation of physical drive space with the application\nowner/installer and the application will prompt the installer to provide the\ncapacity information, the physical location of the disk, or both.\n\n    In determining the capacity requirements, consider such factors as: total\nnumber of users; expected number of concurrent users during busy periods;\nnumber and type of events being monitored; types and amounts of data being\ncaptured; the frequency/speed with which audit records are off-loaded to the\ncentral log management system; and any limitations that exist on the DBMS's\nability to reuse the space formerly occupied by off-loaded records.\n  \"\n  desc  \"check\", \"\n    Review the organization=defined audit record storage requirements.\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    # df <path to log file>\n\n    If disk space returned is lower than organization-defined storage\nrequirements, this is a finding.\n  \"\n  desc  \"fix\", \"Configure CouchDB to allocate audit record storage capacity in\naccordance with organization-defined audit record storage requirements.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000357-DB-000316\"\n  tag \"gid\": \"V-58053\"\n  tag \"rid\": \"SV-72483r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000357-DB-000316\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001849\"]\n  tag \"nist\": [\"AU-4\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58053.rb"},"waiver_data":{},"results":[]},{"id":"V-58055","title":"The DBMS must off-load audit data to a separate log management\nfacility; this shall be continuous and in near real time for systems with a\nnetwork connection to the storage facility and weekly or more often for\nstand-alone systems.","desc":"Information stored in one location is vulnerable to accidental or\nincidental deletion or alteration.\n\n    Off-loading is a common process in information systems with limited audit\nstorage capacity.\n\n    The DBMS may write audit records to database tables, to files in the file\nsystem, to other kinds of local repository, or directly to a centralized log\nmanagement system. Whatever the method used, it must be compatible with\noff-loading the records to the centralized system.","descriptions":[{"label":"default","data":"Information stored in one location is vulnerable to accidental or\nincidental deletion or alteration.\n\n    Off-loading is a common process in information systems with limited audit\nstorage capacity.\n\n    The DBMS may write audit records to database tables, to files in the file\nsystem, to other kinds of local repository, or directly to a centralized log\nmanagement system. Whatever the method used, it must be compatible with\noff-loading the records to the centralized system."},{"label":"check","data":"Review the system documentation for a description of how audit records are\noff-loaded.\n\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep 'syslog_facility'\n    Check with the organization to see how syslog facilities are defined in\ntheir organization.\n\n    If the wrong facility is configured, this is a finding.\n\n    If CouchDB has a continuous network connection to the centralized log\nmanagement system, but CouchDB audit records are not written directly to the\ncentralized log management system or transferred in near-real-time, this is a\nfinding.\n\n    If CouchDB does not have a continuous network connection to the centralized\nlog management system, and CouchDB audit records are not transferred to the\ncentralized log management system weekly or more often, this is a finding."},{"label":"fix","data":"Configure CouchDB to off-load audit data to a separate log management\nfacility; this shall be continuous and in near real time for systems with a\nnetwork connection to the storage facility and weekly or more often for\nstand-alone systems.\n\n    Ensure logging is enabled"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000515-DB-000318","gid":"V-58055","rid":"SV-72485r1_rule","stig_id":"SRG-APP-000515-DB-000318","fix_id":null,"cci":["CCI-001851"],"nist":["AU-4 (1)","Rev_4"]},"code":"control \"V-58055\" do\n  title \"The DBMS must off-load audit data to a separate log management\nfacility; this shall be continuous and in near real time for systems with a\nnetwork connection to the storage facility and weekly or more often for\nstand-alone systems.\"\n  desc  \"Information stored in one location is vulnerable to accidental or\nincidental deletion or alteration.\n\n    Off-loading is a common process in information systems with limited audit\nstorage capacity.\n\n    The DBMS may write audit records to database tables, to files in the file\nsystem, to other kinds of local repository, or directly to a centralized log\nmanagement system. Whatever the method used, it must be compatible with\noff-loading the records to the centralized system.\n  \"\n  desc  \"check\", \"\n    Review the system documentation for a description of how audit records are\noff-loaded.\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep 'syslog_facility'\n    Check with the organization to see how syslog facilities are defined in\ntheir organization.\n\n    If the wrong facility is configured, this is a finding.\n\n    If CouchDB has a continuous network connection to the centralized log\nmanagement system, but CouchDB audit records are not written directly to the\ncentralized log management system or transferred in near-real-time, this is a\nfinding.\n\n    If CouchDB does not have a continuous network connection to the centralized\nlog management system, and CouchDB audit records are not transferred to the\ncentralized log management system weekly or more often, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to off-load audit data to a separate log management\nfacility; this shall be continuous and in near real time for systems with a\nnetwork connection to the storage facility and weekly or more often for\nstand-alone systems.\n\n    Ensure logging is enabled\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000515-DB-000318\"\n  tag \"gid\": \"V-58055\"\n  tag \"rid\": \"SV-72485r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000515-DB-000318\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001851\"]\n  tag \"nist\": [\"AU-4 (1)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58055.rb"},"waiver_data":{},"results":[]},{"id":"V-58057","title":"The DBMS must provide a warning to appropriate support staff when\nallocated audit record storage volume reaches 75% of maximum audit record\nstorage capacity.","desc":"Organizations are required to use a central log management system, so,\nunder normal conditions, the audit space allocated to the DBMS on its own\nserver will not be an issue. However, space will still be required on the DBMS\nserver for audit records in transit, and, under abnormal conditions, this could\nfill up. Since a requirement exists to halt processing upon audit failure, a\nservice outage would result.\n\n    If support personnel are not notified immediately upon storage volume\nutilization reaching 75%, they are unable to plan for storage capacity\nexpansion.\n\n    The appropriate support staff include, at a minimum, the ISSO and the\nDBA/SA.","descriptions":[{"label":"default","data":"Organizations are required to use a central log management system, so,\nunder normal conditions, the audit space allocated to the DBMS on its own\nserver will not be an issue. However, space will still be required on the DBMS\nserver for audit records in transit, and, under abnormal conditions, this could\nfill up. Since a requirement exists to halt processing upon audit failure, a\nservice outage would result.\n\n    If support personnel are not notified immediately upon storage volume\nutilization reaching 75%, they are unable to plan for storage capacity\nexpansion.\n\n    The appropriate support staff include, at a minimum, the ISSO and the\nDBA/SA."},{"label":"check","data":"Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for a warning to\nappropriate support staff when allocated audit record storage volume reaches\n75% of maximum audit record storage capacity.\n\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    # df <path to log file>\n\n    *if used space is greater than 75% of available space, alert support staff*\n\n    If it is not set for a warning to appropriate support staff when allocated\naudit record storage volume reaches 75% of maximum audit record storage\ncapacity, this is a finding."},{"label":"fix","data":"Configure CouchDB to provide a warning to appropriate support\nstaff when allocated audit record storage volume reaches 75% of maximum audit\nrecord storage capacity."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000359-DB-000319","gid":"V-58057","rid":"SV-72487r1_rule","stig_id":"SRG-APP-000359-DB-000319","fix_id":null,"cci":["CCI-001855"],"nist":["AU-5 (1)","Rev_4"]},"code":"control \"V-58057\" do\n  title \"The DBMS must provide a warning to appropriate support staff when\nallocated audit record storage volume reaches 75% of maximum audit record\nstorage capacity.\"\n  desc  \"Organizations are required to use a central log management system, so,\nunder normal conditions, the audit space allocated to the DBMS on its own\nserver will not be an issue. However, space will still be required on the DBMS\nserver for audit records in transit, and, under abnormal conditions, this could\nfill up. Since a requirement exists to halt processing upon audit failure, a\nservice outage would result.\n\n    If support personnel are not notified immediately upon storage volume\nutilization reaching 75%, they are unable to plan for storage capacity\nexpansion.\n\n    The appropriate support staff include, at a minimum, the ISSO and the\nDBA/SA.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for a warning to\nappropriate support staff when allocated audit record storage volume reaches\n75% of maximum audit record storage capacity.\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    # df <path to log file>\n\n    *if used space is greater than 75% of available space, alert support staff*\n\n    If it is not set for a warning to appropriate support staff when allocated\naudit record storage volume reaches 75% of maximum audit record storage\ncapacity, this is a finding.\n  \"\n  desc  \"fix\", \"Configure CouchDB to provide a warning to appropriate support\nstaff when allocated audit record storage volume reaches 75% of maximum audit\nrecord storage capacity. \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000359-DB-000319\"\n  tag \"gid\": \"V-58057\"\n  tag \"rid\": \"SV-72487r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000359-DB-000319\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001855\"]\n  tag \"nist\": [\"AU-5 (1)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58057.rb"},"waiver_data":{},"results":[]},{"id":"V-58059","title":"The DBMS must provide an immediate real-time alert to appropriate\nsupport staff of all audit log failures. ","desc":"It is critical for the appropriate personnel to be aware if a system\nis at risk of failing to process audit logs as required. Without a real-time\nalert, security personnel may be unaware of an impending failure of the audit\ncapability, and system operation may be adversely affected.\n\n    The appropriate support staff include, at a minimum, the ISSO and the\nDBA/SA.\n\n    A failure of database auditing will result in either the database\ncontinuing to function without auditing or in a complete halt to database\noperations. When audit processing fails, appropriate personnel must be alerted\nimmediately to avoid further downtime or unaudited transactions.\n\n    Alerts provide organizations with urgent messages. Real-time alerts provide\nthese messages immediately (i.e., the time from event detection to alert occurs\nin seconds or less).","descriptions":[{"label":"default","data":"It is critical for the appropriate personnel to be aware if a system\nis at risk of failing to process audit logs as required. Without a real-time\nalert, security personnel may be unaware of an impending failure of the audit\ncapability, and system operation may be adversely affected.\n\n    The appropriate support staff include, at a minimum, the ISSO and the\nDBA/SA.\n\n    A failure of database auditing will result in either the database\ncontinuing to function without auditing or in a complete halt to database\noperations. When audit processing fails, appropriate personnel must be alerted\nimmediately to avoid further downtime or unaudited transactions.\n\n    Alerts provide organizations with urgent messages. Real-time alerts provide\nthese messages immediately (i.e., the time from event detection to alert occurs\nin seconds or less)."},{"label":"check","data":"Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to provide an immediate real-time alert\nto appropriate support staff of all audit log failures.\n\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \"write_delay = \" <path to default.ini>\n    if line does not exist or is not set to 0, this is a finding.\n\n    If it is not set to provide an immediate real-time alert to appropriate\nsupport staff of all audit log failures, this is a finding."},{"label":"fix","data":"Configure CouchDB log records to record an immediate real-time alert to\nappropriate support staff of all audit log failures.\n\n    # find . -name \"default.ini\"\n    # set write_delay = 0"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000360-DB-000320","gid":"V-58059","rid":"SV-72489r2_rule","stig_id":"SRG-APP-000360-DB-000320","fix_id":null,"cci":["CCI-001858"],"nist":["AU-5 (2)","Rev_4"]},"code":"control \"V-58059\" do\n  title \"The DBMS must provide an immediate real-time alert to appropriate\nsupport staff of all audit log failures. \"\n  desc  \"It is critical for the appropriate personnel to be aware if a system\nis at risk of failing to process audit logs as required. Without a real-time\nalert, security personnel may be unaware of an impending failure of the audit\ncapability, and system operation may be adversely affected.\n\n    The appropriate support staff include, at a minimum, the ISSO and the\nDBA/SA.\n\n    A failure of database auditing will result in either the database\ncontinuing to function without auditing or in a complete halt to database\noperations. When audit processing fails, appropriate personnel must be alerted\nimmediately to avoid further downtime or unaudited transactions.\n\n    Alerts provide organizations with urgent messages. Real-time alerts provide\nthese messages immediately (i.e., the time from event detection to alert occurs\nin seconds or less).\n  \"\n  desc  \"check\", \"\n    Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to provide an immediate real-time alert\nto appropriate support staff of all audit log failures.\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \\\"write_delay = \\\" <path to default.ini>\n    if line does not exist or is not set to 0, this is a finding.\n\n    If it is not set to provide an immediate real-time alert to appropriate\nsupport staff of all audit log failures, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB log records to record an immediate real-time alert to\nappropriate support staff of all audit log failures.\n\n    # find . -name \\\"default.ini\\\"\n    # set write_delay = 0\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000360-DB-000320\"\n  tag \"gid\": \"V-58059\"\n  tag \"rid\": \"SV-72489r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000360-DB-000320\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001858\"]\n  tag \"nist\": [\"AU-5 (2)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58059.rb"},"waiver_data":{},"results":[]},{"id":"V-58061","title":"The DBMS must be configurable to overwrite audit log records, oldest\nfirst (First-In-First-Out - FIFO), in the event of unavailability of space for\nmore audit log records.","desc":"It is critical that when the DBMS is at risk of failing to process\naudit logs as required, it take action to mitigate the failure. Audit\nprocessing failures include: software/hardware errors; failures in the audit\ncapturing mechanisms; and audit storage capacity being reached or exceeded.\nResponses to audit failure depend upon the nature of the failure mode.\n\n    When availability is an overriding concern, approved actions in response to\nan audit failure are as follows:\n\n    (i) If the failure was caused by the lack of audit record storage capacity,\nthe DBMS must continue generating audit records, if possible (automatically\nrestarting the audit service if necessary), overwriting the oldest audit\nrecords in a first-in-first-out manner.\n\n    (ii) If audit records are sent to a centralized collection server and\ncommunication with this server is lost or the server fails, the DBMS must queue\naudit records locally until communication is restored or until the audit\nrecords are retrieved manually. Upon restoration of the connection to the\ncentralized collection server, action should be taken to synchronize the local\naudit data with the collection server.\n\n    Systems where availability is paramount will most likely be MAC I; the\nfinal determination is the prerogative of the application owner, subject to\nAuthorizing Official concurrence. In any case, sufficient auditing resources\nmust be allocated to avoid audit data loss in all but the most extreme\nsituations.","descriptions":[{"label":"default","data":"It is critical that when the DBMS is at risk of failing to process\naudit logs as required, it take action to mitigate the failure. Audit\nprocessing failures include: software/hardware errors; failures in the audit\ncapturing mechanisms; and audit storage capacity being reached or exceeded.\nResponses to audit failure depend upon the nature of the failure mode.\n\n    When availability is an overriding concern, approved actions in response to\nan audit failure are as follows:\n\n    (i) If the failure was caused by the lack of audit record storage capacity,\nthe DBMS must continue generating audit records, if possible (automatically\nrestarting the audit service if necessary), overwriting the oldest audit\nrecords in a first-in-first-out manner.\n\n    (ii) If audit records are sent to a centralized collection server and\ncommunication with this server is lost or the server fails, the DBMS must queue\naudit records locally until communication is restored or until the audit\nrecords are retrieved manually. Upon restoration of the connection to the\ncentralized collection server, action should be taken to synchronize the local\naudit data with the collection server.\n\n    Systems where availability is paramount will most likely be MAC I; the\nfinal determination is the prerogative of the application owner, subject to\nAuthorizing Official concurrence. In any case, sufficient auditing resources\nmust be allocated to avoid audit data loss in all but the most extreme\nsituations."},{"label":"check","data":"If the application owner has determined that the need for system\navailability does not outweigh the need for a complete audit trail, this is not\napplicable (NA).\n\n    Review CouchDB settings and/or documentation to determine whether the\nsystem is capable of continuing to generate audit records, overwriting the\noldest existing records, in the case of an auditing failure. If it is not, this\nis a finding.\n\n    If the system is capable of continuing to generate audit records upon audit\nfailure but is not configured to do so, this is a finding."},{"label":"fix","data":"Deploy a DBMS capable of continuing to generate audit records upon audit\nfailure.\n\n    Configure the system to continue to generate audit records, overwriting the\noldest existing records, in the case of an auditing failure."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000109-DB-000321","gid":"V-58061","rid":"SV-72491r1_rule","stig_id":"SRG-APP-000109-DB-000321","fix_id":null,"cci":["CCI-000140"],"nist":["AU-5 b","Rev_4"]},"code":"control \"V-58061\" do\n  title \"The DBMS must be configurable to overwrite audit log records, oldest\nfirst (First-In-First-Out - FIFO), in the event of unavailability of space for\nmore audit log records.\"\n  desc  \"It is critical that when the DBMS is at risk of failing to process\naudit logs as required, it take action to mitigate the failure. Audit\nprocessing failures include: software/hardware errors; failures in the audit\ncapturing mechanisms; and audit storage capacity being reached or exceeded.\nResponses to audit failure depend upon the nature of the failure mode.\n\n    When availability is an overriding concern, approved actions in response to\nan audit failure are as follows:\n\n    (i) If the failure was caused by the lack of audit record storage capacity,\nthe DBMS must continue generating audit records, if possible (automatically\nrestarting the audit service if necessary), overwriting the oldest audit\nrecords in a first-in-first-out manner.\n\n    (ii) If audit records are sent to a centralized collection server and\ncommunication with this server is lost or the server fails, the DBMS must queue\naudit records locally until communication is restored or until the audit\nrecords are retrieved manually. Upon restoration of the connection to the\ncentralized collection server, action should be taken to synchronize the local\naudit data with the collection server.\n\n    Systems where availability is paramount will most likely be MAC I; the\nfinal determination is the prerogative of the application owner, subject to\nAuthorizing Official concurrence. In any case, sufficient auditing resources\nmust be allocated to avoid audit data loss in all but the most extreme\nsituations.\n  \"\n  desc  \"check\", \"\n     If the application owner has determined that the need for system\navailability does not outweigh the need for a complete audit trail, this is not\napplicable (NA).\n\n    Review CouchDB settings and/or documentation to determine whether the\nsystem is capable of continuing to generate audit records, overwriting the\noldest existing records, in the case of an auditing failure. If it is not, this\nis a finding.\n\n    If the system is capable of continuing to generate audit records upon audit\nfailure but is not configured to do so, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Deploy a DBMS capable of continuing to generate audit records upon audit\nfailure.\n\n    Configure the system to continue to generate audit records, overwriting the\noldest existing records, in the case of an auditing failure.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000109-DB-000321\"\n  tag \"gid\": \"V-58061\"\n  tag \"rid\": \"SV-72491r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000109-DB-000321\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000140\"]\n  tag \"nist\": [\"AU-5 b\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58061.rb"},"waiver_data":{},"results":[]},{"id":"V-58063","title":"The DBMS must record time stamps, in audit records and application\ndata, that can be mapped to Coordinated Universal Time (UTC, formerly GMT).","desc":"If time stamps are not consistently applied and there is no common\ntime reference, it is difficult to perform forensic analysis.\n\n    Time stamps generated by the DBMS must include date and time. Time is\ncommonly expressed in Coordinated Universal Time (UTC), a modern continuation\nof Greenwich Mean Time (GMT), or local time with an offset from UTC.\n\n    Some DBMS products offer a data type called TIMESTAMP that is not a\nrepresentation of date and time. Rather, it is a database state counter and\ndoes not correspond to calendar and clock time. This requirement does not refer\nto that meaning of TIMESTAMP.","descriptions":[{"label":"default","data":"If time stamps are not consistently applied and there is no common\ntime reference, it is difficult to perform forensic analysis.\n\n    Time stamps generated by the DBMS must include date and time. Time is\ncommonly expressed in Coordinated Universal Time (UTC), a modern continuation\nof Greenwich Mean Time (GMT), or local time with an offset from UTC.\n\n    Some DBMS products offer a data type called TIMESTAMP that is not a\nrepresentation of date and time. Rather, it is a database state counter and\ndoes not correspond to calendar and clock time. This requirement does not refer\nto that meaning of TIMESTAMP."},{"label":"check","data":"Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to provide record time stamps, in audit\nrecords and application data, that can be mapped to Coordinated Universal Time\n(UTC, formerly GMT).\n\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"writer = \" <path to default.ini>\n    if line is equal to journald, this is a finding.\n\n    If it is not set to provide record time stamps, in audit records and\napplication data, that can be mapped to Coordinated Universal Time (UTC,\nformerly GMT), this is a finding."},{"label":"fix","data":"If applicable remove or comment out the line writer = journald\nwriter needs to be set equal to file\n\nFile variable needs to be set to path to where log file will be stored.\n# find . -name \"default.ini\"\n#writer = <path to log file>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000374-DB-000322","gid":"V-58063","rid":"SV-72493r1_rule","stig_id":"SRG-APP-000374-DB-000322","fix_id":null,"cci":["CCI-001890"],"nist":["AU-8 b","Rev_4"]},"code":"control \"V-58063\" do\n  title \"The DBMS must record time stamps, in audit records and application\ndata, that can be mapped to Coordinated Universal Time (UTC, formerly GMT).\"\n  desc  \"If time stamps are not consistently applied and there is no common\ntime reference, it is difficult to perform forensic analysis.\n\n    Time stamps generated by the DBMS must include date and time. Time is\ncommonly expressed in Coordinated Universal Time (UTC), a modern continuation\nof Greenwich Mean Time (GMT), or local time with an offset from UTC.\n\n    Some DBMS products offer a data type called TIMESTAMP that is not a\nrepresentation of date and time. Rather, it is a database state counter and\ndoes not correspond to calendar and clock time. This requirement does not refer\nto that meaning of TIMESTAMP.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to provide record time stamps, in audit\nrecords and application data, that can be mapped to Coordinated Universal Time\n(UTC, formerly GMT).\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"writer = \\\" <path to default.ini>\n    if line is equal to journald, this is a finding.\n\n    If it is not set to provide record time stamps, in audit records and\napplication data, that can be mapped to Coordinated Universal Time (UTC,\nformerly GMT), this is a finding.\n  \"\n  desc  \"fix\", \"\n    If applicable remove or comment out the line writer = journald\n    writer needs to be set equal to file\n\n    File variable needs to be set to path to where log file will be stored.\n    # find . -name \\\"default.ini\\\"\n    #writer = <path to log file>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000374-DB-000322\"\n  tag \"gid\": \"V-58063\"\n  tag \"rid\": \"SV-72493r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000374-DB-000322\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001890\"]\n  tag \"nist\": [\"AU-8 b\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58063.rb"},"waiver_data":{},"results":[]},{"id":"V-58065","title":"The DBMS must generate time stamps, for audit records and application\ndata, with a minimum granularity of one second.","desc":"Without sufficient granularity of time stamps, it is not possible to\nadequately determine the chronological order of records.\n\n    Time stamps generated by the DBMS must include date and time. Granularity\nof time measurements refers to the precision available in time stamp values.\nGranularity coarser than one second is not sufficient for audit trail purposes.\nTime stamp values are typically presented with three or more decimal places of\nseconds; however, the actual granularity may be coarser than the apparent\nprecision. For example, SQL Server's GETDATE()/CURRENT_TMESTAMP values are\npresented to three decimal places, but the granularity is not one millisecond:\nit is about 1/300 of a second.\n\n    Some DBMS products offer a data type called TIMESTAMP that is not a\nrepresentation of date and time. Rather, it is a database state counter and\ndoes not correspond to calendar and clock time. This requirement does not refer\nto that meaning of TIMESTAMP.","descriptions":[{"label":"default","data":"Without sufficient granularity of time stamps, it is not possible to\nadequately determine the chronological order of records.\n\n    Time stamps generated by the DBMS must include date and time. Granularity\nof time measurements refers to the precision available in time stamp values.\nGranularity coarser than one second is not sufficient for audit trail purposes.\nTime stamp values are typically presented with three or more decimal places of\nseconds; however, the actual granularity may be coarser than the apparent\nprecision. For example, SQL Server's GETDATE()/CURRENT_TMESTAMP values are\npresented to three decimal places, but the granularity is not one millisecond:\nit is about 1/300 of a second.\n\n    Some DBMS products offer a data type called TIMESTAMP that is not a\nrepresentation of date and time. Rather, it is a database state counter and\ndoes not correspond to calendar and clock time. This requirement does not refer\nto that meaning of TIMESTAMP."},{"label":"check","data":"Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to generate time stamps, for audit\nrecords and application data, with a minimum granularity of one second.\t\n\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"writer = \" <path to default.ini>\n    if line is equal to journald, this is a finding.\n\n    If it is not set to generate time stamps, for audit records and application\ndata, with a minimum granularity of one second, this is a finding."},{"label":"fix","data":"If applicable remove or comment out the line writer = journald\nwriter needs to be set equal to file\nfile variable needs to be set to path to where log file will be stored.\n# set writer = <path to log file>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000375-DB-000323","gid":"V-58065","rid":"SV-72495r1_rule","stig_id":"SRG-APP-000375-DB-000323","fix_id":null,"cci":["CCI-001889"],"nist":["AU-8 b","Rev_4"]},"code":"control \"V-58065\" do\n  title \"The DBMS must generate time stamps, for audit records and application\ndata, with a minimum granularity of one second.\"\n  desc  \"Without sufficient granularity of time stamps, it is not possible to\nadequately determine the chronological order of records.\n\n    Time stamps generated by the DBMS must include date and time. Granularity\nof time measurements refers to the precision available in time stamp values.\nGranularity coarser than one second is not sufficient for audit trail purposes.\nTime stamp values are typically presented with three or more decimal places of\nseconds; however, the actual granularity may be coarser than the apparent\nprecision. For example, SQL Server's GETDATE()/CURRENT_TMESTAMP values are\npresented to three decimal places, but the granularity is not one millisecond:\nit is about 1/300 of a second.\n\n    Some DBMS products offer a data type called TIMESTAMP that is not a\nrepresentation of date and time. Rather, it is a database state counter and\ndoes not correspond to calendar and clock time. This requirement does not refer\nto that meaning of TIMESTAMP.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to generate time stamps, for audit\nrecords and application data, with a minimum granularity of one second.\\t\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"writer = \\\" <path to default.ini>\n    if line is equal to journald, this is a finding.\n\n    If it is not set to generate time stamps, for audit records and application\ndata, with a minimum granularity of one second, this is a finding.\n  \"\n  desc  \"fix\", \"\n    If applicable remove or comment out the line writer = journald\n    writer needs to be set equal to file\n    file variable needs to be set to path to where log file will be stored.\n    # set writer = <path to log file>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000375-DB-000323\"\n  tag \"gid\": \"V-58065\"\n  tag \"rid\": \"SV-72495r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000375-DB-000323\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001889\"]\n  tag \"nist\": [\"AU-8 b\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58065.rb"},"waiver_data":{},"results":[]},{"id":"V-58067","title":"The DBMS must provide the means for individuals in authorized roles to\nchange the auditing to be performed on all application components, based on all\nselectable event criteria within organization-defined time thresholds.","desc":"If authorized individuals do not have the ability to modify auditing\nparameters in response to a changing threat environment, the organization may\nnot be able to effectively respond, and important forensic information may be\nlost.\n\n    This requirement enables organizations to extend or limit auditing as\nnecessary to meet organizational requirements. Auditing that is limited to\nconserve information system resources may be extended to address certain threat\nsituations. In addition, auditing may be limited to a specific set of events to\nfacilitate audit reduction, analysis, and reporting. Organizations can\nestablish time thresholds in which audit actions are changed, for example, near\nreal time, within minutes, or within hours.","descriptions":[{"label":"default","data":"If authorized individuals do not have the ability to modify auditing\nparameters in response to a changing threat environment, the organization may\nnot be able to effectively respond, and important forensic information may be\nlost.\n\n    This requirement enables organizations to extend or limit auditing as\nnecessary to meet organizational requirements. Auditing that is limited to\nconserve information system resources may be extended to address certain threat\nsituations. In addition, auditing may be limited to a specific set of events to\nfacilitate audit reduction, analysis, and reporting. Organizations can\nestablish time thresholds in which audit actions are changed, for example, near\nreal time, within minutes, or within hours."},{"label":"check","data":"To list the privileges, as the database administrator, run the following:\n     #GET /db/_security\n    If the privileges are exceed what user and groups should have, this is a\nfinding."},{"label":"fix","data":"Use the following command to set privileges correctly:\n\n    # PUT /{db}/_security\n\n    Example request:\n    shell> curl http://localhost:5984/pineapple/_security -X PUT -H\n'content-type: application/json' -H 'accept: application/json' -d\n'{\"admins\":{\"names\":[\"superuser\"],\"roles\":[\"admins\"]},\"members\":{\"names\":\n[\"user1\",\"user2\"],\"roles\": [\"developers\"]}}'"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000353-DB-000324","gid":"V-58067","rid":"SV-72497r1_rule","stig_id":"SRG-APP-000353-DB-000324","fix_id":null,"cci":["CCI-001914"],"nist":["AU-12 (3)","Rev_4"]},"code":"control \"V-58067\" do\n  title \"The DBMS must provide the means for individuals in authorized roles to\nchange the auditing to be performed on all application components, based on all\nselectable event criteria within organization-defined time thresholds.\"\n  desc  \"If authorized individuals do not have the ability to modify auditing\nparameters in response to a changing threat environment, the organization may\nnot be able to effectively respond, and important forensic information may be\nlost.\n\n    This requirement enables organizations to extend or limit auditing as\nnecessary to meet organizational requirements. Auditing that is limited to\nconserve information system resources may be extended to address certain threat\nsituations. In addition, auditing may be limited to a specific set of events to\nfacilitate audit reduction, analysis, and reporting. Organizations can\nestablish time thresholds in which audit actions are changed, for example, near\nreal time, within minutes, or within hours.\n  \"\n  desc  \"check\", \"\n    To list the privileges, as the database administrator, run the following:\n     #GET /db/_security\n    If the privileges are exceed what user and groups should have, this is a\nfinding.\n  \"\n  desc  \"fix\", \"\n    Use the following command to set privileges correctly:\n\n    # PUT /{db}/_security\n\n    Example request:\n    shell> curl http://localhost:5984/pineapple/_security -X PUT -H\n'content-type: application/json' -H 'accept: application/json' -d\n'{\\\"admins\\\":{\\\"names\\\":[\\\"superuser\\\"],\\\"roles\\\":[\\\"admins\\\"]},\\\"members\\\":{\\\"names\\\":\n[\\\"user1\\\",\\\"user2\\\"],\\\"roles\\\": [\\\"developers\\\"]}}'\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000353-DB-000324\"\n  tag \"gid\": \"V-58067\"\n  tag \"rid\": \"SV-72497r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000353-DB-000324\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001914\"]\n  tag \"nist\": [\"AU-12 (3)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58067.rb"},"waiver_data":{},"results":[]},{"id":"V-58069","title":"The DBMS must be able to generate audit records when unsuccessful\nattempts to retrieve privileges/permissions occur.","desc":"Under some circumstances, it may be useful to monitor who/what is\nreading privilege/permission/role information. Therefore, it must be possible\nto configure auditing to do this. DBMSs typically make such information\navailable through views or functions.\n\n    This requirement addresses explicit requests for privilege/permission/role\nmembership information. It does not refer to the implicit retrieval of\nprivileges/permissions/role memberships that the DBMS continually performs to\ndetermine if any and every action on the database is permitted.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.","descriptions":[{"label":"default","data":"Under some circumstances, it may be useful to monitor who/what is\nreading privilege/permission/role information. Therefore, it must be possible\nto configure auditing to do this. DBMSs typically make such information\navailable through views or functions.\n\n    This requirement addresses explicit requests for privilege/permission/role\nmembership information. It does not refer to the implicit retrieval of\nprivileges/permissions/role memberships that the DBMS continually performs to\ndetermine if any and every action on the database is permitted.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones."},{"label":"check","data":"Review the CouchDB documentation to verify that audit records can be\nproduced when unsuccessful attempts to retrieve privileges/permissions occur.\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records  when unsuccessful attempts to\nretrieve privileges/permissions occur, this is a finding."},{"label":"fix","data":"Configure CouchDB to set to log audit records when unsuccessful attempts to\nretrieve privileges/permissions occur.\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000091-DB-000325","gid":"V-58069","rid":"SV-72499r1_rule","stig_id":"SRG-APP-000091-DB-000325","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58069\" do\n  title \"The DBMS must be able to generate audit records when unsuccessful\nattempts to retrieve privileges/permissions occur.\"\n  desc  \"Under some circumstances, it may be useful to monitor who/what is\nreading privilege/permission/role information. Therefore, it must be possible\nto configure auditing to do this. DBMSs typically make such information\navailable through views or functions.\n\n    This requirement addresses explicit requests for privilege/permission/role\nmembership information. It does not refer to the implicit retrieval of\nprivileges/permissions/role memberships that the DBMS continually performs to\ndetermine if any and every action on the database is permitted.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB documentation to verify that audit records can be\nproduced when unsuccessful attempts to retrieve privileges/permissions occur.\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records  when unsuccessful attempts to\nretrieve privileges/permissions occur, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to set to log audit records when unsuccessful attempts to\nretrieve privileges/permissions occur.\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000091-DB-000325\"\n  tag \"gid\": \"V-58069\"\n  tag \"rid\": \"SV-72499r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000091-DB-000325\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58069.rb"},"waiver_data":{},"results":[]},{"id":"V-58071","title":"The DBMS must generate audit records when privileges/permissions are\nadded.","desc":"Changes in the permissions, privileges, and roles granted to users and\nroles must be tracked. Without an audit trail, unauthorized elevation or\nrestriction of privileges could go undetected. Elevated privileges give users\naccess to information and functionality that they should not have; restricted\nprivileges wrongly deny access to authorized users.\n\n    In an SQL environment, adding permissions is typically done via the GRANT\ncommand, or, in the negative, the DENY command.","descriptions":[{"label":"default","data":"Changes in the permissions, privileges, and roles granted to users and\nroles must be tracked. Without an audit trail, unauthorized elevation or\nrestriction of privileges could go undetected. Elevated privileges give users\naccess to information and functionality that they should not have; restricted\nprivileges wrongly deny access to authorized users.\n\n    In an SQL environment, adding permissions is typically done via the GRANT\ncommand, or, in the negative, the DENY command."},{"label":"check","data":"Review the CouchDB documentation to verify that audit records can be\nproduced when privileges/permissions/role memberships are added.\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"level =\" <path to default.ini>\n\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records when privileges/ permissions are\nadded, this is a finding."},{"label":"fix","data":"Configure CouchDB to set to log audit records when privileges/ permissions\nare added.\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000495-DB-000326","gid":"V-58071","rid":"SV-72501r2_rule","stig_id":"SRG-APP-000495-DB-000326","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58071\" do\n  title \"The DBMS must generate audit records when privileges/permissions are\nadded.\"\n  desc  \"Changes in the permissions, privileges, and roles granted to users and\nroles must be tracked. Without an audit trail, unauthorized elevation or\nrestriction of privileges could go undetected. Elevated privileges give users\naccess to information and functionality that they should not have; restricted\nprivileges wrongly deny access to authorized users.\n\n    In an SQL environment, adding permissions is typically done via the GRANT\ncommand, or, in the negative, the DENY command.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB documentation to verify that audit records can be\nproduced when privileges/permissions/role memberships are added.\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"level =\\\" <path to default.ini>\n\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records when privileges/ permissions are\nadded, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to set to log audit records when privileges/ permissions\nare added.\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000495-DB-000326\"\n  tag \"gid\": \"V-58071\"\n  tag \"rid\": \"SV-72501r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000495-DB-000326\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58071.rb"},"waiver_data":{},"results":[]},{"id":"V-58073","title":"The DBMS must generate audit records when unsuccessful attempts to add\nprivileges/permissions occur.","desc":"Failed attempts to change the permissions, privileges, and roles\ngranted to users and roles must be tracked. Without an audit trail,\nunauthorized attempts to elevate or restrict privileges could go undetected.\n\n    In an SQL environment, adding permissions is typically done via the GRANT\ncommand, or, in the negative, the DENY command.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.","descriptions":[{"label":"default","data":"Failed attempts to change the permissions, privileges, and roles\ngranted to users and roles must be tracked. Without an audit trail,\nunauthorized attempts to elevate or restrict privileges could go undetected.\n\n    In an SQL environment, adding permissions is typically done via the GRANT\ncommand, or, in the negative, the DENY command.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones."},{"label":"check","data":"Review the CouchDB documentation to verify that audit records can be\nproduced  when unsuccessful attempts to add privileges/permissions occur.\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records  when unsuccessful attempts to add\nprivileges/permissions occur, this is a finding."},{"label":"fix","data":"Configure CouchDB to set to log audit records  when unsuccessful attempts\nto add privileges/permissions occur.\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000495-DB-000327","gid":"V-58073","rid":"SV-72503r2_rule","stig_id":"SRG-APP-000495-DB-000327","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58073\" do\n  title \"The DBMS must generate audit records when unsuccessful attempts to add\nprivileges/permissions occur.\"\n  desc  \"Failed attempts to change the permissions, privileges, and roles\ngranted to users and roles must be tracked. Without an audit trail,\nunauthorized attempts to elevate or restrict privileges could go undetected.\n\n    In an SQL environment, adding permissions is typically done via the GRANT\ncommand, or, in the negative, the DENY command.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB documentation to verify that audit records can be\nproduced  when unsuccessful attempts to add privileges/permissions occur.\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records  when unsuccessful attempts to add\nprivileges/permissions occur, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to set to log audit records  when unsuccessful attempts\nto add privileges/permissions occur.\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000495-DB-000327\"\n  tag \"gid\": \"V-58073\"\n  tag \"rid\": \"SV-72503r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000495-DB-000327\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58073.rb"},"waiver_data":{},"results":[]},{"id":"V-58075","title":"The DBMS must generate audit records when privileges/permissions are\nmodified.","desc":"Changes in the permissions, privileges, and roles granted to users and\nroles must be tracked. Without an audit trail, unauthorized elevation or\nrestriction of privileges could go undetected. Elevated privileges give users\naccess to information and functionality that they should not have; restricted\nprivileges wrongly deny access to authorized users.\n\n    In an SQL environment, modifying permissions is typically done via the\nGRANT, REVOKE, and DENY commands.","descriptions":[{"label":"default","data":"Changes in the permissions, privileges, and roles granted to users and\nroles must be tracked. Without an audit trail, unauthorized elevation or\nrestriction of privileges could go undetected. Elevated privileges give users\naccess to information and functionality that they should not have; restricted\nprivileges wrongly deny access to authorized users.\n\n    In an SQL environment, modifying permissions is typically done via the\nGRANT, REVOKE, and DENY commands."},{"label":"check","data":"Review the CouchDB documentation to verify that audit records can be\nproduced  when privileges/permissions are modified.\n    # find . -name \"default.ini\"\n\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records when privileges/permissions are\nmodified, this is a finding."},{"label":"fix","data":"Configure CouchDB to set to log audit records when privileges/permissions\nare modified.\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000495-DB-000328","gid":"V-58075","rid":"SV-72505r2_rule","stig_id":"SRG-APP-000495-DB-000328","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58075\" do\n  title \"The DBMS must generate audit records when privileges/permissions are\nmodified.\"\n  desc  \"Changes in the permissions, privileges, and roles granted to users and\nroles must be tracked. Without an audit trail, unauthorized elevation or\nrestriction of privileges could go undetected. Elevated privileges give users\naccess to information and functionality that they should not have; restricted\nprivileges wrongly deny access to authorized users.\n\n    In an SQL environment, modifying permissions is typically done via the\nGRANT, REVOKE, and DENY commands.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB documentation to verify that audit records can be\nproduced  when privileges/permissions are modified.\n    # find . -name \\\"default.ini\\\"\n\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records when privileges/permissions are\nmodified, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to set to log audit records when privileges/permissions\nare modified.\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000495-DB-000328\"\n  tag \"gid\": \"V-58075\"\n  tag \"rid\": \"SV-72505r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000495-DB-000328\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58075.rb"},"waiver_data":{},"results":[]},{"id":"V-58077","title":"The DBMS must generate audit records when unsuccessful attempts to\nmodify privileges/permissions occur.","desc":"Failed attempts to change the permissions, privileges, and roles\ngranted to users and roles must be tracked. Without an audit trail,\nunauthorized attempts to elevate or restrict privileges could go undetected.\n\n    In an SQL environment, modifying permissions is typically done via the\nGRANT, REVOKE, and DENY commands.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.","descriptions":[{"label":"default","data":"Failed attempts to change the permissions, privileges, and roles\ngranted to users and roles must be tracked. Without an audit trail,\nunauthorized attempts to elevate or restrict privileges could go undetected.\n\n    In an SQL environment, modifying permissions is typically done via the\nGRANT, REVOKE, and DENY commands.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones."},{"label":"check","data":"Review the CouchDB documentation to verify that audit records can be\nproduced when unsuccessful attempts to modify privileges/permissions occur.\n    # find . -name \"default.ini\"\n\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records when unsuccessful attempts to modify\nprivileges/permissions occur, this is a finding."},{"label":"fix","data":"Configure CouchDB to set to log audit records when unsuccessful attempts to\nmodify privileges/permissions occur.\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000495-DB-000329","gid":"V-58077","rid":"SV-72507r2_rule","stig_id":"SRG-APP-000495-DB-000329","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58077\" do\n  title \"The DBMS must generate audit records when unsuccessful attempts to\nmodify privileges/permissions occur.\"\n  desc  \"Failed attempts to change the permissions, privileges, and roles\ngranted to users and roles must be tracked. Without an audit trail,\nunauthorized attempts to elevate or restrict privileges could go undetected.\n\n    In an SQL environment, modifying permissions is typically done via the\nGRANT, REVOKE, and DENY commands.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB documentation to verify that audit records can be\nproduced when unsuccessful attempts to modify privileges/permissions occur.\n    # find . -name \\\"default.ini\\\"\n\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records when unsuccessful attempts to modify\nprivileges/permissions occur, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to set to log audit records when unsuccessful attempts to\nmodify privileges/permissions occur.\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000495-DB-000329\"\n  tag \"gid\": \"V-58077\"\n  tag \"rid\": \"SV-72507r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000495-DB-000329\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58077.rb"},"waiver_data":{},"results":[]},{"id":"V-58079","title":"The DBMS must generate audit records when privileges/permissions are\ndeleted.","desc":"Changes in the permissions, privileges, and roles granted to users and\nroles must be tracked. Without an audit trail, unauthorized elevation or\nrestriction of privileges could go undetected. Elevated privileges give users\naccess to information and functionality that they should not have; restricted\nprivileges wrongly deny access to authorized users.\n\n    In an SQL environment, deleting permissions is typically done via the\nREVOKE or DENY command.","descriptions":[{"label":"default","data":"Changes in the permissions, privileges, and roles granted to users and\nroles must be tracked. Without an audit trail, unauthorized elevation or\nrestriction of privileges could go undetected. Elevated privileges give users\naccess to information and functionality that they should not have; restricted\nprivileges wrongly deny access to authorized users.\n\n    In an SQL environment, deleting permissions is typically done via the\nREVOKE or DENY command."},{"label":"check","data":"Review the CouchDB documentation to verify that audit records can be\nproduced when privileges/permissions are deleted.\n    # find . -name \"default.ini\"\n\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records when privileges/permissions are\ndeleted."},{"label":"fix","data":"Configure CouchDB to set to log audit records when privileges/permissions\nare deleted.\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000499-DB-000330","gid":"V-58079","rid":"SV-72509r2_rule","stig_id":"SRG-APP-000499-DB-000330","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58079\" do\n  title \"The DBMS must generate audit records when privileges/permissions are\ndeleted.\"\n  desc  \"Changes in the permissions, privileges, and roles granted to users and\nroles must be tracked. Without an audit trail, unauthorized elevation or\nrestriction of privileges could go undetected. Elevated privileges give users\naccess to information and functionality that they should not have; restricted\nprivileges wrongly deny access to authorized users.\n\n    In an SQL environment, deleting permissions is typically done via the\nREVOKE or DENY command.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB documentation to verify that audit records can be\nproduced when privileges/permissions are deleted.\n    # find . -name \\\"default.ini\\\"\n\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records when privileges/permissions are\ndeleted.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to set to log audit records when privileges/permissions\nare deleted.\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000499-DB-000330\"\n  tag \"gid\": \"V-58079\"\n  tag \"rid\": \"SV-72509r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000499-DB-000330\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58079.rb"},"waiver_data":{},"results":[]},{"id":"V-58081","title":"The DBMS must generate audit records when unsuccessful attempts to\ndelete privileges/permissions occur.","desc":"Failed attempts to change the permissions, privileges, and roles\ngranted to users and roles must be tracked. Without an audit trail,\nunauthorized attempts to elevate or restrict privileges could go undetected.\n\n    In an SQL environment, deleting permissions is typically done via the\nREVOKE or DENY command.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.","descriptions":[{"label":"default","data":"Failed attempts to change the permissions, privileges, and roles\ngranted to users and roles must be tracked. Without an audit trail,\nunauthorized attempts to elevate or restrict privileges could go undetected.\n\n    In an SQL environment, deleting permissions is typically done via the\nREVOKE or DENY command.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones."},{"label":"check","data":"Review the CouchDB documentation to verify that audit records can be\nproduced when unsuccessful attempts to delete privileges/permissions occur.\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records when unsuccessful attempts to delete\nprivileges/permissions occur."},{"label":"fix","data":"Configure CouchDB to set to log audit records when unsuccessful attempts to\ndelete privileges/permissions occur.\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000499-DB-000331","gid":"V-58081","rid":"SV-72511r2_rule","stig_id":"SRG-APP-000499-DB-000331","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58081\" do\n  title \"The DBMS must generate audit records when unsuccessful attempts to\ndelete privileges/permissions occur.\"\n  desc  \"Failed attempts to change the permissions, privileges, and roles\ngranted to users and roles must be tracked. Without an audit trail,\nunauthorized attempts to elevate or restrict privileges could go undetected.\n\n    In an SQL environment, deleting permissions is typically done via the\nREVOKE or DENY command.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB documentation to verify that audit records can be\nproduced when unsuccessful attempts to delete privileges/permissions occur.\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records when unsuccessful attempts to delete\nprivileges/permissions occur.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to set to log audit records when unsuccessful attempts to\ndelete privileges/permissions occur.\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000499-DB-000331\"\n  tag \"gid\": \"V-58081\"\n  tag \"rid\": \"SV-72511r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000499-DB-000331\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58081.rb"},"waiver_data":{},"results":[]},{"id":"V-58083","title":"The DBMS must be able to generate audit records when security objects\nare accessed.","desc":"Changes to the security configuration must be tracked.\n\n    This requirement applies to situations where security data is retrieved or\nmodified via data manipulation operations, as opposed to via specialized\nsecurity functionality.\n\n    In an SQL environment, types of access include, but are not necessarily\nlimited to:\n    SELECT\n    INSERT\n    UPDATE\n    DELETE\n    EXECUTE","descriptions":[{"label":"default","data":"Changes to the security configuration must be tracked.\n\n    This requirement applies to situations where security data is retrieved or\nmodified via data manipulation operations, as opposed to via specialized\nsecurity functionality.\n\n    In an SQL environment, types of access include, but are not necessarily\nlimited to:\n    SELECT\n    INSERT\n    UPDATE\n    DELETE\n    EXECUTE"},{"label":"check","data":"Review the CouchDB documentation to verify that audit records can be\nproduced when security objects are accessed.\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records when security objects are accessed,\nthis is a finding."},{"label":"fix","data":"Configure CouchDB to set to log audit records when security objects are\naccessed.\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000492-DB-000332","gid":"V-58083","rid":"SV-72513r1_rule","stig_id":"SRG-APP-000492-DB-000332","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58083\" do\n  title \"The DBMS must be able to generate audit records when security objects\nare accessed.\"\n  desc  \"Changes to the security configuration must be tracked.\n\n    This requirement applies to situations where security data is retrieved or\nmodified via data manipulation operations, as opposed to via specialized\nsecurity functionality.\n\n    In an SQL environment, types of access include, but are not necessarily\nlimited to:\n    SELECT\n    INSERT\n    UPDATE\n    DELETE\n    EXECUTE\n  \"\n  desc  \"check\", \"\n    Review the CouchDB documentation to verify that audit records can be\nproduced when security objects are accessed.\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records when security objects are accessed,\nthis is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to set to log audit records when security objects are\naccessed.\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000492-DB-000332\"\n  tag \"gid\": \"V-58083\"\n  tag \"rid\": \"SV-72513r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000492-DB-000332\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58083.rb"},"waiver_data":{},"results":[]},{"id":"V-58085","title":"The DBMS must generate audit records when unsuccessful attempts to\naccess security objects occur.","desc":"Changes to the security configuration must be tracked.\n\n    This requirement applies to situations where security data is retrieved or\nmodified via data manipulation operations, as opposed to via specialized\nsecurity functionality.\n\n    In an SQL environment, types of access include, but are not necessarily\nlimited to:\n    SELECT\n    INSERT\n    UPDATE\n    DELETE\n    EXECUTE\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.","descriptions":[{"label":"default","data":"Changes to the security configuration must be tracked.\n\n    This requirement applies to situations where security data is retrieved or\nmodified via data manipulation operations, as opposed to via specialized\nsecurity functionality.\n\n    In an SQL environment, types of access include, but are not necessarily\nlimited to:\n    SELECT\n    INSERT\n    UPDATE\n    DELETE\n    EXECUTE\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones."},{"label":"check","data":"Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records forunsuccessful\nattempts to access security objects occur.\n\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records for unsuccessful attempts to access\nsecurity objects occur., this is a finding."},{"label":"fix","data":"Configure CouchDB to generate audit records when unsuccessful attempts to\naccess security objects occur.\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000492-DB-000333","gid":"V-58085","rid":"SV-72515r1_rule","stig_id":"SRG-APP-000492-DB-000333","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58085\" do\n  title \"The DBMS must generate audit records when unsuccessful attempts to\naccess security objects occur.\"\n  desc  \"Changes to the security configuration must be tracked.\n\n    This requirement applies to situations where security data is retrieved or\nmodified via data manipulation operations, as opposed to via specialized\nsecurity functionality.\n\n    In an SQL environment, types of access include, but are not necessarily\nlimited to:\n    SELECT\n    INSERT\n    UPDATE\n    DELETE\n    EXECUTE\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records forunsuccessful\nattempts to access security objects occur.\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records for unsuccessful attempts to access\nsecurity objects occur., this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to generate audit records when unsuccessful attempts to\naccess security objects occur.\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000492-DB-000333\"\n  tag \"gid\": \"V-58085\"\n  tag \"rid\": \"SV-72515r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000492-DB-000333\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58085.rb"},"waiver_data":{},"results":[]},{"id":"V-58087","title":"The DBMS must generate audit records when security objects are\nmodified.","desc":"Changes in the database objects (tables, views, procedures, functions)\nthat record and control permissions, privileges, and roles granted to users and\nroles must be tracked. Without an audit trail, unauthorized changes to the\nsecurity subsystem could go undetected. The database could be severely\ncompromised or rendered inoperative.","descriptions":[{"label":"default","data":"Changes in the database objects (tables, views, procedures, functions)\nthat record and control permissions, privileges, and roles granted to users and\nroles must be tracked. Without an audit trail, unauthorized changes to the\nsecurity subsystem could go undetected. The database could be severely\ncompromised or rendered inoperative."},{"label":"check","data":"Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for when security\nobjects are modified.\n\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log when security objects are modified, this is a\nfinding."},{"label":"fix","data":"Configure CouchDB to generate audit records when security objects are\nmodified.\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000496-DB-000334","gid":"V-58087","rid":"SV-72517r1_rule","stig_id":"SRG-APP-000496-DB-000334","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58087\" do\n  title \"The DBMS must generate audit records when security objects are\nmodified.\"\n  desc  \"Changes in the database objects (tables, views, procedures, functions)\nthat record and control permissions, privileges, and roles granted to users and\nroles must be tracked. Without an audit trail, unauthorized changes to the\nsecurity subsystem could go undetected. The database could be severely\ncompromised or rendered inoperative.\"\n  desc  \"check\", \"\n    Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for when security\nobjects are modified.\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log when security objects are modified, this is a\nfinding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to generate audit records when security objects are\nmodified.\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000496-DB-000334\"\n  tag \"gid\": \"V-58087\"\n  tag \"rid\": \"SV-72517r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000496-DB-000334\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58087.rb"},"waiver_data":{},"results":[]},{"id":"V-58089","title":"The DBMS must generate audit records when unsuccessful attempts to\nmodify security objects occur.","desc":"Changes in the database objects (tables, views, procedures, functions)\nthat record and control permissions, privileges, and roles granted to users and\nroles must be tracked. Without an audit trail, unauthorized changes to the\nsecurity subsystem could go undetected. The database could be severely\ncompromised or rendered inoperative.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.","descriptions":[{"label":"default","data":"Changes in the database objects (tables, views, procedures, functions)\nthat record and control permissions, privileges, and roles granted to users and\nroles must be tracked. Without an audit trail, unauthorized changes to the\nsecurity subsystem could go undetected. The database could be severely\ncompromised or rendered inoperative.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones."},{"label":"check","data":"Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for when\nunsuccessful attempts to modify security objects occur.\n\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log  when unsuccessful attempts to modify security\nobjects occur, this is a finding."},{"label":"fix","data":"Configure CouchDB to generate audit records when unsuccessful attempts to\nmodify security objects occur.\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000496-DB-000335","gid":"V-58089","rid":"SV-72519r1_rule","stig_id":"SRG-APP-000496-DB-000335","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58089\" do\n  title \"The DBMS must generate audit records when unsuccessful attempts to\nmodify security objects occur.\"\n  desc  \"Changes in the database objects (tables, views, procedures, functions)\nthat record and control permissions, privileges, and roles granted to users and\nroles must be tracked. Without an audit trail, unauthorized changes to the\nsecurity subsystem could go undetected. The database could be severely\ncompromised or rendered inoperative.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for when\nunsuccessful attempts to modify security objects occur.\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log  when unsuccessful attempts to modify security\nobjects occur, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to generate audit records when unsuccessful attempts to\nmodify security objects occur.\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000496-DB-000335\"\n  tag \"gid\": \"V-58089\"\n  tag \"rid\": \"SV-72519r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000496-DB-000335\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58089.rb"},"waiver_data":{},"results":[]},{"id":"V-58091","title":"The DBMS must generate audit records when security objects are\ndeleted.","desc":"The removal of security objects from the database/DBMS would seriously\ndegrade a system's information assurance posture. If such an event occurs, it\nmust be logged.","descriptions":[{"label":"default","data":"The removal of security objects from the database/DBMS would seriously\ndegrade a system's information assurance posture. If such an event occurs, it\nmust be logged."},{"label":"check","data":"Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for when security\nobjects are deleted.\n\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log  when security objects are deleted., this is a\nfinding."},{"label":"fix","data":"Configure CouchDB to generate audit records when security objects are\ndeleted.\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000501-DB-000336","gid":"V-58091","rid":"SV-72521r1_rule","stig_id":"SRG-APP-000501-DB-000336","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58091\" do\n  title \"The DBMS must generate audit records when security objects are\ndeleted.\"\n  desc  \"The removal of security objects from the database/DBMS would seriously\ndegrade a system's information assurance posture. If such an event occurs, it\nmust be logged.\"\n  desc  \"check\", \"\n    Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for when security\nobjects are deleted.\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log  when security objects are deleted., this is a\nfinding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to generate audit records when security objects are\ndeleted.\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000501-DB-000336\"\n  tag \"gid\": \"V-58091\"\n  tag \"rid\": \"SV-72521r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000501-DB-000336\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58091.rb"},"waiver_data":{},"results":[]},{"id":"V-58093","title":"The DBMS must generate audit records when unsuccessful attempts to\ndelete security objects occur.","desc":"The removal of security objects from the database/DBMS would seriously\ndegrade a system's information assurance posture. If such an action is\nattempted, it must be logged.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.","descriptions":[{"label":"default","data":"The removal of security objects from the database/DBMS would seriously\ndegrade a system's information assurance posture. If such an action is\nattempted, it must be logged.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones."},{"label":"check","data":"Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for  when\nunsuccessful attempts to delete security objects occur.\n\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log when unsuccessful attempts to delete security\nobjects occur, this is a finding."},{"label":"fix","data":"Configure CouchDB to generate audit records when unsuccessful attempts to\ndelete security objects occur.\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000501-DB-000337","gid":"V-58093","rid":"SV-72523r1_rule","stig_id":"SRG-APP-000501-DB-000337","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58093\" do\n  title \"The DBMS must generate audit records when unsuccessful attempts to\ndelete security objects occur.\"\n  desc  \"The removal of security objects from the database/DBMS would seriously\ndegrade a system's information assurance posture. If such an action is\nattempted, it must be logged.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for  when\nunsuccessful attempts to delete security objects occur.\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log when unsuccessful attempts to delete security\nobjects occur, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to generate audit records when unsuccessful attempts to\ndelete security objects occur.\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000501-DB-000337\"\n  tag \"gid\": \"V-58093\"\n  tag \"rid\": \"SV-72523r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000501-DB-000337\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58093.rb"},"waiver_data":{},"results":[]},{"id":"V-58095","title":"The DBMS must generate audit records when categories of information\n(e.g., classification levels/security levels) are accessed.","desc":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.","descriptions":[{"label":"default","data":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems."},{"label":"check","data":"Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for  when\ncategories of information (e.g., classification levels/security levels) are\naccessed.\n\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log when categories of information (e.g.,\nclassification levels/security levels) are accessed, this is a finding."},{"label":"fix","data":"Configure CouchDB to generate audit records when categories of information\n(e.g., classification levels/security levels) are accessed.\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000494-DB-000344","gid":"V-58095","rid":"SV-72525r1_rule","stig_id":"SRG-APP-000494-DB-000344","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58095\" do\n  title \"The DBMS must generate audit records when categories of information\n(e.g., classification levels/security levels) are accessed.\"\n  desc  \"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for  when\ncategories of information (e.g., classification levels/security levels) are\naccessed.\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log when categories of information (e.g.,\nclassification levels/security levels) are accessed, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to generate audit records when categories of information\n(e.g., classification levels/security levels) are accessed.\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000494-DB-000344\"\n  tag \"gid\": \"V-58095\"\n  tag \"rid\": \"SV-72525r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000494-DB-000344\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58095.rb"},"waiver_data":{},"results":[]},{"id":"V-58097","title":"The DBMS must generate audit records when unsuccessful attempts to\naccess categories of information (e.g., classification levels/security levels)\noccur.","desc":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.","descriptions":[{"label":"default","data":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems."},{"label":"check","data":"Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for when\nunsuccessful attempts to access categories of information (e.g., classification\nlevels/security levels) occur.\n\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log  when unsuccessful attempts to access categories of\ninformation (e.g., classification levels/security levels) occur, this is a\nfinding."},{"label":"fix","data":"Configure CouchDB to generate audit records  when unsuccessful attempts to\naccess categories of information (e.g., classification levels/security levels)\noccur.\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000494-DB-000345","gid":"V-58097","rid":"SV-72527r1_rule","stig_id":"SRG-APP-000494-DB-000345","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58097\" do\n  title \"The DBMS must generate audit records when unsuccessful attempts to\naccess categories of information (e.g., classification levels/security levels)\noccur.\"\n  desc  \"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for when\nunsuccessful attempts to access categories of information (e.g., classification\nlevels/security levels) occur.\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log  when unsuccessful attempts to access categories of\ninformation (e.g., classification levels/security levels) occur, this is a\nfinding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to generate audit records  when unsuccessful attempts to\naccess categories of information (e.g., classification levels/security levels)\noccur.\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000494-DB-000345\"\n  tag \"gid\": \"V-58097\"\n  tag \"rid\": \"SV-72527r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000494-DB-000345\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58097.rb"},"waiver_data":{},"results":[]},{"id":"V-58099","title":"The DBMS must generate audit records when categories of information\n(e.g., classification levels/security levels) are modified.","desc":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.","descriptions":[{"label":"default","data":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems."},{"label":"check","data":"Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for when when\ncategories of information (e.g., classification levels/security levels) are\nmodified.\n\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log whenwhen categories of information (e.g.,\nclassification levels/security levels) are modified, this is a finding."},{"label":"fix","data":"Configure CouchDB to generate audit records when categories of information\n(e.g., classification levels/security levels) are modified.\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000498-DB-000346","gid":"V-58099","rid":"SV-72529r1_rule","stig_id":"SRG-APP-000498-DB-000346","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58099\" do\n  title \"The DBMS must generate audit records when categories of information\n(e.g., classification levels/security levels) are modified.\"\n  desc  \"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for when when\ncategories of information (e.g., classification levels/security levels) are\nmodified.\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log whenwhen categories of information (e.g.,\nclassification levels/security levels) are modified, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to generate audit records when categories of information\n(e.g., classification levels/security levels) are modified.\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000498-DB-000346\"\n  tag \"gid\": \"V-58099\"\n  tag \"rid\": \"SV-72529r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000498-DB-000346\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58099.rb"},"waiver_data":{},"results":[]},{"id":"V-58101","title":"The DBMS must generate audit records when unsuccessful attempts to\nmodify categories of information (e.g., classification levels/security levels)\noccur.","desc":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.","descriptions":[{"label":"default","data":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems."},{"label":"check","data":"Review DBMS documentation to verify that audit records can be produced\nwhen the system denies or fails to complete attempts to modify categories of\ninformation.\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n    If it is not set to generate audit records when unsuccessful attempts to\nmodify categories of information (e.g., classification levels/security levels)\noccur."},{"label":"fix","data":"Configure CouchDB to generate audit records when unsuccessful attempts to\nmodify categories of information (e.g., classification levels/security levels)\noccur.\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000498-DB-000347","gid":"V-58101","rid":"SV-72531r1_rule","stig_id":"SRG-APP-000498-DB-000347","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58101\" do\n  title \"The DBMS must generate audit records when unsuccessful attempts to\nmodify categories of information (e.g., classification levels/security levels)\noccur.\"\n  desc  \"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.\n  \"\n  desc  \"check\", \"\n     Review DBMS documentation to verify that audit records can be produced\nwhen the system denies or fails to complete attempts to modify categories of\ninformation.\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n    If it is not set to generate audit records when unsuccessful attempts to\nmodify categories of information (e.g., classification levels/security levels)\noccur.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to generate audit records when unsuccessful attempts to\nmodify categories of information (e.g., classification levels/security levels)\noccur.\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000498-DB-000347\"\n  tag \"gid\": \"V-58101\"\n  tag \"rid\": \"SV-72531r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000498-DB-000347\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58101.rb"},"waiver_data":{},"results":[]},{"id":"V-58103","title":"The DBMS must generate audit records when categories of information\n(e.g., classification levels/security levels) are deleted.","desc":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.","descriptions":[{"label":"default","data":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems."},{"label":"check","data":"Review DBMS documentation to verify that audit records can be produced when\ncategories of information are deleted.\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n    If it is not set to generate audit records when categories of information\n(e.g., classification levels/security levels) are deleted."},{"label":"fix","data":"Configure CouchDB to generate audit records whencategories of information\n(e.g., classification levels/security levels) are deleted.\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000502-DB-000348","gid":"V-58103","rid":"SV-72533r1_rule","stig_id":"SRG-APP-000502-DB-000348","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58103\" do\n  title \"The DBMS must generate audit records when categories of information\n(e.g., classification levels/security levels) are deleted.\"\n  desc  \"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.\n  \"\n  desc  \"check\", \"\n    Review DBMS documentation to verify that audit records can be produced when\ncategories of information are deleted.\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n    If it is not set to generate audit records when categories of information\n(e.g., classification levels/security levels) are deleted.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to generate audit records whencategories of information\n(e.g., classification levels/security levels) are deleted.\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000502-DB-000348\"\n  tag \"gid\": \"V-58103\"\n  tag \"rid\": \"SV-72533r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000502-DB-000348\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58103.rb"},"waiver_data":{},"results":[]},{"id":"V-58105","title":"The DBMS must generate audit records when unsuccessful attempts to\ndelete categories of information (e.g., classification levels/security levels)\noccur.","desc":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.","descriptions":[{"label":"default","data":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems."},{"label":"check","data":"Review DBMS documentation to verify that audit records can be produced when\nthe system denies or fails to complete attempts to delete categories of\ninformation.\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n    If it is not set to generate audit records when unsuccessful attempts to\ndelete categories of information (e.g., classification levels/security levels)\noccur."},{"label":"fix","data":"Configure CouchDB to generate audit records when  unsuccessful attempts to\ndelete categories of information (e.g., classification levels/security levels)\noccur.\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000502-DB-000349","gid":"V-58105","rid":"SV-72535r1_rule","stig_id":"SRG-APP-000502-DB-000349","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58105\" do\n  title \"The DBMS must generate audit records when unsuccessful attempts to\ndelete categories of information (e.g., classification levels/security levels)\noccur.\"\n  desc  \"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.\n  \"\n  desc  \"check\", \"\n    Review DBMS documentation to verify that audit records can be produced when\nthe system denies or fails to complete attempts to delete categories of\ninformation.\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n    If it is not set to generate audit records when unsuccessful attempts to\ndelete categories of information (e.g., classification levels/security levels)\noccur.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to generate audit records when  unsuccessful attempts to\ndelete categories of information (e.g., classification levels/security levels)\noccur.\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000502-DB-000349\"\n  tag \"gid\": \"V-58105\"\n  tag \"rid\": \"SV-72535r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000502-DB-000349\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58105.rb"},"waiver_data":{},"results":[]},{"id":"V-58107","title":"The DBMS must generate audit records when successful logons or\nconnections occur.","desc":"For completeness of forensic analysis, it is necessary to track\nwho/what (a user or other principal) logs on to the DBMS.","descriptions":[{"label":"default","data":"For completeness of forensic analysis, it is necessary to track\nwho/what (a user or other principal) logs on to the DBMS."},{"label":"check","data":"For completeness of forensic analysis, it is necessary to track who/what (a\nuser or other principal) logs on to CouchDB.\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n    If it is not set to generate audit records when successful logons or\nconnections occur."},{"label":"fix","data":"Configure CouchDB to generate audit records when successful logons or\nconnections occur.\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000503-DB-000350","gid":"V-58107","rid":"SV-72537r1_rule","stig_id":"SRG-APP-000503-DB-000350","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58107\" do\n  title \"The DBMS must generate audit records when successful logons or\nconnections occur.\"\n  desc  \"For completeness of forensic analysis, it is necessary to track\nwho/what (a user or other principal) logs on to the DBMS.\"\n  desc  \"check\", \"\n    For completeness of forensic analysis, it is necessary to track who/what (a\nuser or other principal) logs on to CouchDB.\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n    If it is not set to generate audit records when successful logons or\nconnections occur.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to generate audit records when successful logons or\nconnections occur.\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000503-DB-000350\"\n  tag \"gid\": \"V-58107\"\n  tag \"rid\": \"SV-72537r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000503-DB-000350\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58107.rb"},"waiver_data":{},"results":[]},{"id":"V-58109","title":"The DBMS must generate audit records when unsuccessful logons or\nconnection attempts occur.","desc":"For completeness of forensic analysis, it is necessary to track failed\nattempts to log on to the DBMS. While positive identification may not be\npossible in a case of failed authentication, as much information as possible\nabout the incident must be captured.","descriptions":[{"label":"default","data":"For completeness of forensic analysis, it is necessary to track failed\nattempts to log on to the DBMS. While positive identification may not be\npossible in a case of failed authentication, as much information as possible\nabout the incident must be captured."},{"label":"check","data":"Review CouchDB audit settings. If an audit record is not generated each\ntime a user (or other principal) attempts but fails to log on or connect to\nCouchDB (including attempts where the user ID is invalid/unknown), this is a\nfinding.\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n    If it is not set to generate audit records when unsuccessful logons or\nconnection attempts occur."},{"label":"fix","data":"Configure CouchDB to generate audit records when unsuccessful logons or\nconnection attempts occur.\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000503-DB-000351","gid":"V-58109","rid":"SV-72539r1_rule","stig_id":"SRG-APP-000503-DB-000351","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58109\" do\n  title \"The DBMS must generate audit records when unsuccessful logons or\nconnection attempts occur.\"\n  desc  \"For completeness of forensic analysis, it is necessary to track failed\nattempts to log on to the DBMS. While positive identification may not be\npossible in a case of failed authentication, as much information as possible\nabout the incident must be captured.\"\n  desc  \"check\", \"\n    Review CouchDB audit settings. If an audit record is not generated each\ntime a user (or other principal) attempts but fails to log on or connect to\nCouchDB (including attempts where the user ID is invalid/unknown), this is a\nfinding.\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n    If it is not set to generate audit records when unsuccessful logons or\nconnection attempts occur.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to generate audit records when unsuccessful logons or\nconnection attempts occur.\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000503-DB-000351\"\n  tag \"gid\": \"V-58109\"\n  tag \"rid\": \"SV-72539r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000503-DB-000351\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58109.rb"},"waiver_data":{},"results":[]},{"id":"V-58111","title":"The DBMS must generate audit records showing starting and ending time\nfor user access to the database(s).","desc":"For completeness of forensic analysis, it is necessary to know how\nlong a user's (or other principal's) connection to the DBMS lasts. This can be\nachieved by recording disconnections, in addition to logons/connections, in the\naudit logs.\n\n    Disconnection may be initiated by the user or forced by the system (as in a\ntimeout) or result from a system or network failure. To the greatest extent\npossible, all disconnections must be logged.","descriptions":[{"label":"default","data":"For completeness of forensic analysis, it is necessary to know how\nlong a user's (or other principal's) connection to the DBMS lasts. This can be\nachieved by recording disconnections, in addition to logons/connections, in the\naudit logs.\n\n    Disconnection may be initiated by the user or forced by the system (as in a\ntimeout) or result from a system or network failure. To the greatest extent\npossible, all disconnections must be logged."},{"label":"check","data":"Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records showing starting\nand ending time for user access to the database(s).\n\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log start and end times of user access, this is a\nfinding."},{"label":"fix","data":"Configure CouchDB to generate audit records showing starting and ending\ntime for user access to the database(s).\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000505-DB-000352","gid":"V-58111","rid":"SV-72541r1_rule","stig_id":"SRG-APP-000505-DB-000352","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58111\" do\n  title \"The DBMS must generate audit records showing starting and ending time\nfor user access to the database(s).\"\n  desc  \"For completeness of forensic analysis, it is necessary to know how\nlong a user's (or other principal's) connection to the DBMS lasts. This can be\nachieved by recording disconnections, in addition to logons/connections, in the\naudit logs.\n\n    Disconnection may be initiated by the user or forced by the system (as in a\ntimeout) or result from a system or network failure. To the greatest extent\npossible, all disconnections must be logged.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records showing starting\nand ending time for user access to the database(s).\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log start and end times of user access, this is a\nfinding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to generate audit records showing starting and ending\ntime for user access to the database(s).\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000505-DB-000352\"\n  tag \"gid\": \"V-58111\"\n  tag \"rid\": \"SV-72541r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000505-DB-000352\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58111.rb"},"waiver_data":{},"results":[]},{"id":"V-58113","title":"The DBMS must generate audit records when concurrent\nlogons/connections by the same user from different workstations occur.","desc":"For completeness of forensic analysis, it is necessary to track who\nlogs on to the DBMS.\n\n    Concurrent connections by the same user from multiple workstations may be\nvalid use of the system; or such connections may be due to improper\ncircumvention of the requirement to use the CAC for authentication; or they may\nindicate unauthorized account sharing; or they may be because an account has\nbeen compromised.\n\n    (If the fact of multiple, concurrent logons by a given user can be reliably\nreconstructed from the log entries for other events (logons/connections;\nvoluntary and involuntary disconnections), then it is not mandatory to create\nadditional log entries specifically for this.)","descriptions":[{"label":"default","data":"For completeness of forensic analysis, it is necessary to track who\nlogs on to the DBMS.\n\n    Concurrent connections by the same user from multiple workstations may be\nvalid use of the system; or such connections may be due to improper\ncircumvention of the requirement to use the CAC for authentication; or they may\nindicate unauthorized account sharing; or they may be because an account has\nbeen compromised.\n\n    (If the fact of multiple, concurrent logons by a given user can be reliably\nreconstructed from the log entries for other events (logons/connections;\nvoluntary and involuntary disconnections), then it is not mandatory to create\nadditional log entries specifically for this.)"},{"label":"check","data":"Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records when concurrent\nlogons/connections by the same user from different workstations occur.\n\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records when concurrent logons/connections by\nthe same user from different workstations occur, this is a finding."},{"label":"fix","data":"Configure CouchDB to generate audit records when concurrent\nlogons/connections by the same user from different workstations occur.\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000506-DB-000353","gid":"V-58113","rid":"SV-72543r1_rule","stig_id":"SRG-APP-000506-DB-000353","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58113\" do\n  title \"The DBMS must generate audit records when concurrent\nlogons/connections by the same user from different workstations occur.\"\n  desc  \"For completeness of forensic analysis, it is necessary to track who\nlogs on to the DBMS.\n\n    Concurrent connections by the same user from multiple workstations may be\nvalid use of the system; or such connections may be due to improper\ncircumvention of the requirement to use the CAC for authentication; or they may\nindicate unauthorized account sharing; or they may be because an account has\nbeen compromised.\n\n    (If the fact of multiple, concurrent logons by a given user can be reliably\nreconstructed from the log entries for other events (logons/connections;\nvoluntary and involuntary disconnections), then it is not mandatory to create\nadditional log entries specifically for this.)\n  \"\n  desc  \"check\", \"\n    Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records when concurrent\nlogons/connections by the same user from different workstations occur.\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records when concurrent logons/connections by\nthe same user from different workstations occur, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to generate audit records when concurrent\nlogons/connections by the same user from different workstations occur.\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000506-DB-000353\"\n  tag \"gid\": \"V-58113\"\n  tag \"rid\": \"SV-72543r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000506-DB-000353\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58113.rb"},"waiver_data":{},"results":[]},{"id":"V-58115","title":"The DBMS must generate audit records for all privileged activities or\nother system-level access.","desc":"Without tracking privileged activity, it would be difficult to\nestablish, correlate, and investigate the events relating to an incident or\nidentify those responsible for one.\n\n    System documentation should include a definition of the functionality\nconsidered privileged.\n\n    A privileged function in this context is any operation that modifies the\nstructure of the database, its built-in logic, or its security settings. This\nwould include all Data Definition Language (DDL) statements and all\nsecurity-related statements. In an SQL environment, it encompasses, but is not\nnecessarily limited to:\n    CREATE\n    ALTER\n    DROP\n    GRANT\n    REVOKE\n    DENY\n\n    There may also be Data Manipulation Language (DML) statements that, subject\nto context, should be regarded as privileged. Possible examples in SQL include:\n\n    TRUNCATE TABLE;\n    DELETE, or\n    DELETE affecting more than n rows, for some n, or\n    DELETE without a WHERE clause;\n\n    UPDATE or\n    UPDATE affecting more than n rows, for some n, or\n    UPDATE without a WHERE clause;\n\n    any SELECT, INSERT, UPDATE, or DELETE to an application-defined security\ntable executed by other than a security principal.\n\n    Depending on the capabilities of the DBMS and the design of the database\nand associated applications, audit logging may be achieved by means of DBMS\nauditing features, database triggers, other mechanisms, or a combination of\nthese.\n\n    Note that it is particularly important to audit, and tightly control, any\naction that weakens the implementation of this requirement itself, since the\nobjective is to have a complete audit trail of all administrative activity.","descriptions":[{"label":"default","data":"Without tracking privileged activity, it would be difficult to\nestablish, correlate, and investigate the events relating to an incident or\nidentify those responsible for one.\n\n    System documentation should include a definition of the functionality\nconsidered privileged.\n\n    A privileged function in this context is any operation that modifies the\nstructure of the database, its built-in logic, or its security settings. This\nwould include all Data Definition Language (DDL) statements and all\nsecurity-related statements. In an SQL environment, it encompasses, but is not\nnecessarily limited to:\n    CREATE\n    ALTER\n    DROP\n    GRANT\n    REVOKE\n    DENY\n\n    There may also be Data Manipulation Language (DML) statements that, subject\nto context, should be regarded as privileged. Possible examples in SQL include:\n\n    TRUNCATE TABLE;\n    DELETE, or\n    DELETE affecting more than n rows, for some n, or\n    DELETE without a WHERE clause;\n\n    UPDATE or\n    UPDATE affecting more than n rows, for some n, or\n    UPDATE without a WHERE clause;\n\n    any SELECT, INSERT, UPDATE, or DELETE to an application-defined security\ntable executed by other than a security principal.\n\n    Depending on the capabilities of the DBMS and the design of the database\nand associated applications, audit logging may be achieved by means of DBMS\nauditing features, database triggers, other mechanisms, or a combination of\nthese.\n\n    Note that it is particularly important to audit, and tightly control, any\naction that weakens the implementation of this requirement itself, since the\nobjective is to have a complete audit trail of all administrative activity."},{"label":"check","data":"Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for all privileged\nactivities or other system-level access.\n\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records for all privileged activities or\nother system-level access, this is a finding."},{"label":"fix","data":"Configure CouchDB to generate audit records for all privileged activities\nor other system-level access.\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000504-DB-000354","gid":"V-58115","rid":"SV-72545r1_rule","stig_id":"SRG-APP-000504-DB-000354","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58115\" do\n  title \"The DBMS must generate audit records for all privileged activities or\nother system-level access.\"\n  desc  \"Without tracking privileged activity, it would be difficult to\nestablish, correlate, and investigate the events relating to an incident or\nidentify those responsible for one.\n\n    System documentation should include a definition of the functionality\nconsidered privileged.\n\n    A privileged function in this context is any operation that modifies the\nstructure of the database, its built-in logic, or its security settings. This\nwould include all Data Definition Language (DDL) statements and all\nsecurity-related statements. In an SQL environment, it encompasses, but is not\nnecessarily limited to:\n    CREATE\n    ALTER\n    DROP\n    GRANT\n    REVOKE\n    DENY\n\n    There may also be Data Manipulation Language (DML) statements that, subject\nto context, should be regarded as privileged. Possible examples in SQL include:\n\n    TRUNCATE TABLE;\n    DELETE, or\n    DELETE affecting more than n rows, for some n, or\n    DELETE without a WHERE clause;\n\n    UPDATE or\n    UPDATE affecting more than n rows, for some n, or\n    UPDATE without a WHERE clause;\n\n    any SELECT, INSERT, UPDATE, or DELETE to an application-defined security\ntable executed by other than a security principal.\n\n    Depending on the capabilities of the DBMS and the design of the database\nand associated applications, audit logging may be achieved by means of DBMS\nauditing features, database triggers, other mechanisms, or a combination of\nthese.\n\n    Note that it is particularly important to audit, and tightly control, any\naction that weakens the implementation of this requirement itself, since the\nobjective is to have a complete audit trail of all administrative activity.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for all privileged\nactivities or other system-level access.\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records for all privileged activities or\nother system-level access, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to generate audit records for all privileged activities\nor other system-level access.\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000504-DB-000354\"\n  tag \"gid\": \"V-58115\"\n  tag \"rid\": \"SV-72545r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000504-DB-000354\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58115.rb"},"waiver_data":{},"results":[]},{"id":"V-58117","title":"The DBMS must generate audit records when unsuccessful attempts to\nexecute privileged activities or other system-level access occur.","desc":"Without tracking privileged activity, it would be difficult to\nestablish, correlate, and investigate the events relating to an incident or\nidentify those responsible for one.\n\n    System documentation should include a definition of the functionality\nconsidered privileged.\n\n    A privileged function in this context is any operation that modifies the\nstructure of the database, its built-in logic, or its security settings. This\nwould include all Data Definition Language (DDL) statements and all\nsecurity-related statements. In an SQL environment, it encompasses, but is not\nnecessarily limited to:\n    CREATE\n    ALTER\n    DROP\n    GRANT\n    REVOKE\n    DENY\n\n    Note that it is particularly important to audit, and tightly control, any\naction that weakens the implementation of this requirement itself, since the\nobjective is to have a complete audit trail of all administrative activity.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.","descriptions":[{"label":"default","data":"Without tracking privileged activity, it would be difficult to\nestablish, correlate, and investigate the events relating to an incident or\nidentify those responsible for one.\n\n    System documentation should include a definition of the functionality\nconsidered privileged.\n\n    A privileged function in this context is any operation that modifies the\nstructure of the database, its built-in logic, or its security settings. This\nwould include all Data Definition Language (DDL) statements and all\nsecurity-related statements. In an SQL environment, it encompasses, but is not\nnecessarily limited to:\n    CREATE\n    ALTER\n    DROP\n    GRANT\n    REVOKE\n    DENY\n\n    Note that it is particularly important to audit, and tightly control, any\naction that weakens the implementation of this requirement itself, since the\nobjective is to have a complete audit trail of all administrative activity.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones."},{"label":"check","data":"Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for unsuccessful\nattempts to execute privileged activities or other system-level access occur.\n\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records for unsuccessful attempts to execute\nprivileged activities or other system-level access occur, this is a finding."},{"label":"fix","data":"Configure CouchDB to generate audit records when unsuccessful attempts to\nexecute privileged activities or other system-level access occur.\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000504-DB-000355","gid":"V-58117","rid":"SV-72547r1_rule","stig_id":"SRG-APP-000504-DB-000355","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58117\" do\n  title \"The DBMS must generate audit records when unsuccessful attempts to\nexecute privileged activities or other system-level access occur.\"\n  desc  \"Without tracking privileged activity, it would be difficult to\nestablish, correlate, and investigate the events relating to an incident or\nidentify those responsible for one.\n\n    System documentation should include a definition of the functionality\nconsidered privileged.\n\n    A privileged function in this context is any operation that modifies the\nstructure of the database, its built-in logic, or its security settings. This\nwould include all Data Definition Language (DDL) statements and all\nsecurity-related statements. In an SQL environment, it encompasses, but is not\nnecessarily limited to:\n    CREATE\n    ALTER\n    DROP\n    GRANT\n    REVOKE\n    DENY\n\n    Note that it is particularly important to audit, and tightly control, any\naction that weakens the implementation of this requirement itself, since the\nobjective is to have a complete audit trail of all administrative activity.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for unsuccessful\nattempts to execute privileged activities or other system-level access occur.\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log audit records for unsuccessful attempts to execute\nprivileged activities or other system-level access occur, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to generate audit records when unsuccessful attempts to\nexecute privileged activities or other system-level access occur.\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000504-DB-000355\"\n  tag \"gid\": \"V-58117\"\n  tag \"rid\": \"SV-72547r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000504-DB-000355\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58117.rb"},"waiver_data":{},"results":[]},{"id":"V-58119","title":"The DBMS must be able to generate audit records when successful\naccesses to objects occur.","desc":"Without tracking all or selected types of access to all or selected\nobjects (tables, views, procedures, functions, etc.), it would be difficult to\nestablish, correlate, and investigate the events relating to an incident, or\nidentify those responsible for one.\n\n    In an SQL environment, types of access include, but are not necessarily\nlimited to:\n    SELECT\n    INSERT\n    UPDATE\n    DELETE\n    EXECUTE","descriptions":[{"label":"default","data":"Without tracking all or selected types of access to all or selected\nobjects (tables, views, procedures, functions, etc.), it would be difficult to\nestablish, correlate, and investigate the events relating to an incident, or\nidentify those responsible for one.\n\n    In an SQL environment, types of access include, but are not necessarily\nlimited to:\n    SELECT\n    INSERT\n    UPDATE\n    DELETE\n    EXECUTE"},{"label":"check","data":"Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for when successful\naccesses to objects occur.\n\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log when successful accesses to objects occur, this is\na finding."},{"label":"fix","data":"Configure CouchDB to enerate audit records when successful accesses to\nobjects occur.\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000507-DB-000356","gid":"V-58119","rid":"SV-72549r1_rule","stig_id":"SRG-APP-000507-DB-000356","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58119\" do\n  title \"The DBMS must be able to generate audit records when successful\naccesses to objects occur.\"\n  desc  \"Without tracking all or selected types of access to all or selected\nobjects (tables, views, procedures, functions, etc.), it would be difficult to\nestablish, correlate, and investigate the events relating to an incident, or\nidentify those responsible for one.\n\n    In an SQL environment, types of access include, but are not necessarily\nlimited to:\n    SELECT\n    INSERT\n    UPDATE\n    DELETE\n    EXECUTE\n  \"\n  desc  \"check\", \"\n    Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for when successful\naccesses to objects occur.\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log when successful accesses to objects occur, this is\na finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to enerate audit records when successful accesses to\nobjects occur.\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000507-DB-000356\"\n  tag \"gid\": \"V-58119\"\n  tag \"rid\": \"SV-72549r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000507-DB-000356\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58119.rb"},"waiver_data":{},"results":[]},{"id":"V-58121","title":"The DBMS must generate audit records when unsuccessful accesses to\nobjects occur.","desc":"Without tracking all or selected types of access to all or selected\nobjects (tables, views, procedures, functions, etc.), it would be difficult to\nestablish, correlate, and investigate the events relating to an incident or\nidentify those responsible for one.\n\n    In an SQL environment, types of access include, but are not necessarily\nlimited to:\n    SELECT\n    INSERT\n    UPDATE\n    DELETE\n    EXECUTE\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.","descriptions":[{"label":"default","data":"Without tracking all or selected types of access to all or selected\nobjects (tables, views, procedures, functions, etc.), it would be difficult to\nestablish, correlate, and investigate the events relating to an incident or\nidentify those responsible for one.\n\n    In an SQL environment, types of access include, but are not necessarily\nlimited to:\n    SELECT\n    INSERT\n    UPDATE\n    DELETE\n    EXECUTE\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones."},{"label":"check","data":"Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for when\nunsuccessful accesses to objects occur.\n\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log when unsuccessful accesses to objects occur, this\nis a finding."},{"label":"fix","data":"Configure CouchDB to enerate audit records when unsuccessful accesses to\nobjects occur.\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000507-DB-000357","gid":"V-58121","rid":"SV-72551r1_rule","stig_id":"SRG-APP-000507-DB-000357","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58121\" do\n  title \"The DBMS must generate audit records when unsuccessful accesses to\nobjects occur.\"\n  desc  \"Without tracking all or selected types of access to all or selected\nobjects (tables, views, procedures, functions, etc.), it would be difficult to\nestablish, correlate, and investigate the events relating to an incident or\nidentify those responsible for one.\n\n    In an SQL environment, types of access include, but are not necessarily\nlimited to:\n    SELECT\n    INSERT\n    UPDATE\n    DELETE\n    EXECUTE\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for when\nunsuccessful accesses to objects occur.\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log when unsuccessful accesses to objects occur, this\nis a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to enerate audit records when unsuccessful accesses to\nobjects occur.\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000507-DB-000357\"\n  tag \"gid\": \"V-58121\"\n  tag \"rid\": \"SV-72551r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000507-DB-000357\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58121.rb"},"waiver_data":{},"results":[]},{"id":"V-58123","title":"The DBMS must generate audit records for all direct access to the\ndatabase(s).","desc":"In this context, direct access is any query, command, or call to the\nDBMS that comes from any source other than the application(s) that it supports.\nExamples would be the command line or a database management utility program.\nThe intent is to capture all activity from administrative and non-standard\nsources.","descriptions":[{"label":"default","data":"In this context, direct access is any query, command, or call to the\nDBMS that comes from any source other than the application(s) that it supports.\nExamples would be the command line or a database management utility program.\nThe intent is to capture all activity from administrative and non-standard\nsources."},{"label":"check","data":"Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for all direct\naccess to the database(s).\n\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log for all direct access to the database(s), this is a\nfinding."},{"label":"fix","data":"Configure CouchDB to enerate audit records for all direct access to the\ndatabase(s).\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000508-DB-000358","gid":"V-58123","rid":"SV-72553r1_rule","stig_id":"SRG-APP-000508-DB-000358","fix_id":null,"cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58123\" do\n  title \"The DBMS must generate audit records for all direct access to the\ndatabase(s).\"\n  desc  \"In this context, direct access is any query, command, or call to the\nDBMS that comes from any source other than the application(s) that it supports.\nExamples would be the command line or a database management utility program.\nThe intent is to capture all activity from administrative and non-standard\nsources.\"\n  desc  \"check\", \"\n    Review the CouchDB database documentation and deployed configuration to\nverify that the database is configured to log audit records for all direct\naccess to the database(s).\n\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to log for all direct access to the database(s), this is a\nfinding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to enerate audit records for all direct access to the\ndatabase(s).\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000508-DB-000358\"\n  tag \"gid\": \"V-58123\"\n  tag \"rid\": \"SV-72553r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000508-DB-000358\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58123.rb"},"waiver_data":{},"results":[]},{"id":"V-58125","title":"The DBMS must enforce access restrictions associated with changes to\nthe configuration of the DBMS or database(s).","desc":"Failure to provide logical access restrictions associated with changes\nto configuration may have significant effects on the overall security of the\nsystem.\n\n    When dealing with access restrictions pertaining to change control, it\nshould be noted that any changes to the hardware, software, and/or firmware\ncomponents of the information system can potentially have significant effects\non the overall security of the system.\n\n    Accordingly, only qualified and authorized individuals should be allowed to\nobtain access to system components for the purposes of initiating changes,\nincluding upgrades and modifications.","descriptions":[{"label":"default","data":"Failure to provide logical access restrictions associated with changes\nto configuration may have significant effects on the overall security of the\nsystem.\n\n    When dealing with access restrictions pertaining to change control, it\nshould be noted that any changes to the hardware, software, and/or firmware\ncomponents of the information system can potentially have significant effects\non the overall security of the system.\n\n    Accordingly, only qualified and authorized individuals should be allowed to\nobtain access to system components for the purposes of initiating changes,\nincluding upgrades and modifications."},{"label":"check","data":"To list the privileges, as the database administrator, run the following:\n     #GET /db/_security\n\n    If the privileges are exceed what user and groups should have, this is a\nfinding."},{"label":"fix","data":"Use the following command to set privileges correctly:\n\n    # PUT /{db}/_security\n\n    Example request:\n    shell> curl http://localhost:5984/pineapple/_security -X PUT -H\n'content-type: application/json' -H 'accept: application/json' -d\n'{\"admins\":{\"names\":[\"superuser\"],\"roles\":[\"admins\"]},\"members\":{\"names\":\n[\"user1\",\"user2\"],\"roles\": [\"developers\"]}}'"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000380-DB-000360","gid":"V-58125","rid":"SV-72555r1_rule","stig_id":"SRG-APP-000380-DB-000360","fix_id":null,"cci":["CCI-001813"],"nist":["CM-5 (1)","Rev_4"]},"code":"control \"V-58125\" do\n  title \"The DBMS must enforce access restrictions associated with changes to\nthe configuration of the DBMS or database(s).\"\n  desc  \"Failure to provide logical access restrictions associated with changes\nto configuration may have significant effects on the overall security of the\nsystem.\n\n    When dealing with access restrictions pertaining to change control, it\nshould be noted that any changes to the hardware, software, and/or firmware\ncomponents of the information system can potentially have significant effects\non the overall security of the system.\n\n    Accordingly, only qualified and authorized individuals should be allowed to\nobtain access to system components for the purposes of initiating changes,\nincluding upgrades and modifications.\n  \"\n  desc  \"check\", \"\n    To list the privileges, as the database administrator, run the following:\n     #GET /db/_security\n\n    If the privileges are exceed what user and groups should have, this is a\nfinding.\n  \"\n  desc  \"fix\", \"\n    Use the following command to set privileges correctly:\n\n    # PUT /{db}/_security\n\n    Example request:\n    shell> curl http://localhost:5984/pineapple/_security -X PUT -H\n'content-type: application/json' -H 'accept: application/json' -d\n'{\\\"admins\\\":{\\\"names\\\":[\\\"superuser\\\"],\\\"roles\\\":[\\\"admins\\\"]},\\\"members\\\":{\\\"names\\\":\n[\\\"user1\\\",\\\"user2\\\"],\\\"roles\\\": [\\\"developers\\\"]}}'\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000380-DB-000360\"\n  tag \"gid\": \"V-58125\"\n  tag \"rid\": \"SV-72555r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000380-DB-000360\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001813\"]\n  tag \"nist\": [\"CM-5 (1)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58125.rb"},"waiver_data":{},"results":[]},{"id":"V-58127","title":"The DBMS must produce audit records of its enforcement of access\nrestrictions associated with changes to the configuration of the DBMS or\ndatabase(s).","desc":"Without auditing the enforcement of access restrictions against\nchanges to configuration, it would be difficult to identify attempted attacks\nand an audit trail would not be available for forensic investigation for\nafter-the-fact actions.\n\n    Enforcement actions are the methods or mechanisms used to prevent\nunauthorized changes to configuration settings. Enforcement action methods may\nbe as simple as denying access to a file based on the application of file\npermissions (access restriction). Audit items may consist of lists of actions\nblocked by access restrictions or changes identified after the fact.","descriptions":[{"label":"default","data":"Without auditing the enforcement of access restrictions against\nchanges to configuration, it would be difficult to identify attempted attacks\nand an audit trail would not be available for forensic investigation for\nafter-the-fact actions.\n\n    Enforcement actions are the methods or mechanisms used to prevent\nunauthorized changes to configuration settings. Enforcement action methods may\nbe as simple as denying access to a file based on the application of file\npermissions (access restriction). Audit items may consist of lists of actions\nblocked by access restrictions or changes identified after the fact."},{"label":"check","data":"Review the CouchDB documentation to verify that audit records can produce\naudit records of its enforcement of access restrictions associated with changes\nto the configuration of database(s).\n    # find . -name \"default.ini\"\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \"level =\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to produce audit records of its enforcement of access\nrestrictions associated with changes to the configuration of the CouchDB\ndatabase, this is a finding."},{"label":"fix","data":"Configure CouchDB to verify that audit records can produce audit records\nof its enforcement of access restrictions associated with changes to the\nconfiguration of database(s).\n\n    # find . -name \"default.ini\"\n    # set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000381-DB-000361","gid":"V-58127","rid":"SV-72557r1_rule","stig_id":"SRG-APP-000381-DB-000361","fix_id":null,"cci":["CCI-001814"],"nist":["CM-5 (1)","Rev_4"]},"code":"control \"V-58127\" do\n  title \"The DBMS must produce audit records of its enforcement of access\nrestrictions associated with changes to the configuration of the DBMS or\ndatabase(s).\"\n  desc  \"Without auditing the enforcement of access restrictions against\nchanges to configuration, it would be difficult to identify attempted attacks\nand an audit trail would not be available for forensic investigation for\nafter-the-fact actions.\n\n    Enforcement actions are the methods or mechanisms used to prevent\nunauthorized changes to configuration settings. Enforcement action methods may\nbe as simple as denying access to a file based on the application of file\npermissions (access restriction). Audit items may consist of lists of actions\nblocked by access restrictions or changes identified after the fact.\n  \"\n  desc  \"check\", \"\n    Review the CouchDB documentation to verify that audit records can produce\naudit records of its enforcement of access restrictions associated with changes\nto the configuration of database(s).\n    # find . -name \\\"default.ini\\\"\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n    #grep \\\"level =\\\" <path to default.ini>\n    if line does not exist or is not set to info, this is a finding.\n\n    If it is not set to produce audit records of its enforcement of access\nrestrictions associated with changes to the configuration of the CouchDB\ndatabase, this is a finding.\n  \"\n  desc  \"fix\", \"\n     Configure CouchDB to verify that audit records can produce audit records\nof its enforcement of access restrictions associated with changes to the\nconfiguration of database(s).\n\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000381-DB-000361\"\n  tag \"gid\": \"V-58127\"\n  tag \"rid\": \"SV-72557r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000381-DB-000361\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001814\"]\n  tag \"nist\": [\"CM-5 (1)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58127.rb"},"waiver_data":{},"results":[]},{"id":"V-58129","title":"The role(s)/group(s) used to modify database structure (including but\nnot necessarily limited to tables, indexes, storage, etc.) and logic modules\n(stored procedures, functions, triggers, links to software external to the\nDBMS, etc.) must be restricted to authorized users.","desc":"If the DBMS were to allow any user to make changes to database\nstructure or logic, then those changes might be implemented without undergoing\nthe appropriate testing and approvals that are part of a robust change\nmanagement process.\n\n    Accordingly, only qualified and authorized individuals shall be allowed to\nobtain access to information system components for purposes of initiating\nchanges, including upgrades and modifications.\n\n    Unmanaged changes that occur to the database software libraries or\nconfiguration can lead to unauthorized or compromised installations.","descriptions":[{"label":"default","data":"If the DBMS were to allow any user to make changes to database\nstructure or logic, then those changes might be implemented without undergoing\nthe appropriate testing and approvals that are part of a robust change\nmanagement process.\n\n    Accordingly, only qualified and authorized individuals shall be allowed to\nobtain access to information system components for purposes of initiating\nchanges, including upgrades and modifications.\n\n    Unmanaged changes that occur to the database software libraries or\nconfiguration can lead to unauthorized or compromised installations."},{"label":"check","data":"To list the privileges, as the database administrator, run the following:\n     #GET /db/_security\n\n    If the privileges are exceed what user and groups should have, this is a\nfinding."},{"label":"fix","data":"Use the following command to set privileges correctly:\n\n    # PUT /{db}/_security\n\n    Example request:\n    shell> curl http://localhost:5984/pineapple/_security -X PUT -H\n'content-type: application/json' -H 'accept: application/json' -d\n'{\"admins\":{\"names\":[\"superuser\"],\"roles\":[\"admins\"]},\"members\":{\"names\":\n[\"user1\",\"user2\"],\"roles\": [\"developers\"]}}'"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000133-DB-000362","gid":"V-58129","rid":"SV-72559r1_rule","stig_id":"SRG-APP-000133-DB-000362","fix_id":null,"cci":["CCI-001499"],"nist":["CM-5 (6)","Rev_4"]},"code":"control \"V-58129\" do\n  title \"The role(s)/group(s) used to modify database structure (including but\nnot necessarily limited to tables, indexes, storage, etc.) and logic modules\n(stored procedures, functions, triggers, links to software external to the\nDBMS, etc.) must be restricted to authorized users.\"\n  desc  \"If the DBMS were to allow any user to make changes to database\nstructure or logic, then those changes might be implemented without undergoing\nthe appropriate testing and approvals that are part of a robust change\nmanagement process.\n\n    Accordingly, only qualified and authorized individuals shall be allowed to\nobtain access to information system components for purposes of initiating\nchanges, including upgrades and modifications.\n\n    Unmanaged changes that occur to the database software libraries or\nconfiguration can lead to unauthorized or compromised installations.\n  \"\n  desc  \"check\", \"\n\n\n    To list the privileges, as the database administrator, run the following:\n     #GET /db/_security\n\n    If the privileges are exceed what user and groups should have, this is a\nfinding.\n  \"\n  desc  \"fix\", \"\n    Use the following command to set privileges correctly:\n\n    # PUT /{db}/_security\n\n    Example request:\n    shell> curl http://localhost:5984/pineapple/_security -X PUT -H\n'content-type: application/json' -H 'accept: application/json' -d\n'{\\\"admins\\\":{\\\"names\\\":[\\\"superuser\\\"],\\\"roles\\\":[\\\"admins\\\"]},\\\"members\\\":{\\\"names\\\":\n[\\\"user1\\\",\\\"user2\\\"],\\\"roles\\\": [\\\"developers\\\"]}}'\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000133-DB-000362\"\n  tag \"gid\": \"V-58129\"\n  tag \"rid\": \"SV-72559r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000133-DB-000362\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001499\"]\n  tag \"nist\": [\"CM-5 (6)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58129.rb"},"waiver_data":{},"results":[]},{"id":"V-58131","title":"The DBMS must be configured in accordance with the security\nconfiguration settings based on DoD security configuration and implementation\nguidance, including STIGs, NSA configuration guides, CTOs, DTMs, and IAVMs.","desc":"Configuring the DBMS to implement organization-wide security\nimplementation guides and security checklists ensures compliance with federal\nstandards and establishes a common security baseline across DoD that reflects\nthe most restrictive security posture consistent with operational requirements.\n\n    In addition to this SRG, sources of guidance on security and information\nassurance exist. These include NSA configuration guides, CTOs, DTMs, and IAVMs.\nThe DBMS must be configured in compliance with guidance from all such relevant\nsources.","descriptions":[{"label":"default","data":"Configuring the DBMS to implement organization-wide security\nimplementation guides and security checklists ensures compliance with federal\nstandards and establishes a common security baseline across DoD that reflects\nthe most restrictive security posture consistent with operational requirements.\n\n    In addition to this SRG, sources of guidance on security and information\nassurance exist. These include NSA configuration guides, CTOs, DTMs, and IAVMs.\nThe DBMS must be configured in compliance with guidance from all such relevant\nsources."},{"label":"check","data":"Review CouchDB documentation and configuration to determine if CouchDB is\nconfigured in accordance with DoD security configuration and implementation\nguidance, including STIGs, NSA configuration guides, CTOs, and DTMs and IAVMs.\n\n    If CouchDB is not configured in accordance with security configuration\nsettings, this is a finding."},{"label":"fix","data":"Configure CouchDB in accordance with DoD security configuration\nand implementation guidance, including STIGs, NSA configuration guides, CTOs,\nand DTMs and IAVMs."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000516-DB-000363","gid":"V-58131","rid":"SV-72561r1_rule","stig_id":"SRG-APP-000516-DB-000363","fix_id":null,"cci":["CCI-000366"],"nist":["CM-6 b","Rev_4"]},"code":"control \"V-58131\" do\n  title \"The DBMS must be configured in accordance with the security\nconfiguration settings based on DoD security configuration and implementation\nguidance, including STIGs, NSA configuration guides, CTOs, DTMs, and IAVMs.\"\n  desc  \"Configuring the DBMS to implement organization-wide security\nimplementation guides and security checklists ensures compliance with federal\nstandards and establishes a common security baseline across DoD that reflects\nthe most restrictive security posture consistent with operational requirements.\n\n    In addition to this SRG, sources of guidance on security and information\nassurance exist. These include NSA configuration guides, CTOs, DTMs, and IAVMs.\nThe DBMS must be configured in compliance with guidance from all such relevant\nsources.\n  \"\n  desc  \"check\", \"\n    Review CouchDB documentation and configuration to determine if CouchDB is\nconfigured in accordance with DoD security configuration and implementation\nguidance, including STIGs, NSA configuration guides, CTOs, and DTMs and IAVMs.\n\n    If CouchDB is not configured in accordance with security configuration\nsettings, this is a finding.\n  \"\n  desc  \"fix\", \"Configure CouchDB in accordance with DoD security configuration\nand implementation guidance, including STIGs, NSA configuration guides, CTOs,\nand DTMs and IAVMs.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000516-DB-000363\"\n  tag \"gid\": \"V-58131\"\n  tag \"rid\": \"SV-72561r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000516-DB-000363\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000366\"]\n  tag \"nist\": [\"CM-6 b\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58131.rb"},"waiver_data":{},"results":[]},{"id":"V-58133","title":"The DBMS must disable network functions, ports, protocols, and\nservices deemed by the organization to be nonsecure, in accord with the Ports,\nProtocols, and Services Management (PPSM) guidance.","desc":"Use of nonsecure network functions, ports, protocols, and services\nexposes the system to avoidable threats.","descriptions":[{"label":"default","data":"Use of nonsecure network functions, ports, protocols, and services\nexposes the system to avoidable threats."}],"impact":0.5,"refs":[],"tags":{},"code":"control \"V-58133\" do\n  title \"The DBMS must disable network functions, ports, protocols, and\nservices deemed by the organization to be nonsecure, in accord with the Ports,\nProtocols, and Services Management (PPSM) guidance.\"\n  desc  \"Use of nonsecure network functions, ports, protocols, and services\nexposes the system to avoidable threats.\"\n  desc  \"check\", \"\n    Review the organization-defined network functions, ports, protocols, and\nservices deemed by to be nonsecure, in accord with the Ports, Protocols, and\nServices Management (PPSM) guidance.\n\n    # find . -name \\\"default.ini\\\"\\t\n    # grep \\x91chttpd\\x92 section\n    # grep \\x91port\\x92\n\n    If any protocol is prohibited by the PPSM guidance and is enabled, this is\na finding.\n\n  \"\n  desc  \"fix\", \"Disable nonsecure network functions, ports, protovols, and\nservies.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000383-DB-000364\"\n  tag \"gid\": \"V-58133\"\n  tag \"rid\": \"SV-72563r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000383-DB-000364\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001762\"]\n  tag \"nist\": [\"CM-7 (1) (b)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58133.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Control Source Code Error C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58133.rb:3 ","run_time":8.23e-05,"start_time":"2020-07-17T16:26:10-04:00","message":"invalid byte sequence in UTF-8","exception":"RuntimeError","backtrace":["C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/rule.rb:61:in `block (2 levels) in initialize'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `instance_exec'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `block in with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `block in with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:619:in `run_around_example_hooks_for'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:254:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:644:in `block in run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:606:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (3 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (2 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/configuration.rb:2058:in `with_suite_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:116:in `block in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/reporter.rb:74:in `report'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:115:in `run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner_rspec.rb:82:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:159:in `run_tests'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:130:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/kitchen-inspec-2.0.0/lib/kitchen/verifier/inspec.rb:105:in `call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:459:in `block in verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:552:in `synchronize_or_call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:514:in `block in action'","C:/opscode/chef-workstation/embedded/lib/ruby/2.7.0/benchmark.rb:293:in `measure'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:513:in `action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:451:in `verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:382:in `block (2 levels) in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/lifecycle_hooks.rb:45:in `run_with_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:381:in `block in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `each'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:162:in `verify'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `public_send'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `run_action_in_thread'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:169:in `block (2 levels) in run_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/logging-2.2.2/lib/logging/diagnostic_context.rb:474:in `block in create_with_logging_context'"]}]},{"id":"V-58135","title":"The DBMS must prohibit user installation of logic modules (stored\nprocedures, functions, triggers, views, etc.) without explicit privileged\nstatus.","desc":"Allowing regular users to install software, without explicit\nprivileges, creates the risk that untested or potentially malicious software\nwill be installed on the system. Explicit privileges (escalated or\nadministrative privileges) provide the regular user with explicit capabilities\nand control that exceed the rights of a regular user.\n\n    DBMS functionality and the nature and requirements of databases will vary;\nso while users are not permitted to install unapproved software, there may be\ninstances where the organization allows the user to install approved software\npackages such as from an approved software repository. The requirements for\nproduction servers will be more restrictive than those used for development and\nresearch.\n\n    The DBMS must enforce software installation by users based upon what types\nof software installations are permitted (e.g., updates and security patches to\nexisting software) and what types of installations are prohibited (e.g.,\nsoftware whose pedigree with regard to being potentially malicious is unknown\nor suspect) by the organization).\n\n    In the case of a database management system, this requirement covers stored\nprocedures, functions, triggers, views, etc.","descriptions":[{"label":"default","data":"Allowing regular users to install software, without explicit\nprivileges, creates the risk that untested or potentially malicious software\nwill be installed on the system. Explicit privileges (escalated or\nadministrative privileges) provide the regular user with explicit capabilities\nand control that exceed the rights of a regular user.\n\n    DBMS functionality and the nature and requirements of databases will vary;\nso while users are not permitted to install unapproved software, there may be\ninstances where the organization allows the user to install approved software\npackages such as from an approved software repository. The requirements for\nproduction servers will be more restrictive than those used for development and\nresearch.\n\n    The DBMS must enforce software installation by users based upon what types\nof software installations are permitted (e.g., updates and security patches to\nexisting software) and what types of installations are prohibited (e.g.,\nsoftware whose pedigree with regard to being potentially malicious is unknown\nor suspect) by the organization).\n\n    In the case of a database management system, this requirement covers stored\nprocedures, functions, triggers, views, etc."},{"label":"check","data":"If CouchDB supports only software development, experimentation and/or\ndeveloper-level testing (that is, excluding production systems, integration\ntesting, stress testing, and user acceptance testing), this is not a finding.\n\n    Review CouchDB and database security settings with respect to\nnon-administrative users' ability to create, alter, or replace logic modules,\nto include but not necessarily only stored procedures, functions, triggers, and\nviews.\n\n    To list the privileges for all tables and schemas, as the database\nadministrator, run the following:\n     #GET /db/_security\n\n    If the privileges are exceed what user and groups should have, this is a\nfinding."},{"label":"fix","data":"Use the following command to set privileges correctly:\n\n    # PUT /{db}/_security\n\n    Example request:\n    shell> curl http://localhost:5984/pineapple/_security -X PUT -H\n'content-type: application/json' -H 'accept: application/json' -d\n'{\"admins\":{\"names\":[\"superuser\"],\"roles\":[\"admins\"]},\"members\":{\"names\":\n[\"user1\",\"user2\"],\"roles\": [\"developers\"]}}'"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000378-DB-000365","gid":"V-58135","rid":"SV-72565r1_rule","stig_id":"SRG-APP-000378-DB-000365","fix_id":null,"cci":["CCI-001812"],"nist":["CM-11 (2)","Rev_4"]},"code":"control \"V-58135\" do\n  title \"The DBMS must prohibit user installation of logic modules (stored\nprocedures, functions, triggers, views, etc.) without explicit privileged\nstatus.\"\n  desc  \"Allowing regular users to install software, without explicit\nprivileges, creates the risk that untested or potentially malicious software\nwill be installed on the system. Explicit privileges (escalated or\nadministrative privileges) provide the regular user with explicit capabilities\nand control that exceed the rights of a regular user.\n\n    DBMS functionality and the nature and requirements of databases will vary;\nso while users are not permitted to install unapproved software, there may be\ninstances where the organization allows the user to install approved software\npackages such as from an approved software repository. The requirements for\nproduction servers will be more restrictive than those used for development and\nresearch.\n\n    The DBMS must enforce software installation by users based upon what types\nof software installations are permitted (e.g., updates and security patches to\nexisting software) and what types of installations are prohibited (e.g.,\nsoftware whose pedigree with regard to being potentially malicious is unknown\nor suspect) by the organization).\n\n    In the case of a database management system, this requirement covers stored\nprocedures, functions, triggers, views, etc.\n  \"\n  desc  \"check\", \"\n    If CouchDB supports only software development, experimentation and/or\ndeveloper-level testing (that is, excluding production systems, integration\ntesting, stress testing, and user acceptance testing), this is not a finding.\n\n    Review CouchDB and database security settings with respect to\nnon-administrative users' ability to create, alter, or replace logic modules,\nto include but not necessarily only stored procedures, functions, triggers, and\nviews.\n\n    To list the privileges for all tables and schemas, as the database\nadministrator, run the following:\n     #GET /db/_security\n\n    If the privileges are exceed what user and groups should have, this is a\nfinding.\n  \"\n  desc  \"fix\", \"\n    Use the following command to set privileges correctly:\n\n    # PUT /{db}/_security\n\n    Example request:\n    shell> curl http://localhost:5984/pineapple/_security -X PUT -H\n'content-type: application/json' -H 'accept: application/json' -d\n'{\\\"admins\\\":{\\\"names\\\":[\\\"superuser\\\"],\\\"roles\\\":[\\\"admins\\\"]},\\\"members\\\":{\\\"names\\\":\n[\\\"user1\\\",\\\"user2\\\"],\\\"roles\\\": [\\\"developers\\\"]}}'\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000378-DB-000365\"\n  tag \"gid\": \"V-58135\"\n  tag \"rid\": \"SV-72565r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000378-DB-000365\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001812\"]\n  tag \"nist\": [\"CM-11 (2)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58135.rb"},"waiver_data":{},"results":[]},{"id":"V-58137","title":"The DBMS must prohibit the use of cached authenticators after an\norganization-defined time period.","desc":"If cached authentication information is out-of-date, the validity of\nthe authentication information may be questionable.","descriptions":[{"label":"default","data":"If cached authentication information is out-of-date, the validity of\nthe authentication information may be questionable."}],"impact":0.5,"refs":[],"tags":{},"code":"control \"V-58137\" do\n  title \"The DBMS must prohibit the use of cached authenticators after an\norganization-defined time period.\"\n  desc  \"If cached authentication information is out-of-date, the validity of\nthe authentication information may be questionable.\"\n  desc  \"check\", \"\n     Review system settings to determine whether the organization-defined limit\nfor cached authentication is implemented.\n    Check for the following:\n\n    # find . -name \\\"local.ini\\\"\n\n    #grep \\x91couch_httpd_auth\\x92 section. Verify that the auth_cache_size\nvariable is set to 50 or has a defined limit.\n\n    If it is not implemented, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Modify system settings to implement the organization-defined limit on the\nlifetime of cached authenticators.\n    # find . -name \\\"local.ini\\\"\n    # grep \\x91couch_httpd_auth\\x92 section <local.ini path>\n    # Set the \\x91auth_cache_size\\x92 variable = 50\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000400-DB-000367\"\n  tag \"gid\": \"V-58137\"\n  tag \"rid\": \"SV-72567r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000400-DB-000367\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002007\"]\n  tag \"nist\": [\"IA-5 (13)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58137.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Control Source Code Error C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58137.rb:3 ","run_time":4.96e-05,"start_time":"2020-07-17T16:26:10-04:00","message":"invalid byte sequence in UTF-8","exception":"RuntimeError","backtrace":["C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/rule.rb:61:in `block (2 levels) in initialize'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `instance_exec'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `block in with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `block in with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:619:in `run_around_example_hooks_for'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:254:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:644:in `block in run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:606:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (3 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (2 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/configuration.rb:2058:in `with_suite_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:116:in `block in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/reporter.rb:74:in `report'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:115:in `run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner_rspec.rb:82:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:159:in `run_tests'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:130:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/kitchen-inspec-2.0.0/lib/kitchen/verifier/inspec.rb:105:in `call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:459:in `block in verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:552:in `synchronize_or_call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:514:in `block in action'","C:/opscode/chef-workstation/embedded/lib/ruby/2.7.0/benchmark.rb:293:in `measure'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:513:in `action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:451:in `verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:382:in `block (2 levels) in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/lifecycle_hooks.rb:45:in `run_with_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:381:in `block in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `each'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:162:in `verify'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `public_send'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `run_action_in_thread'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:169:in `block (2 levels) in run_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/logging-2.2.2/lib/logging/diagnostic_context.rb:474:in `block in create_with_logging_context'"]}]},{"id":"V-58147","title":"The DBMS must require users to re-authenticate when\norganization-defined circumstances or situations require re-authentication.","desc":"The DoD standard for authentication of an interactive user is the\npresentation of a Common Access Card (CAC) or other physical token bearing a\nvalid, current, DoD-issued Public Key Infrastructure (PKI) certificate, coupled\nwith a Personal Identification Number (PIN) to be entered by the user at the\nbeginning of each session and whenever re-authentication is required.\n\n    Without re-authentication, users may access resources or perform tasks for\nwhich they do not have authorization.\n\n    When applications provide the capability to change security roles or\nescalate the functional capability of the application, it is critical the user\nre-authenticate.\n\n    In addition to the re-authentication requirements associated with session\nlocks, organizations may require re-authentication of individuals and/or\ndevices in other situations, including (but not limited to) the following\ncircumstances:\n\n    (i) When authenticators change;\n    (ii) When roles change;\n    (iii) When security categories of information systems change;\n    (iv) When the execution of privileged functions occurs;\n    (v) After a fixed period of time; or\n    (vi) Periodically.\n\n    Within the DoD, the minimum circumstances requiring re-authentication are\nprivilege escalation and role changes.","descriptions":[{"label":"default","data":"The DoD standard for authentication of an interactive user is the\npresentation of a Common Access Card (CAC) or other physical token bearing a\nvalid, current, DoD-issued Public Key Infrastructure (PKI) certificate, coupled\nwith a Personal Identification Number (PIN) to be entered by the user at the\nbeginning of each session and whenever re-authentication is required.\n\n    Without re-authentication, users may access resources or perform tasks for\nwhich they do not have authorization.\n\n    When applications provide the capability to change security roles or\nescalate the functional capability of the application, it is critical the user\nre-authenticate.\n\n    In addition to the re-authentication requirements associated with session\nlocks, organizations may require re-authentication of individuals and/or\ndevices in other situations, including (but not limited to) the following\ncircumstances:\n\n    (i) When authenticators change;\n    (ii) When roles change;\n    (iii) When security categories of information systems change;\n    (iv) When the execution of privileged functions occurs;\n    (v) After a fixed period of time; or\n    (vi) Periodically.\n\n    Within the DoD, the minimum circumstances requiring re-authentication are\nprivilege escalation and role changes."},{"label":"check","data":"Review organization-defined circumstances or situations that would require\nre-authentication.\n    If there are any circumstances under which a user is not required to\nre-authenticate when changing role or escalating privileges, this is a finding.\n\n    If the information owner has identified additional cases where\nre-authentication is needed, but there are circumstances where the system does\nnot ask the user to re-authenticate when those cases occur, this is a finding."},{"label":"fix","data":"Modify and/or configure CouchDB and related applications and tools so that\nusers are always required to re-authenticate when changing role or escalating\nprivileges.\n\n    Modify and/or configure CouchDB and related applications and tools so that\nusers are always required to re-authenticate when the specified cases needing\nreauthorization occur."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000389-DB-000372","gid":"V-58147","rid":"SV-72577r1_rule","stig_id":"SRG-APP-000389-DB-000372","fix_id":null,"cci":["CCI-002038"],"nist":["IA-11","Rev_4"]},"code":"control \"V-58147\" do\n  title \"The DBMS must require users to re-authenticate when\norganization-defined circumstances or situations require re-authentication.\"\n  desc  \"The DoD standard for authentication of an interactive user is the\npresentation of a Common Access Card (CAC) or other physical token bearing a\nvalid, current, DoD-issued Public Key Infrastructure (PKI) certificate, coupled\nwith a Personal Identification Number (PIN) to be entered by the user at the\nbeginning of each session and whenever re-authentication is required.\n\n    Without re-authentication, users may access resources or perform tasks for\nwhich they do not have authorization.\n\n    When applications provide the capability to change security roles or\nescalate the functional capability of the application, it is critical the user\nre-authenticate.\n\n    In addition to the re-authentication requirements associated with session\nlocks, organizations may require re-authentication of individuals and/or\ndevices in other situations, including (but not limited to) the following\ncircumstances:\n\n    (i) When authenticators change;\n    (ii) When roles change;\n    (iii) When security categories of information systems change;\n    (iv) When the execution of privileged functions occurs;\n    (v) After a fixed period of time; or\n    (vi) Periodically.\n\n    Within the DoD, the minimum circumstances requiring re-authentication are\nprivilege escalation and role changes.\n  \"\n  desc  \"check\", \"\n    Review organization-defined circumstances or situations that would require\nre-authentication.\n    If there are any circumstances under which a user is not required to\nre-authenticate when changing role or escalating privileges, this is a finding.\n\n    If the information owner has identified additional cases where\nre-authentication is needed, but there are circumstances where the system does\nnot ask the user to re-authenticate when those cases occur, this is a finding.\n\n\n  \"\n  desc  \"fix\", \"\n    Modify and/or configure CouchDB and related applications and tools so that\nusers are always required to re-authenticate when changing role or escalating\nprivileges.\n\n    Modify and/or configure CouchDB and related applications and tools so that\nusers are always required to re-authenticate when the specified cases needing\nreauthorization occur.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000389-DB-000372\"\n  tag \"gid\": \"V-58147\"\n  tag \"rid\": \"SV-72577r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000389-DB-000372\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002038\"]\n  tag \"nist\": [\"IA-11\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58147.rb"},"waiver_data":{},"results":[]},{"id":"V-58149","title":"The DBMS must prevent unauthorized and unintended information transfer\nvia shared system resources.","desc":"The purpose of this control is to prevent information, including\nencrypted representations of information, produced by the actions of a prior\nuser/role (or the actions of a process acting on behalf of a prior user/role)\nfrom being available to any current user/role (or current process) that obtains\naccess to a shared system resource (e.g., registers, main memory, secondary\nstorage) after the resource has been released back to the information system.\nControl of information in shared resources is also referred to as object reuse.","descriptions":[{"label":"default","data":"The purpose of this control is to prevent information, including\nencrypted representations of information, produced by the actions of a prior\nuser/role (or the actions of a process acting on behalf of a prior user/role)\nfrom being available to any current user/role (or current process) that obtains\naccess to a shared system resource (e.g., registers, main memory, secondary\nstorage) after the resource has been released back to the information system.\nControl of information in shared resources is also referred to as object reuse."},{"label":"check","data":"Review CouchDB architecture to find out if and how it protects the private\nresources of one process or user (such as working memory, temporary tables,\nuncommitted data) from unauthorized access by another user or process.\n    Check for the following:\n\n    # find . -name \"local.ini\"\n    # grep \"ssl section\"\n    # grep \"enable =\"\n    If enable is not set to true, this is a finding."},{"label":"fix","data":"Deploy a DBMS capable of effectively protecting the private resources of\none process or user from unauthorized access by another user or process.\n\n    Configure CouchDB to effectively protect the private resources of one\nprocess or user from unauthorized access by another user or process."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000243-DB-000373","gid":"V-58149","rid":"SV-72579r1_rule","stig_id":"SRG-APP-000243-DB-000373","fix_id":null,"cci":["CCI-001090"],"nist":["SC-4","Rev_4"]},"code":"control \"V-58149\" do\n  title \"The DBMS must prevent unauthorized and unintended information transfer\nvia shared system resources.\"\n  desc  \"The purpose of this control is to prevent information, including\nencrypted representations of information, produced by the actions of a prior\nuser/role (or the actions of a process acting on behalf of a prior user/role)\nfrom being available to any current user/role (or current process) that obtains\naccess to a shared system resource (e.g., registers, main memory, secondary\nstorage) after the resource has been released back to the information system.\nControl of information in shared resources is also referred to as object reuse.\"\n  desc  \"check\", \"\n    Review CouchDB architecture to find out if and how it protects the private\nresources of one process or user (such as working memory, temporary tables,\nuncommitted data) from unauthorized access by another user or process.\n    Check for the following:\n\n    # find . -name \\\"local.ini\\\"\n    # grep \\\"ssl section\\\"\n    # grep \\\"enable =\\\"\n    If enable is not set to true, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Deploy a DBMS capable of effectively protecting the private resources of\none process or user from unauthorized access by another user or process.\n\n    Configure CouchDB to effectively protect the private resources of one\nprocess or user from unauthorized access by another user or process.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000243-DB-000373\"\n  tag \"gid\": \"V-58149\"\n  tag \"rid\": \"SV-72579r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000243-DB-000373\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001090\"]\n  tag \"nist\": [\"SC-4\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58149.rb"},"waiver_data":{},"results":[]},{"id":"V-58151","title":"Access to database files must be limited to relevant processes and to\nauthorized, administrative users.","desc":"Applications, including DBMSs, must prevent unauthorized and\nunintended information transfer via shared system resources. Permitting only\nDBMS processes and authorized, administrative users to have access to the files\nwhere the database resides helps ensure that those files are not shared\ninappropriately and are not open to backdoor access and manipulation.","descriptions":[{"label":"default","data":"Applications, including DBMSs, must prevent unauthorized and\nunintended information transfer via shared system resources. Permitting only\nDBMS processes and authorized, administrative users to have access to the files\nwhere the database resides helps ensure that those files are not shared\ninappropriately and are not open to backdoor access and manipulation."},{"label":"check","data":"Review the permissions granted to users by the operating system/file system\non the database files, database log files and database backup files.\n    Check for the following:\n\n    Execute the command #GET /db/_security\n    Verify the admins are authorized, administrative users. If not, this is a\nfinding.\n    # find .-name \"default.ini\"\n    # grep \"admin_only_all_dbs\" default.ini\n    If this is commented out, or not set equal to true, this is a finding."},{"label":"fix","data":"Configure the permissions granted by the operating system/file system on\nthe database files, database log files, and database backup files so that only\nrelevant system accounts and authorized system administrators and database\nadministrators with a need to know are permitted to read/view these files.\n    # find .-name \"default.ini\"\n    # grep \"admin_only_all_dbs\" default.ini"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000243-DB-000374","gid":"V-58151","rid":"SV-72581r1_rule","stig_id":"SRG-APP-000243-DB-000374","fix_id":null,"cci":["CCI-001090"],"nist":["SC-4","Rev_4"]},"code":"control \"V-58151\" do\n  title \"Access to database files must be limited to relevant processes and to\nauthorized, administrative users.\"\n  desc  \"Applications, including DBMSs, must prevent unauthorized and\nunintended information transfer via shared system resources. Permitting only\nDBMS processes and authorized, administrative users to have access to the files\nwhere the database resides helps ensure that those files are not shared\ninappropriately and are not open to backdoor access and manipulation.\"\n  desc  \"check\", \"\n    Review the permissions granted to users by the operating system/file system\non the database files, database log files and database backup files.\n    Check for the following:\n\n    Execute the command #GET /db/_security\n    Verify the admins are authorized, administrative users. If not, this is a\nfinding.\n    # find .-name \\\"default.ini\\\"\n    # grep \\\"admin_only_all_dbs\\\" default.ini\n    If this is commented out, or not set equal to true, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure the permissions granted by the operating system/file system on\nthe database files, database log files, and database backup files so that only\nrelevant system accounts and authorized system administrators and database\nadministrators with a need to know are permitted to read/view these files.\n    # find .-name \\\"default.ini\\\"\n    # grep \\\"admin_only_all_dbs\\\" default.ini\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000243-DB-000374\"\n  tag \"gid\": \"V-58151\"\n  tag \"rid\": \"SV-72581r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000243-DB-000374\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001090\"]\n  tag \"nist\": [\"SC-4\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58151.rb"},"waiver_data":{},"results":[]},{"id":"V-58153","title":"The DBMS must maintain the confidentiality and integrity of\ninformation during preparation for transmission.","desc":"Information can be either unintentionally or maliciously disclosed or\nmodified during preparation for transmission, including, for example, during\naggregation, at protocol transformation points, and during packing/unpacking.\nThese unauthorized disclosures or modifications compromise the confidentiality\nor integrity of the information.\n\n    Use of this requirement will be limited to situations where the data owner\nhas a strict requirement for ensuring data integrity and confidentiality is\nmaintained at every step of the data transfer and handling process.\n\n    When transmitting data, the DBMS, associated applications, and\ninfrastructure must leverage transmission protection mechanisms.","descriptions":[{"label":"default","data":"Information can be either unintentionally or maliciously disclosed or\nmodified during preparation for transmission, including, for example, during\naggregation, at protocol transformation points, and during packing/unpacking.\nThese unauthorized disclosures or modifications compromise the confidentiality\nor integrity of the information.\n\n    Use of this requirement will be limited to situations where the data owner\nhas a strict requirement for ensuring data integrity and confidentiality is\nmaintained at every step of the data transfer and handling process.\n\n    When transmitting data, the DBMS, associated applications, and\ninfrastructure must leverage transmission protection mechanisms."},{"label":"check","data":"Check for the following:\n\n# find . -name \"local.ini\"\n# grep \"ssl section\"\n# grep \"enable =\"\nIf this is not set equal to true, this is a finding."},{"label":"fix","data":"Configure CouchDB to use SSL\n# find . -name \"local.ini\"\n# set \"enable=true\""}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000441-DB-000378","gid":"V-58153","rid":"SV-72583r1_rule","stig_id":"SRG-APP-000441-DB-000378","fix_id":null,"cci":["CCI-002420"],"nist":["SC-8 (2)","Rev_4"]},"code":"control \"V-58153\" do\n  title \"The DBMS must maintain the confidentiality and integrity of\ninformation during preparation for transmission.\"\n  desc  \"Information can be either unintentionally or maliciously disclosed or\nmodified during preparation for transmission, including, for example, during\naggregation, at protocol transformation points, and during packing/unpacking.\nThese unauthorized disclosures or modifications compromise the confidentiality\nor integrity of the information.\n\n    Use of this requirement will be limited to situations where the data owner\nhas a strict requirement for ensuring data integrity and confidentiality is\nmaintained at every step of the data transfer and handling process.\n\n    When transmitting data, the DBMS, associated applications, and\ninfrastructure must leverage transmission protection mechanisms.\n  \"\n  desc  \"check\", \"\n    Check for the following:\n\n    # find . -name \\\"local.ini\\\"\n    # grep \\\"ssl section\\\"\n    # grep \\\"enable =\\\"\n    If this is not set equal to true, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to use SSL\n    # find . -name \\\"local.ini\\\"\n    # set \\\"enable=true\\\"\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000441-DB-000378\"\n  tag \"gid\": \"V-58153\"\n  tag \"rid\": \"SV-72583r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000441-DB-000378\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002420\"]\n  tag \"nist\": [\"SC-8 (2)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58153.rb"},"waiver_data":{},"results":[]},{"id":"V-58155","title":"The DBMS must maintain the confidentiality and integrity of\ninformation during reception.","desc":"Information can be either unintentionally or maliciously disclosed or\nmodified during reception, including, for example, during aggregation, at\nprotocol transformation points, and during packing/unpacking. These\nunauthorized disclosures or modifications compromise the confidentiality or\nintegrity of the information.\n\n    This requirement applies only to those applications that are either\ndistributed or can allow access to data nonlocally. Use of this requirement\nwill be limited to situations where the data owner has a strict requirement for\nensuring data integrity and confidentiality is maintained at every step of the\ndata transfer and handling process.\n\n    When receiving data, the DBMS, associated applications, and infrastructure\nmust leverage protection mechanisms.","descriptions":[{"label":"default","data":"Information can be either unintentionally or maliciously disclosed or\nmodified during reception, including, for example, during aggregation, at\nprotocol transformation points, and during packing/unpacking. These\nunauthorized disclosures or modifications compromise the confidentiality or\nintegrity of the information.\n\n    This requirement applies only to those applications that are either\ndistributed or can allow access to data nonlocally. Use of this requirement\nwill be limited to situations where the data owner has a strict requirement for\nensuring data integrity and confidentiality is maintained at every step of the\ndata transfer and handling process.\n\n    When receiving data, the DBMS, associated applications, and infrastructure\nmust leverage protection mechanisms."},{"label":"check","data":"Check for the following:\n\n# find . -name \"local.ini\"\n# grep \"ssl section\"\n# grep \"enable =\"\nIf this is not set equal to true, this is a finding."},{"label":"fix","data":"Configure CouchDB to use SSL\n# find . -name \"local.ini\"\n# set \"enable=true\""}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000442-DB-000379","gid":"V-58155","rid":"SV-72585r1_rule","stig_id":"SRG-APP-000442-DB-000379","fix_id":null,"cci":["CCI-002422"],"nist":["SC-8 (2)","Rev_4"]},"code":"control \"V-58155\" do\n  title \"The DBMS must maintain the confidentiality and integrity of\ninformation during reception.\"\n  desc  \"Information can be either unintentionally or maliciously disclosed or\nmodified during reception, including, for example, during aggregation, at\nprotocol transformation points, and during packing/unpacking. These\nunauthorized disclosures or modifications compromise the confidentiality or\nintegrity of the information.\n\n    This requirement applies only to those applications that are either\ndistributed or can allow access to data nonlocally. Use of this requirement\nwill be limited to situations where the data owner has a strict requirement for\nensuring data integrity and confidentiality is maintained at every step of the\ndata transfer and handling process.\n\n    When receiving data, the DBMS, associated applications, and infrastructure\nmust leverage protection mechanisms.\n  \"\n  desc  \"check\", \"\n    Check for the following:\n\n    # find . -name \\\"local.ini\\\"\n    # grep \\\"ssl section\\\"\n    # grep \\\"enable =\\\"\n    If this is not set equal to true, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to use SSL\n    # find . -name \\\"local.ini\\\"\n    # set \\\"enable=true\\\"\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000442-DB-000379\"\n  tag \"gid\": \"V-58155\"\n  tag \"rid\": \"SV-72585r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000442-DB-000379\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002422\"]\n  tag \"nist\": [\"SC-8 (2)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58155.rb"},"waiver_data":{},"results":[]},{"id":"V-58157","title":"The DBMS must use NSA-approved cryptography to protect classified\ninformation in accordance with the data owners requirements.","desc":"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    It is the responsibility of the data owner to assess the cryptography\nrequirements in light of applicable federal laws, Executive Orders, directives,\npolicies, regulations, and standards.\n\n    NSA-approved cryptography for classified networks is hardware based. This\nrequirement addresses the compatibility of a DBMS with the encryption devices.","descriptions":[{"label":"default","data":"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    It is the responsibility of the data owner to assess the cryptography\nrequirements in light of applicable federal laws, Executive Orders, directives,\npolicies, regulations, and standards.\n\n    NSA-approved cryptography for classified networks is hardware based. This\nrequirement addresses the compatibility of a DBMS with the encryption devices."},{"label":"check","data":"If CouchDB is deployed in an unclassified environment, this is not\napplicable (NA).\n\n    # find . -name \"local.ini\"\n    # grep \"ssl section\"\n    # grep \"enable =\"\n    If this is not set equal to true, this is a finding."},{"label":"fix","data":"Configure CouchDB to use SSL\n# find . -name \"local.ini\"\n# set \"enable=true\""}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000416-DB-000380","gid":"V-58157","rid":"SV-72587r1_rule","stig_id":"SRG-APP-000416-DB-000380","fix_id":null,"cci":["CCI-002450"],"nist":["SC-13","Rev_4"]},"code":"control \"V-58157\" do\n  title \"The DBMS must use NSA-approved cryptography to protect classified\ninformation in accordance with the data owners requirements.\"\n  desc  \"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    It is the responsibility of the data owner to assess the cryptography\nrequirements in light of applicable federal laws, Executive Orders, directives,\npolicies, regulations, and standards.\n\n    NSA-approved cryptography for classified networks is hardware based. This\nrequirement addresses the compatibility of a DBMS with the encryption devices.\n  \"\n  desc  \"check\", \"\n    If CouchDB is deployed in an unclassified environment, this is not\napplicable (NA).\n\n    # find . -name \\\"local.ini\\\"\n    # grep \\\"ssl section\\\"\n    # grep \\\"enable =\\\"\n    If this is not set equal to true, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to use SSL\n    # find . -name \\\"local.ini\\\"\n    # set \\\"enable=true\\\"\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000416-DB-000380\"\n  tag \"gid\": \"V-58157\"\n  tag \"rid\": \"SV-72587r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000416-DB-000380\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002450\"]\n  tag \"nist\": [\"SC-13\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58157.rb"},"waiver_data":{},"results":[]},{"id":"V-58159","title":"The DBMS must implement NIST FIPS 140-2 validated cryptographic\nmodules to provision digital signatures.","desc":"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    For detailed information, refer to NIST FIPS Publication 140-2, Security\nRequirements For Cryptographic Modules. Note that the product's cryptographic\nmodules must be validated and certified by NIST as FIPS-compliant.","descriptions":[{"label":"default","data":"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    For detailed information, refer to NIST FIPS Publication 140-2, Security\nRequirements For Cryptographic Modules. Note that the product's cryptographic\nmodules must be validated and certified by NIST as FIPS-compliant."}],"impact":0.5,"refs":[],"tags":{},"code":"control \"V-58159\" do\n  title \"The DBMS must implement NIST FIPS 140-2 validated cryptographic\nmodules to provision digital signatures.\"\n  desc  \"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    For detailed information, refer to NIST FIPS Publication 140-2, Security\nRequirements For Cryptographic Modules. Note that the product's cryptographic\nmodules must be validated and certified by NIST as FIPS-compliant.\n  \"\n  desc  \"check\", \"\n    Check for the following:\n    # find . -name \\\"local.ini\\\"\n\n    # cat /proc/sys/crypto/fips_enabled\n    Verify that the response of \\x91fips_enabled\\x92 is 1.\n\n    If it is not 1, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure OpenSSL to be FIPS compliant.\n    # sed -i 's/0/1/g' /proc/sys/crypto/fips_enabled\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000514-DB-000381\"\n  tag \"gid\": \"V-58159\"\n  tag \"rid\": \"SV-72589r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000514-DB-000381\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002450\"]\n  tag \"nist\": [\"SC-13\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58159.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Control Source Code Error C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58159.rb:3 ","run_time":4.82e-05,"start_time":"2020-07-17T16:26:10-04:00","message":"invalid byte sequence in UTF-8","exception":"RuntimeError","backtrace":["C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/rule.rb:61:in `block (2 levels) in initialize'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `instance_exec'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `block in with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `block in with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:619:in `run_around_example_hooks_for'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:254:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:644:in `block in run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:606:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (3 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (2 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/configuration.rb:2058:in `with_suite_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:116:in `block in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/reporter.rb:74:in `report'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:115:in `run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner_rspec.rb:82:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:159:in `run_tests'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:130:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/kitchen-inspec-2.0.0/lib/kitchen/verifier/inspec.rb:105:in `call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:459:in `block in verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:552:in `synchronize_or_call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:514:in `block in action'","C:/opscode/chef-workstation/embedded/lib/ruby/2.7.0/benchmark.rb:293:in `measure'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:513:in `action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:451:in `verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:382:in `block (2 levels) in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/lifecycle_hooks.rb:45:in `run_with_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:381:in `block in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `each'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:162:in `verify'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `public_send'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `run_action_in_thread'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:169:in `block (2 levels) in run_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/logging-2.2.2/lib/logging/diagnostic_context.rb:474:in `block in create_with_logging_context'"]}]},{"id":"V-58161","title":"The DBMS must implement NIST FIPS 140-2 validated cryptographic\nmodules to generate and validate cryptographic hashes.","desc":"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    For detailed information, refer to NIST FIPS Publication 140-2, Security\nRequirements For Cryptographic Modules. Note that the product's cryptographic\nmodules must be validated and certified by NIST as FIPS-compliant.","descriptions":[{"label":"default","data":"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    For detailed information, refer to NIST FIPS Publication 140-2, Security\nRequirements For Cryptographic Modules. Note that the product's cryptographic\nmodules must be validated and certified by NIST as FIPS-compliant."}],"impact":0.5,"refs":[],"tags":{},"code":"control \"V-58161\" do\n  title \"The DBMS must implement NIST FIPS 140-2 validated cryptographic\nmodules to generate and validate cryptographic hashes.\"\n  desc  \"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    For detailed information, refer to NIST FIPS Publication 140-2, Security\nRequirements For Cryptographic Modules. Note that the product's cryptographic\nmodules must be validated and certified by NIST as FIPS-compliant.\n  \"\n  desc  \"check\", \"\n    Check for the following:\n    # find . -name \\\"local.ini\\\"\n\n    # cat /proc/sys/crypto/fips_enabled\n    Verify that the response of \\x91fips_enabled\\x92 is 1.\n\n    If it is not 1, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure OpenSSL to be FIPS compliant.\n    # sed -i 's/0/1/g' /proc/sys/crypto/fips_enabled\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000514-DB-000382\"\n  tag \"gid\": \"V-58161\"\n  tag \"rid\": \"SV-72591r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000514-DB-000382\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002450\"]\n  tag \"nist\": [\"SC-13\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58161.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Control Source Code Error C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58161.rb:3 ","run_time":4.63e-05,"start_time":"2020-07-17T16:26:10-04:00","message":"invalid byte sequence in UTF-8","exception":"RuntimeError","backtrace":["C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/rule.rb:61:in `block (2 levels) in initialize'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `instance_exec'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `block in with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `block in with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:619:in `run_around_example_hooks_for'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:254:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:644:in `block in run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:606:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (3 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (2 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/configuration.rb:2058:in `with_suite_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:116:in `block in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/reporter.rb:74:in `report'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:115:in `run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner_rspec.rb:82:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:159:in `run_tests'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:130:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/kitchen-inspec-2.0.0/lib/kitchen/verifier/inspec.rb:105:in `call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:459:in `block in verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:552:in `synchronize_or_call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:514:in `block in action'","C:/opscode/chef-workstation/embedded/lib/ruby/2.7.0/benchmark.rb:293:in `measure'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:513:in `action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:451:in `verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:382:in `block (2 levels) in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/lifecycle_hooks.rb:45:in `run_with_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:381:in `block in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `each'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:162:in `verify'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `public_send'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `run_action_in_thread'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:169:in `block (2 levels) in run_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/logging-2.2.2/lib/logging/diagnostic_context.rb:474:in `block in create_with_logging_context'"]}]},{"id":"V-58163","title":"The DBMS must implement NIST FIPS 140-2 validated cryptographic\nmodules to protect unclassified information requiring confidentiality and\ncryptographic protection, in accordance with the data owners requirements.","desc":"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    It is the responsibility of the data owner to assess the cryptography\nrequirements in light of applicable federal laws, Executive Orders, directives,\npolicies, regulations, and standards.\n\n    For detailed information, refer to NIST FIPS Publication 140-2, Security\nRequirements For Cryptographic Modules. Note that the product's cryptographic\nmodules must be validated and certified by NIST as FIPS-compliant.","descriptions":[{"label":"default","data":"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    It is the responsibility of the data owner to assess the cryptography\nrequirements in light of applicable federal laws, Executive Orders, directives,\npolicies, regulations, and standards.\n\n    For detailed information, refer to NIST FIPS Publication 140-2, Security\nRequirements For Cryptographic Modules. Note that the product's cryptographic\nmodules must be validated and certified by NIST as FIPS-compliant."}],"impact":0.5,"refs":[],"tags":{},"code":"control \"V-58163\" do\n  title \"The DBMS must implement NIST FIPS 140-2 validated cryptographic\nmodules to protect unclassified information requiring confidentiality and\ncryptographic protection, in accordance with the data owners requirements.\"\n  desc  \"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    It is the responsibility of the data owner to assess the cryptography\nrequirements in light of applicable federal laws, Executive Orders, directives,\npolicies, regulations, and standards.\n\n    For detailed information, refer to NIST FIPS Publication 140-2, Security\nRequirements For Cryptographic Modules. Note that the product's cryptographic\nmodules must be validated and certified by NIST as FIPS-compliant.\n  \"\n  desc  \"check\", \"\n    Check for the following:\n    # find . -name \\\"local.ini\\\"\n\n    # cat /proc/sys/crypto/fips_enabled\n    Verify that the response of \\x91fips_enabled\\x92 is 1.\n\n    If it is not 1 , this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure OpenSSL to be FIPS compliant.\n    # sed -i 's/0/1/g' /proc/sys/crypto/fips_enabled\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000514-DB-000383\"\n  tag \"gid\": \"V-58163\"\n  tag \"rid\": \"SV-72593r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000514-DB-000383\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002450\"]\n  tag \"nist\": [\"SC-13\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58163.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Control Source Code Error C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58163.rb:3 ","run_time":4.49e-05,"start_time":"2020-07-17T16:26:10-04:00","message":"invalid byte sequence in UTF-8","exception":"RuntimeError","backtrace":["C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/rule.rb:61:in `block (2 levels) in initialize'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `instance_exec'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `block in with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `block in with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:619:in `run_around_example_hooks_for'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:254:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:644:in `block in run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:606:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (3 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (2 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/configuration.rb:2058:in `with_suite_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:116:in `block in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/reporter.rb:74:in `report'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:115:in `run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner_rspec.rb:82:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:159:in `run_tests'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:130:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/kitchen-inspec-2.0.0/lib/kitchen/verifier/inspec.rb:105:in `call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:459:in `block in verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:552:in `synchronize_or_call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:514:in `block in action'","C:/opscode/chef-workstation/embedded/lib/ruby/2.7.0/benchmark.rb:293:in `measure'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:513:in `action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:451:in `verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:382:in `block (2 levels) in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/lifecycle_hooks.rb:45:in `run_with_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:381:in `block in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `each'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:162:in `verify'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `public_send'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `run_action_in_thread'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:169:in `block (2 levels) in run_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/logging-2.2.2/lib/logging/diagnostic_context.rb:474:in `block in create_with_logging_context'"]}]},{"id":"V-58165","title":"The DBMS must maintain the authenticity of communications sessions by\nguarding against man-in-the-middle attacks that guess at Session ID values.","desc":"One class of man-in-the-middle, or session hijacking, attack involves\nthe adversary guessing at valid session identifiers based on patterns in\nidentifiers already known.\n\n    The preferred technique for thwarting guesses at Session IDs is the\ngeneration of unique session identifiers using a FIPS 140-2 approved random\nnumber generator.\n\n    However, it is recognized that available DBMS products do not all implement\nthe preferred technique yet may have other protections against session\nhijacking. Therefore, other techniques are acceptable, provided they are\ndemonstrated to be effective.","descriptions":[{"label":"default","data":"One class of man-in-the-middle, or session hijacking, attack involves\nthe adversary guessing at valid session identifiers based on patterns in\nidentifiers already known.\n\n    The preferred technique for thwarting guesses at Session IDs is the\ngeneration of unique session identifiers using a FIPS 140-2 approved random\nnumber generator.\n\n    However, it is recognized that available DBMS products do not all implement\nthe preferred technique yet may have other protections against session\nhijacking. Therefore, other techniques are acceptable, provided they are\ndemonstrated to be effective."},{"label":"check","data":"Review DBMS vendor documentation and system behavior (and if necessary,\nconsult vendor representatives) to determine whether CouchDB can provide\ndemonstrably effective protection against man-in-the-middle attacks that guess\nat session identifier values.\n\n    Review DBMS settings to determine whether protections against\nman-in-the-middle attacks that guess at session identifier values are enabled.\n\n    # find . -name \"local.ini\"\n    # grep \"ssl section\"\n    # grep \"enable =\"\n    If this is not set equal to true, this is a finding."},{"label":"fix","data":"Configure CouchDB to use SSL\n# find . -name \"local.ini\"\n# set \"enable=true\""}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000224-DB-000384","gid":"V-58165","rid":"SV-72595r1_rule","stig_id":"SRG-APP-000224-DB-000384","fix_id":null,"cci":["CCI-001188"],"nist":["SC-23 (3)","Rev_4"]},"code":"control \"V-58165\" do\n  title \"The DBMS must maintain the authenticity of communications sessions by\nguarding against man-in-the-middle attacks that guess at Session ID values.\"\n  desc  \"One class of man-in-the-middle, or session hijacking, attack involves\nthe adversary guessing at valid session identifiers based on patterns in\nidentifiers already known.\n\n    The preferred technique for thwarting guesses at Session IDs is the\ngeneration of unique session identifiers using a FIPS 140-2 approved random\nnumber generator.\n\n    However, it is recognized that available DBMS products do not all implement\nthe preferred technique yet may have other protections against session\nhijacking. Therefore, other techniques are acceptable, provided they are\ndemonstrated to be effective.\n  \"\n  desc  \"check\", \"\n     Review DBMS vendor documentation and system behavior (and if necessary,\nconsult vendor representatives) to determine whether CouchDB can provide\ndemonstrably effective protection against man-in-the-middle attacks that guess\nat session identifier values.\n\n    Review DBMS settings to determine whether protections against\nman-in-the-middle attacks that guess at session identifier values are enabled.\n\n    # find . -name \\\"local.ini\\\"\n    # grep \\\"ssl section\\\"\n    # grep \\\"enable =\\\"\n    If this is not set equal to true, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to use SSL\n    # find . -name \\\"local.ini\\\"\n    # set \\\"enable=true\\\"\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000224-DB-000384\"\n  tag \"gid\": \"V-58165\"\n  tag \"rid\": \"SV-72595r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000224-DB-000384\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001188\"]\n  tag \"nist\": [\"SC-23 (3)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58165.rb"},"waiver_data":{},"results":[]},{"id":"V-58167","title":"The DBMS must only accept end entity certificates issued by DoD PKI or\nDoD-approved PKI Certification Authorities (CAs) for the establishment of all\nencrypted sessions.","desc":"Only DoD-approved external PKIs have been evaluated to ensure that\nthey have security controls and identity vetting procedures in place which are\nsufficient for DoD systems to rely on the identity asserted in the certificate.\n PKIs lacking sufficient security controls and identity vetting procedures risk\nbeing compromised and issuing certificates that enable adversaries to\nimpersonate legitimate users.\n\n    The authoritative list of DoD-approved PKIs is published at\nhttp://iase.disa.mil/pki-pke/interoperability.\n\n    This requirement focuses on communications protection for the DBMS session\nrather than for the network packet.","descriptions":[{"label":"default","data":"Only DoD-approved external PKIs have been evaluated to ensure that\nthey have security controls and identity vetting procedures in place which are\nsufficient for DoD systems to rely on the identity asserted in the certificate.\n PKIs lacking sufficient security controls and identity vetting procedures risk\nbeing compromised and issuing certificates that enable adversaries to\nimpersonate legitimate users.\n\n    The authoritative list of DoD-approved PKIs is published at\nhttp://iase.disa.mil/pki-pke/interoperability.\n\n    This requirement focuses on communications protection for the DBMS session\nrather than for the network packet."}],"impact":0.5,"refs":[],"tags":{},"code":"control \"V-58167\" do\n  title \"The DBMS must only accept end entity certificates issued by DoD PKI or\nDoD-approved PKI Certification Authorities (CAs) for the establishment of all\nencrypted sessions.\"\n  desc  \"Only DoD-approved external PKIs have been evaluated to ensure that\nthey have security controls and identity vetting procedures in place which are\nsufficient for DoD systems to rely on the identity asserted in the certificate.\n PKIs lacking sufficient security controls and identity vetting procedures risk\nbeing compromised and issuing certificates that enable adversaries to\nimpersonate legitimate users.\n\n    The authoritative list of DoD-approved PKIs is published at\nhttp://iase.disa.mil/pki-pke/interoperability.\n\n    This requirement focuses on communications protection for the DBMS session\nrather than for the network packet.\n  \"\n  desc  \"check\", \"\n    Check for the following:\n    # find . -name \\\"local.ini\\\"\n\n    #grep \\x91ssl\\x92 section\n    Verify \\\"enabled = true\\\"\n    #grep \\\"cert_file = /etc/couchdb/cert/couchdb.pem\\\"\n    Verify for certificates issued by DoD PKI or DoD-approved PKI Certification\nAuthorities (CAs)\n\n    If CouchDB will accept non-DoD approved PKI end-entity certificates, this\nis a finding\n  \"\n  desc  \"fix\", \"Revoke trust in any certificates not issued by a DoD-approved\ncertificate authority. Configure CouchDB to accept only DoD and DoD-approved\nPKI end-entity certificates.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000427-DB-000385\"\n  tag \"gid\": \"V-58167\"\n  tag \"rid\": \"SV-72597r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000427-DB-000385\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002470\"]\n  tag \"nist\": [\"SC-23 (5)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58167.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Control Source Code Error C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58167.rb:3 ","run_time":4.72e-05,"start_time":"2020-07-17T16:26:10-04:00","message":"invalid byte sequence in UTF-8","exception":"RuntimeError","backtrace":["C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/rule.rb:61:in `block (2 levels) in initialize'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `instance_exec'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:257:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `block in with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `block in with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:619:in `run_around_example_hooks_for'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/hooks.rb:481:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:460:in `with_around_example_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:503:in `with_around_and_singleton_context_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example.rb:254:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:644:in `block in run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:640:in `run_examples'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:606:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `block in run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/example_group.rb:607:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (3 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `map'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:121:in `block (2 levels) in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/configuration.rb:2058:in `with_suite_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:116:in `block in run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/reporter.rb:74:in `report'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/rspec-core-3.9.2/lib/rspec/core/runner.rb:115:in `run_specs'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner_rspec.rb:82:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:159:in `run_tests'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/inspec-core-4.21.1/lib/inspec/runner.rb:130:in `run'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/kitchen-inspec-2.0.0/lib/kitchen/verifier/inspec.rb:105:in `call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:459:in `block in verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:552:in `synchronize_or_call'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:514:in `block in action'","C:/opscode/chef-workstation/embedded/lib/ruby/2.7.0/benchmark.rb:293:in `measure'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:513:in `action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:451:in `verify_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:382:in `block (2 levels) in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/lifecycle_hooks.rb:45:in `run_with_hooks'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:381:in `block in transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `each'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:380:in `transition_to'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/instance.rb:162:in `verify'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `public_send'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:198:in `run_action_in_thread'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/test-kitchen-2.5.2/lib/kitchen/command.rb:169:in `block (2 levels) in run_action'","C:/opscode/chef-workstation/embedded/lib/ruby/gems/2.7.0/gems/logging-2.2.2/lib/logging/diagnostic_context.rb:474:in `block in create_with_logging_context'"]}]},{"id":"V-58169","title":"The DBMS must implement cryptographic mechanisms to prevent\nunauthorized modification of organization-defined information at rest (to\ninclude, at a minimum, PII and classified information) on organization-defined\ninformation system components.","desc":"DBMSs handling data requiring \"data at rest\" protections must employ\ncryptographic mechanisms to prevent unauthorized disclosure and modification of\nthe information at rest. These cryptographic mechanisms may be native to the\nDBMS or implemented via additional software or operating system/file system\nsettings, as appropriate to the situation.\n\n    Selection of a cryptographic mechanism is based on the need to protect the\nintegrity of organizational information. The strength of the mechanism is\ncommensurate with the security category and/or classification of the\ninformation. Organizations have the flexibility to either encrypt all\ninformation on storage devices (i.e., full disk encryption) or encrypt specific\ndata structures (e.g., files, records, or fields).\n\n    The decision whether and what to encrypt rests with the data owner and is\nalso influenced by the physical measures taken to secure the equipment and\nmedia on which the information resides.","descriptions":[{"label":"default","data":"DBMSs handling data requiring \"data at rest\" protections must employ\ncryptographic mechanisms to prevent unauthorized disclosure and modification of\nthe information at rest. These cryptographic mechanisms may be native to the\nDBMS or implemented via additional software or operating system/file system\nsettings, as appropriate to the situation.\n\n    Selection of a cryptographic mechanism is based on the need to protect the\nintegrity of organizational information. The strength of the mechanism is\ncommensurate with the security category and/or classification of the\ninformation. Organizations have the flexibility to either encrypt all\ninformation on storage devices (i.e., full disk encryption) or encrypt specific\ndata structures (e.g., files, records, or fields).\n\n    The decision whether and what to encrypt rests with the data owner and is\nalso influenced by the physical measures taken to secure the equipment and\nmedia on which the information resides."},{"label":"check","data":"Review the system documentation to determine whether the organization has\ndefined the information at rest that is to be protected from disclosure, which\nmust include, at a minimum, PII and classified information.\n\n    CouchDB does not encrypt data at rest other than passwords.\n\n    If no information is identified as requiring such protection, this is not a\nfinding.\n\n    Review the configuration of CouchDB, operating system/file system, and\nadditional software as relevant.\n\n    If any of the information defined as requiring cryptographic protection\nfrom modification is not encrypted in a manner that provides the required level\nof protection, this is a finding.\n\n    If disk or filesystem requires encryption, ask the system owner, DBA, and\nSA to demonstrate filesystem or disk level encryption.\n\n    If this is required and is not found, this is a finding."},{"label":"fix","data":"Either handled by device/ filesystem level encryption (OS) or\nusing a 3rd party encryption software"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000428-DB-000386","gid":"V-58169","rid":"SV-72599r1_rule","stig_id":"SRG-APP-000428-DB-000386","fix_id":null,"cci":["CCI-002475"],"nist":["SC-28 (1)","Rev_4"]},"code":"control \"V-58169\" do\n  title \"The DBMS must implement cryptographic mechanisms to prevent\nunauthorized modification of organization-defined information at rest (to\ninclude, at a minimum, PII and classified information) on organization-defined\ninformation system components.\"\n  desc  \"DBMSs handling data requiring \\\"data at rest\\\" protections must employ\ncryptographic mechanisms to prevent unauthorized disclosure and modification of\nthe information at rest. These cryptographic mechanisms may be native to the\nDBMS or implemented via additional software or operating system/file system\nsettings, as appropriate to the situation.\n\n    Selection of a cryptographic mechanism is based on the need to protect the\nintegrity of organizational information. The strength of the mechanism is\ncommensurate with the security category and/or classification of the\ninformation. Organizations have the flexibility to either encrypt all\ninformation on storage devices (i.e., full disk encryption) or encrypt specific\ndata structures (e.g., files, records, or fields).\n\n    The decision whether and what to encrypt rests with the data owner and is\nalso influenced by the physical measures taken to secure the equipment and\nmedia on which the information resides.\n  \"\n  desc  \"check\", \"\n    Review the system documentation to determine whether the organization has\ndefined the information at rest that is to be protected from disclosure, which\nmust include, at a minimum, PII and classified information.\n\n    CouchDB does not encrypt data at rest other than passwords.\n\n    If no information is identified as requiring such protection, this is not a\nfinding.\n\n    Review the configuration of CouchDB, operating system/file system, and\nadditional software as relevant.\n\n    If any of the information defined as requiring cryptographic protection\nfrom modification is not encrypted in a manner that provides the required level\nof protection, this is a finding.\n\n    If disk or filesystem requires encryption, ask the system owner, DBA, and\nSA to demonstrate filesystem or disk level encryption.\n\n    If this is required and is not found, this is a finding.\n  \"\n  desc  \"fix\", \"Either handled by device/ filesystem level encryption (OS) or\nusing a 3rd party encryption software\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000428-DB-000386\"\n  tag \"gid\": \"V-58169\"\n  tag \"rid\": \"SV-72599r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000428-DB-000386\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002475\"]\n  tag \"nist\": [\"SC-28 (1)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58169.rb"},"waiver_data":{},"results":[]},{"id":"V-58171","title":"The DBMS must implement cryptographic mechanisms preventing the\nunauthorized disclosure of organization-defined information at rest on\norganization-defined information system components.","desc":"DBMSs handling data requiring \"data at rest\" protections must employ\ncryptographic mechanisms to prevent unauthorized disclosure and modification of\nthe information at rest. These cryptographic mechanisms may be native to the\nDBMS or implemented via additional software or operating system/file system\nsettings, as appropriate to the situation.\n\n    Selection of a cryptographic mechanism is based on the need to protect the\nintegrity of organizational information. The strength of the mechanism is\ncommensurate with the security category and/or classification of the\ninformation. Organizations have the flexibility to either encrypt all\ninformation on storage devices (i.e., full disk encryption) or encrypt specific\ndata structures (e.g., files, records, or fields).\n\n    The decision whether and what to encrypt rests with the data owner and is\nalso influenced by the physical measures taken to secure the equipment and\nmedia on which the information resides.","descriptions":[{"label":"default","data":"DBMSs handling data requiring \"data at rest\" protections must employ\ncryptographic mechanisms to prevent unauthorized disclosure and modification of\nthe information at rest. These cryptographic mechanisms may be native to the\nDBMS or implemented via additional software or operating system/file system\nsettings, as appropriate to the situation.\n\n    Selection of a cryptographic mechanism is based on the need to protect the\nintegrity of organizational information. The strength of the mechanism is\ncommensurate with the security category and/or classification of the\ninformation. Organizations have the flexibility to either encrypt all\ninformation on storage devices (i.e., full disk encryption) or encrypt specific\ndata structures (e.g., files, records, or fields).\n\n    The decision whether and what to encrypt rests with the data owner and is\nalso influenced by the physical measures taken to secure the equipment and\nmedia on which the information resides."},{"label":"check","data":"Review the system documentation to determine whether the organization has\ndefined the information at rest that is to be protected from disclosure, which\nmust include, at a minimum, PII and classified information.\n    CouchDB does not encrypt data at rest other than passwords.\n\n    If no information is identified as requiring such protection, this is not a\nfinding.\n\n    Review the configuration of CouchDB, operating system/file system, and\nadditional software as relevant.\n\n    If any of the information defined as requiring cryptographic protection\nfrom modification is not encrypted in a manner that provides the required level\nof protection, this is a finding.\n\n    If disk or filesystem requires encryption, ask the system owner, DBA, and\nSA to demonstrate filesystem or disk level encryption.\n\n    If this is required and is not found, this is a finding."},{"label":"fix","data":"Either handled by device/ filesystem level encryption (OS) or using a 3rd\nparty encryption software\n\n    Secure the premises, equipment, and media to provide the required level of\nphysical protection."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000429-DB-000387","gid":"V-58171","rid":"SV-72601r1_rule","stig_id":"SRG-APP-000429-DB-000387","fix_id":null,"cci":["CCI-002476"],"nist":["SC-28 (1)","Rev_4"]},"code":"control \"V-58171\" do\n  title \"The DBMS must implement cryptographic mechanisms preventing the\nunauthorized disclosure of organization-defined information at rest on\norganization-defined information system components.\"\n  desc  \"DBMSs handling data requiring \\\"data at rest\\\" protections must employ\ncryptographic mechanisms to prevent unauthorized disclosure and modification of\nthe information at rest. These cryptographic mechanisms may be native to the\nDBMS or implemented via additional software or operating system/file system\nsettings, as appropriate to the situation.\n\n    Selection of a cryptographic mechanism is based on the need to protect the\nintegrity of organizational information. The strength of the mechanism is\ncommensurate with the security category and/or classification of the\ninformation. Organizations have the flexibility to either encrypt all\ninformation on storage devices (i.e., full disk encryption) or encrypt specific\ndata structures (e.g., files, records, or fields).\n\n    The decision whether and what to encrypt rests with the data owner and is\nalso influenced by the physical measures taken to secure the equipment and\nmedia on which the information resides.\n  \"\n  desc  \"check\", \"\n    Review the system documentation to determine whether the organization has\ndefined the information at rest that is to be protected from disclosure, which\nmust include, at a minimum, PII and classified information.\n    CouchDB does not encrypt data at rest other than passwords.\n\n    If no information is identified as requiring such protection, this is not a\nfinding.\n\n    Review the configuration of CouchDB, operating system/file system, and\nadditional software as relevant.\n\n    If any of the information defined as requiring cryptographic protection\nfrom modification is not encrypted in a manner that provides the required level\nof protection, this is a finding.\n\n    If disk or filesystem requires encryption, ask the system owner, DBA, and\nSA to demonstrate filesystem or disk level encryption.\n\n    If this is required and is not found, this is a finding.\n\n  \"\n  desc  \"fix\", \"\n    Either handled by device/ filesystem level encryption (OS) or using a 3rd\nparty encryption software\n\n    Secure the premises, equipment, and media to provide the required level of\nphysical protection.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000429-DB-000387\"\n  tag \"gid\": \"V-58171\"\n  tag \"rid\": \"SV-72601r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000429-DB-000387\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002476\"]\n  tag \"nist\": [\"SC-28 (1)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58171.rb"},"waiver_data":{},"results":[]},{"id":"V-58173","title":"The DBMS must maintain a separate execution domain for each executing\nprocess.","desc":"Database management systems can maintain separate execution domains\nfor each executing process by assigning each process a separate address space.\nEach process has a distinct address space so that communication between\nprocesses is controlled through the security functions, and one process cannot\nmodify the executing code of another process. Maintaining separate execution\ndomains for executing processes can be achieved, for example, by implementing\nseparate address spaces.","descriptions":[{"label":"default","data":"Database management systems can maintain separate execution domains\nfor each executing process by assigning each process a separate address space.\nEach process has a distinct address space so that communication between\nprocesses is controlled through the security functions, and one process cannot\nmodify the executing code of another process. Maintaining separate execution\ndomains for executing processes can be achieved, for example, by implementing\nseparate address spaces."},{"label":"check","data":"Review CouchDB architecture to find out if and how it protects the private\nresources of one process (such as working memory, temporary tables, uncommitted\ndata and, especially, executable code) from unauthorized access or modification\nby another user or process.\n\n    If it is not capable of maintaining a separate execution domain for each\nexecuting process, this is a finding.\n\n    If CouchDB is capable of maintaining a separate execution domain for each\nexecuting process, but is configured not to do so, this is a finding."},{"label":"fix","data":"Deploy a DBMS capable of maintaining a separate execution domain for each\nexecuting process.\n\n    If this is a configurable feature, configure CouchDB to implement it."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000431-DB-000388","gid":"V-58173","rid":"SV-72603r1_rule","stig_id":"SRG-APP-000431-DB-000388","fix_id":null,"cci":["CCI-002530"],"nist":["SC-39","Rev_4"]},"code":"control \"V-58173\" do\n  title \"The DBMS must maintain a separate execution domain for each executing\nprocess.\"\n  desc  \"Database management systems can maintain separate execution domains\nfor each executing process by assigning each process a separate address space.\nEach process has a distinct address space so that communication between\nprocesses is controlled through the security functions, and one process cannot\nmodify the executing code of another process. Maintaining separate execution\ndomains for executing processes can be achieved, for example, by implementing\nseparate address spaces.\"\n  desc  \"check\", \"\n    Review CouchDB architecture to find out if and how it protects the private\nresources of one process (such as working memory, temporary tables, uncommitted\ndata and, especially, executable code) from unauthorized access or modification\nby another user or process.\n\n    If it is not capable of maintaining a separate execution domain for each\nexecuting process, this is a finding.\n\n    If CouchDB is capable of maintaining a separate execution domain for each\nexecuting process, but is configured not to do so, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Deploy a DBMS capable of maintaining a separate execution domain for each\nexecuting process.\n\n    If this is a configurable feature, configure CouchDB to implement it.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000431-DB-000388\"\n  tag \"gid\": \"V-58173\"\n  tag \"rid\": \"SV-72603r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000431-DB-000388\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002530\"]\n  tag \"nist\": [\"SC-39\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58173.rb"},"waiver_data":{},"results":[]},{"id":"V-58175","title":"When updates are applied to the DBMS software, any software components\nthat have been replaced or made unnecessary must be removed.","desc":"Previous versions of DBMS components that are not removed from the\ninformation system after updates have been installed may be exploited by\nadversaries.\n\n    Some DBMSs' installation tools may remove older versions of software\nautomatically from the information system. In other cases, manual review and\nremoval will be required. In planning installations and upgrades, organizations\nmust include steps (automated, manual, or both) to identify and remove the\noutdated modules.\n\n    A transition period may be necessary when both the old and the new software\nare required. This should be taken into account in the planning.","descriptions":[{"label":"default","data":"Previous versions of DBMS components that are not removed from the\ninformation system after updates have been installed may be exploited by\nadversaries.\n\n    Some DBMSs' installation tools may remove older versions of software\nautomatically from the information system. In other cases, manual review and\nremoval will be required. In planning installations and upgrades, organizations\nmust include steps (automated, manual, or both) to identify and remove the\noutdated modules.\n\n    A transition period may be necessary when both the old and the new software\nare required. This should be taken into account in the planning."},{"label":"check","data":"Obtain evidence that software patches are consistently applied to CouchDB\nwithin the time frame defined for each patch.\n\n    To check software installed by packages, as the system administrator, run\nthe following command:\n\n    # RHEL/CENT Systems\n    $ sudo rpm -qa | grep couchdb\n\n    If multiple versions of postgres are installed but are unused, this is a\nfinding."},{"label":"fix","data":"Use package managers (RPM or apt-get) for installing CouchDB.\nUnused software is removed when updated."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000454-DB-000389","gid":"V-58175","rid":"SV-72605r1_rule","stig_id":"SRG-APP-000454-DB-000389","fix_id":null,"cci":["CCI-002617"],"nist":["SI-2 (6)","Rev_4"]},"code":"control \"V-58175\" do\n  title \"When updates are applied to the DBMS software, any software components\nthat have been replaced or made unnecessary must be removed.\"\n  desc  \"Previous versions of DBMS components that are not removed from the\ninformation system after updates have been installed may be exploited by\nadversaries.\n\n    Some DBMSs' installation tools may remove older versions of software\nautomatically from the information system. In other cases, manual review and\nremoval will be required. In planning installations and upgrades, organizations\nmust include steps (automated, manual, or both) to identify and remove the\noutdated modules.\n\n    A transition period may be necessary when both the old and the new software\nare required. This should be taken into account in the planning.\n  \"\n  desc  \"check\", \"\n    Obtain evidence that software patches are consistently applied to CouchDB\nwithin the time frame defined for each patch.\n\n    To check software installed by packages, as the system administrator, run\nthe following command:\n\n    # RHEL/CENT Systems\n    $ sudo rpm -qa | grep couchdb\n\n    If multiple versions of postgres are installed but are unused, this is a\nfinding.\n  \"\n  desc  \"fix\", \"Use package managers (RPM or apt-get) for installing CouchDB.\nUnused software is removed when updated.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000454-DB-000389\"\n  tag \"gid\": \"V-58175\"\n  tag \"rid\": \"SV-72605r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000454-DB-000389\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002617\"]\n  tag \"nist\": [\"SI-2 (6)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58175.rb"},"waiver_data":{},"results":[]},{"id":"V-58177","title":"Security-relevant software updates to the DBMS must be installed\nwithin the time period directed by an authoritative source (e.g. IAVM, CTOs,\nDTMs, and STIGs).","desc":"Security flaws with software applications, including database\nmanagement systems, are discovered daily. Vendors are constantly updating and\npatching their products to address newly discovered security vulnerabilities.\nOrganizations (including any contractor to the organization) are required to\npromptly install security-relevant software updates (e.g., patches, service\npacks, and hot fixes). Flaws discovered during security assessments, continuous\nmonitoring, incident response activities, or information system error handling\nmust also be addressed expeditiously.\n\n    Organization-defined time periods for updating security-relevant software\nmay vary based on a variety of factors including, for example, the security\ncategory of the information system or the criticality of the update (i.e.,\nseverity of the vulnerability related to the discovered flaw).\n\n    This requirement will apply to software patch management solutions that are\nused to install patches across the enclave and also to applications themselves\nthat are not part of that patch management solution. For example, many browsers\ntoday provide the capability to install their own patch software. Patch\ncriticality, as well as system criticality, will vary. Therefore, the tactical\nsituations regarding the patch management process will also vary. This means\nthat the time period utilized must be a configurable parameter. Time frames for\napplication of security-relevant software updates may be dependent upon the\nInformation Assurance Vulnerability Management (IAVM) process.\n\n    The application will be configured to check for and install\nsecurity-relevant software updates within an identified time period from the\navailability of the update. The specific time period will be defined by an\nauthoritative source (e.g. IAVM, CTOs, DTMs, and STIGs).","descriptions":[{"label":"default","data":"Security flaws with software applications, including database\nmanagement systems, are discovered daily. Vendors are constantly updating and\npatching their products to address newly discovered security vulnerabilities.\nOrganizations (including any contractor to the organization) are required to\npromptly install security-relevant software updates (e.g., patches, service\npacks, and hot fixes). Flaws discovered during security assessments, continuous\nmonitoring, incident response activities, or information system error handling\nmust also be addressed expeditiously.\n\n    Organization-defined time periods for updating security-relevant software\nmay vary based on a variety of factors including, for example, the security\ncategory of the information system or the criticality of the update (i.e.,\nseverity of the vulnerability related to the discovered flaw).\n\n    This requirement will apply to software patch management solutions that are\nused to install patches across the enclave and also to applications themselves\nthat are not part of that patch management solution. For example, many browsers\ntoday provide the capability to install their own patch software. Patch\ncriticality, as well as system criticality, will vary. Therefore, the tactical\nsituations regarding the patch management process will also vary. This means\nthat the time period utilized must be a configurable parameter. Time frames for\napplication of security-relevant software updates may be dependent upon the\nInformation Assurance Vulnerability Management (IAVM) process.\n\n    The application will be configured to check for and install\nsecurity-relevant software updates within an identified time period from the\navailability of the update. The specific time period will be defined by an\nauthoritative source (e.g. IAVM, CTOs, DTMs, and STIGs)."},{"label":"check","data":"Obtain evidence that software patches are consistently applied to CouchDB\nwithin the time frame defined for each patch.\n\n    Execute the following in the command line: curl [http address]\n    Verify the version is the most recent version"},{"label":"fix","data":"Update version of CouchDB"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000456-DB-000390","gid":"V-58177","rid":"SV-72607r1_rule","stig_id":"SRG-APP-000456-DB-000390","fix_id":null,"cci":["CCI-002605"],"nist":["SI-2 c","Rev_4"]},"code":"control \"V-58177\" do\n  title \"Security-relevant software updates to the DBMS must be installed\nwithin the time period directed by an authoritative source (e.g. IAVM, CTOs,\nDTMs, and STIGs).\"\n  desc  \"Security flaws with software applications, including database\nmanagement systems, are discovered daily. Vendors are constantly updating and\npatching their products to address newly discovered security vulnerabilities.\nOrganizations (including any contractor to the organization) are required to\npromptly install security-relevant software updates (e.g., patches, service\npacks, and hot fixes). Flaws discovered during security assessments, continuous\nmonitoring, incident response activities, or information system error handling\nmust also be addressed expeditiously.\n\n    Organization-defined time periods for updating security-relevant software\nmay vary based on a variety of factors including, for example, the security\ncategory of the information system or the criticality of the update (i.e.,\nseverity of the vulnerability related to the discovered flaw).\n\n    This requirement will apply to software patch management solutions that are\nused to install patches across the enclave and also to applications themselves\nthat are not part of that patch management solution. For example, many browsers\ntoday provide the capability to install their own patch software. Patch\ncriticality, as well as system criticality, will vary. Therefore, the tactical\nsituations regarding the patch management process will also vary. This means\nthat the time period utilized must be a configurable parameter. Time frames for\napplication of security-relevant software updates may be dependent upon the\nInformation Assurance Vulnerability Management (IAVM) process.\n\n    The application will be configured to check for and install\nsecurity-relevant software updates within an identified time period from the\navailability of the update. The specific time period will be defined by an\nauthoritative source (e.g. IAVM, CTOs, DTMs, and STIGs).\n  \"\n  desc  \"check\", \"\n    Obtain evidence that software patches are consistently applied to CouchDB\nwithin the time frame defined for each patch.\n\n    Execute the following in the command line: curl [http address]\n    Verify the version is the most recent version\n  \"\n  desc  \"fix\", 'Update version of CouchDB'\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000456-DB-000390\"\n  tag \"gid\": \"V-58177\"\n  tag \"rid\": \"SV-72607r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000456-DB-000390\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002605\"]\n  tag \"nist\": [\"SI-2 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58177.rb"},"waiver_data":{},"results":[]},{"id":"V-58179","title":"The DBMS and associated applications must reserve the use of dynamic\ncode execution for situations that require it.","desc":"With respect to database management systems, one class of threat is\nknown as SQL Injection, or more generally, code injection. It takes advantage\nof the dynamic execution capabilities of various programming languages,\nincluding dialects of SQL. In such cases, the attacker deduces the manner in\nwhich SQL statements are being processed, either from inside knowledge or by\nobserving system behavior in response to invalid inputs. When the attacker\nidentifies scenarios where SQL queries are being assembled by application code\n(which may be within the database or separate from it) and executed\ndynamically, the attacker is then able to craft input strings that subvert the\nintent of the query. Potentially, the attacker can gain unauthorized access to\ndata, including security settings, and severely corrupt or destroy the database.\n\n    The principal protection against code injection is not to use dynamic\nexecution except where it provides necessary functionality that cannot be\nutilized otherwise. Use strongly typed data items rather than general-purpose\nstrings as input parameters to task-specific, pre-compiled stored procedures\nand functions (and triggers).\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered.","descriptions":[{"label":"default","data":"With respect to database management systems, one class of threat is\nknown as SQL Injection, or more generally, code injection. It takes advantage\nof the dynamic execution capabilities of various programming languages,\nincluding dialects of SQL. In such cases, the attacker deduces the manner in\nwhich SQL statements are being processed, either from inside knowledge or by\nobserving system behavior in response to invalid inputs. When the attacker\nidentifies scenarios where SQL queries are being assembled by application code\n(which may be within the database or separate from it) and executed\ndynamically, the attacker is then able to craft input strings that subvert the\nintent of the query. Potentially, the attacker can gain unauthorized access to\ndata, including security settings, and severely corrupt or destroy the database.\n\n    The principal protection against code injection is not to use dynamic\nexecution except where it provides necessary functionality that cannot be\nutilized otherwise. Use strongly typed data items rather than general-purpose\nstrings as input parameters to task-specific, pre-compiled stored procedures\nand functions (and triggers).\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered."},{"label":"check","data":"Review CouchDB source code (stored procedures, functions, triggers) and\napplication source code, to identify cases of dynamic code execution.\n\n    If dynamic code execution is employed in circumstances where the objective\ncould practically be satisfied by static execution with strongly typed\nparameters, this is a finding."},{"label":"fix","data":"Where dynamic code execution is employed in circumstances where\nthe objective could practically be satisfied by static execution with strongly\ntyped parameters, modify the code to do so."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000251-DB-000391","gid":"V-58179","rid":"SV-72609r2_rule","stig_id":"SRG-APP-000251-DB-000391","fix_id":null,"cci":["CCI-001310"],"nist":["SI-10","Rev_4"]},"code":"control \"V-58179\" do\n  title \"The DBMS and associated applications must reserve the use of dynamic\ncode execution for situations that require it.\"\n  desc  \"With respect to database management systems, one class of threat is\nknown as SQL Injection, or more generally, code injection. It takes advantage\nof the dynamic execution capabilities of various programming languages,\nincluding dialects of SQL. In such cases, the attacker deduces the manner in\nwhich SQL statements are being processed, either from inside knowledge or by\nobserving system behavior in response to invalid inputs. When the attacker\nidentifies scenarios where SQL queries are being assembled by application code\n(which may be within the database or separate from it) and executed\ndynamically, the attacker is then able to craft input strings that subvert the\nintent of the query. Potentially, the attacker can gain unauthorized access to\ndata, including security settings, and severely corrupt or destroy the database.\n\n    The principal protection against code injection is not to use dynamic\nexecution except where it provides necessary functionality that cannot be\nutilized otherwise. Use strongly typed data items rather than general-purpose\nstrings as input parameters to task-specific, pre-compiled stored procedures\nand functions (and triggers).\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered.\n  \"\n  desc  \"check\", \"\n    Review CouchDB source code (stored procedures, functions, triggers) and\napplication source code, to identify cases of dynamic code execution.\n\n    If dynamic code execution is employed in circumstances where the objective\ncould practically be satisfied by static execution with strongly typed\nparameters, this is a finding.\n  \"\n  desc  \"fix\", \"Where dynamic code execution is employed in circumstances where\nthe objective could practically be satisfied by static execution with strongly\ntyped parameters, modify the code to do so.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000251-DB-000391\"\n  tag \"gid\": \"V-58179\"\n  tag \"rid\": \"SV-72609r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000251-DB-000391\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001310\"]\n  tag \"nist\": [\"SI-10\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58179.rb"},"waiver_data":{},"results":[]},{"id":"V-58181","title":"The DBMS and associated applications, when making use of dynamic code\nexecution, must scan input data for invalid values that may indicate a code\ninjection attack.","desc":"With respect to database management systems, one class of threat is\nknown as SQL Injection, or more generally, code injection. It takes advantage\nof the dynamic execution capabilities of various programming languages,\nincluding dialects of SQL. In such cases, the attacker deduces the manner in\nwhich SQL statements are being processed, either from inside knowledge or by\nobserving system behavior in response to invalid inputs. When the attacker\nidentifies scenarios where SQL queries are being assembled by application code\n(which may be within the database or separate from it) and executed\ndynamically, the attacker is then able to craft input strings that subvert the\nintent of the query. Potentially, the attacker can gain unauthorized access to\ndata, including security settings, and severely corrupt or destroy the database.\n\n    The principal protection against code injection is not to use dynamic\nexecution except where it provides necessary functionality that cannot be\nutilized otherwise. Use strongly typed data items rather than general-purpose\nstrings as input parameters to task-specific, pre-compiled stored procedures\nand functions (and triggers).\n\n    When dynamic execution is necessary, ways to mitigate the risk include the\nfollowing, which should be implemented both in the on-screen application and at\nthe database level, in the stored procedures:\n    -- Allow strings as input only when necessary.\n    -- Rely on data typing to validate numbers, dates, etc. Do not accept\ninvalid values. If substituting other values for them, think carefully about\nwhether this could be subverted.\n    -- Limit the size of input strings to what is truly necessary.\n    -- If single quotes/apostrophes, double quotes, semicolons, equals signs,\nangle brackets, or square brackets will never be valid as input, reject them.\n    -- If comment markers will never be valid as input, reject them. In SQL,\nthese are -- or /* */\n    -- If HTML and XML tags, entities, comments, etc., will never be valid,\nreject them.\n    -- If wildcards are present, reject them unless truly necessary. In SQL\nthese are the underscore and the percentage sign, and the word ESCAPE is also a\nclue that wildcards are in use.\n    -- If SQL key words, such as SELECT, INSERT, UPDATE, DELETE, CREATE, ALTER,\nDROP, ESCAPE, UNION, GRANT, REVOKE, DENY, MODIFY will never be valid, reject\nthem. Use case-insensitive comparisons when searching for these. Bear in mind\nthat some of these words, particularly Grant (as a person's name), could also\nbe valid input.\n    -- If there are range limits on the values that may be entered, enforce\nthose limits.\n    -- Institute procedures for inspection of programs for correct use of\ndynamic coding, by a party other than the developer.\n    -- Conduct rigorous testing of program modules that use dynamic coding,\nsearching for ways to subvert the intended use.\n    -- Record the inspection and testing in the system documentation.\n    -- Bear in mind that all this applies not only to screen input, but also to\nthe values in an incoming message to a web service or to a stored procedure\ncalled by a software component that has not itself been hardened in these ways.\nNot only can the caller be subject to such vulnerabilities; it may itself be\nthe attacker.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered.","descriptions":[{"label":"default","data":"With respect to database management systems, one class of threat is\nknown as SQL Injection, or more generally, code injection. It takes advantage\nof the dynamic execution capabilities of various programming languages,\nincluding dialects of SQL. In such cases, the attacker deduces the manner in\nwhich SQL statements are being processed, either from inside knowledge or by\nobserving system behavior in response to invalid inputs. When the attacker\nidentifies scenarios where SQL queries are being assembled by application code\n(which may be within the database or separate from it) and executed\ndynamically, the attacker is then able to craft input strings that subvert the\nintent of the query. Potentially, the attacker can gain unauthorized access to\ndata, including security settings, and severely corrupt or destroy the database.\n\n    The principal protection against code injection is not to use dynamic\nexecution except where it provides necessary functionality that cannot be\nutilized otherwise. Use strongly typed data items rather than general-purpose\nstrings as input parameters to task-specific, pre-compiled stored procedures\nand functions (and triggers).\n\n    When dynamic execution is necessary, ways to mitigate the risk include the\nfollowing, which should be implemented both in the on-screen application and at\nthe database level, in the stored procedures:\n    -- Allow strings as input only when necessary.\n    -- Rely on data typing to validate numbers, dates, etc. Do not accept\ninvalid values. If substituting other values for them, think carefully about\nwhether this could be subverted.\n    -- Limit the size of input strings to what is truly necessary.\n    -- If single quotes/apostrophes, double quotes, semicolons, equals signs,\nangle brackets, or square brackets will never be valid as input, reject them.\n    -- If comment markers will never be valid as input, reject them. In SQL,\nthese are -- or /* */\n    -- If HTML and XML tags, entities, comments, etc., will never be valid,\nreject them.\n    -- If wildcards are present, reject them unless truly necessary. In SQL\nthese are the underscore and the percentage sign, and the word ESCAPE is also a\nclue that wildcards are in use.\n    -- If SQL key words, such as SELECT, INSERT, UPDATE, DELETE, CREATE, ALTER,\nDROP, ESCAPE, UNION, GRANT, REVOKE, DENY, MODIFY will never be valid, reject\nthem. Use case-insensitive comparisons when searching for these. Bear in mind\nthat some of these words, particularly Grant (as a person's name), could also\nbe valid input.\n    -- If there are range limits on the values that may be entered, enforce\nthose limits.\n    -- Institute procedures for inspection of programs for correct use of\ndynamic coding, by a party other than the developer.\n    -- Conduct rigorous testing of program modules that use dynamic coding,\nsearching for ways to subvert the intended use.\n    -- Record the inspection and testing in the system documentation.\n    -- Bear in mind that all this applies not only to screen input, but also to\nthe values in an incoming message to a web service or to a stored procedure\ncalled by a software component that has not itself been hardened in these ways.\nNot only can the caller be subject to such vulnerabilities; it may itself be\nthe attacker.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered."},{"label":"check","data":"Review CouchDB source code (stored procedures, functions, triggers) and\napplication source code to identify cases of dynamic code execution.\n\n    If dynamic code execution is employed without protective measures against\ncode injection, this is a finding."},{"label":"fix","data":"Where dynamic code execution is used, modify the code to\nimplement protections against code injection."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000251-DB-000392","gid":"V-58181","rid":"SV-72611r2_rule","stig_id":"SRG-APP-000251-DB-000392","fix_id":null,"cci":["CCI-001310"],"nist":["SI-10","Rev_4"]},"code":"control \"V-58181\" do\n  title \"The DBMS and associated applications, when making use of dynamic code\nexecution, must scan input data for invalid values that may indicate a code\ninjection attack.\"\n  desc  \"With respect to database management systems, one class of threat is\nknown as SQL Injection, or more generally, code injection. It takes advantage\nof the dynamic execution capabilities of various programming languages,\nincluding dialects of SQL. In such cases, the attacker deduces the manner in\nwhich SQL statements are being processed, either from inside knowledge or by\nobserving system behavior in response to invalid inputs. When the attacker\nidentifies scenarios where SQL queries are being assembled by application code\n(which may be within the database or separate from it) and executed\ndynamically, the attacker is then able to craft input strings that subvert the\nintent of the query. Potentially, the attacker can gain unauthorized access to\ndata, including security settings, and severely corrupt or destroy the database.\n\n    The principal protection against code injection is not to use dynamic\nexecution except where it provides necessary functionality that cannot be\nutilized otherwise. Use strongly typed data items rather than general-purpose\nstrings as input parameters to task-specific, pre-compiled stored procedures\nand functions (and triggers).\n\n    When dynamic execution is necessary, ways to mitigate the risk include the\nfollowing, which should be implemented both in the on-screen application and at\nthe database level, in the stored procedures:\n    -- Allow strings as input only when necessary.\n    -- Rely on data typing to validate numbers, dates, etc. Do not accept\ninvalid values. If substituting other values for them, think carefully about\nwhether this could be subverted.\n    -- Limit the size of input strings to what is truly necessary.\n    -- If single quotes/apostrophes, double quotes, semicolons, equals signs,\nangle brackets, or square brackets will never be valid as input, reject them.\n    -- If comment markers will never be valid as input, reject them. In SQL,\nthese are -- or /* */\n    -- If HTML and XML tags, entities, comments, etc., will never be valid,\nreject them.\n    -- If wildcards are present, reject them unless truly necessary. In SQL\nthese are the underscore and the percentage sign, and the word ESCAPE is also a\nclue that wildcards are in use.\n    -- If SQL key words, such as SELECT, INSERT, UPDATE, DELETE, CREATE, ALTER,\nDROP, ESCAPE, UNION, GRANT, REVOKE, DENY, MODIFY will never be valid, reject\nthem. Use case-insensitive comparisons when searching for these. Bear in mind\nthat some of these words, particularly Grant (as a person's name), could also\nbe valid input.\n    -- If there are range limits on the values that may be entered, enforce\nthose limits.\n    -- Institute procedures for inspection of programs for correct use of\ndynamic coding, by a party other than the developer.\n    -- Conduct rigorous testing of program modules that use dynamic coding,\nsearching for ways to subvert the intended use.\n    -- Record the inspection and testing in the system documentation.\n    -- Bear in mind that all this applies not only to screen input, but also to\nthe values in an incoming message to a web service or to a stored procedure\ncalled by a software component that has not itself been hardened in these ways.\nNot only can the caller be subject to such vulnerabilities; it may itself be\nthe attacker.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered.\n  \"\n  desc  \"check\", \"\n     Review CouchDB source code (stored procedures, functions, triggers) and\napplication source code to identify cases of dynamic code execution.\n\n    If dynamic code execution is employed without protective measures against\ncode injection, this is a finding.\n  \"\n  desc  \"fix\", \"Where dynamic code execution is used, modify the code to\nimplement protections against code injection.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000251-DB-000392\"\n  tag \"gid\": \"V-58181\"\n  tag \"rid\": \"SV-72611r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000251-DB-000392\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-001310\"]\n  tag \"nist\": [\"SI-10\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58181.rb"},"waiver_data":{},"results":[]},{"id":"V-58183","title":"When invalid inputs are received, the DBMS must behave in a\npredictable and documented manner that reflects organizational and system\nobjectives.","desc":"A common vulnerability is unplanned behavior when invalid inputs are\nreceived. This requirement guards against adverse or unintended system behavior\ncaused by invalid inputs, where information system responses to the invalid\ninput may be disruptive or cause the system to fail into an unsafe state.\n\n    The behavior will be derived from the organizational and system\nrequirements and includes, but is not limited to, notification of the\nappropriate personnel, creating an audit record, and rejecting invalid input.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered.","descriptions":[{"label":"default","data":"A common vulnerability is unplanned behavior when invalid inputs are\nreceived. This requirement guards against adverse or unintended system behavior\ncaused by invalid inputs, where information system responses to the invalid\ninput may be disruptive or cause the system to fail into an unsafe state.\n\n    The behavior will be derived from the organizational and system\nrequirements and includes, but is not limited to, notification of the\nappropriate personnel, creating an audit record, and rejecting invalid input.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered."},{"label":"check","data":"Review system documentation to determine how input errors are to be handled\nin general and if any special handling is defined for specific circumstances.\n\n    Review the source code for database program objects (stored procedures,\nfunctions, triggers) and application source code to identify how the system\nresponds to invalid input.\n\n    As database administrator, make a small syntax error:\n    Example command:\n    GT /_all_dbs\n     Verify the syntax error was logged:\n     # find . -name \"default.ini\"\n        # grep \"file =\" <path to default.ini>\n              if line does not exist or is commented out, this is a finding.\n     #grep \"level =\" <path to default.ini>\n              if line does not exist or is not set to info, this is a finding.\n\n\n    If it does not implement the documented behavior, this is a finding."},{"label":"fix","data":"Configure CouchDB to generate audit records for all invalid inputs.\n# find . -name \"default.ini\"\n# set level = info"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000447-DB-000393","gid":"V-58183","rid":"SV-72613r2_rule","stig_id":"SRG-APP-000447-DB-000393","fix_id":null,"cci":["CCI-002754"],"nist":["SI-10 (3)","Rev_4"]},"code":"control \"V-58183\" do\n  title \"When invalid inputs are received, the DBMS must behave in a\npredictable and documented manner that reflects organizational and system\nobjectives.\"\n  desc  \"A common vulnerability is unplanned behavior when invalid inputs are\nreceived. This requirement guards against adverse or unintended system behavior\ncaused by invalid inputs, where information system responses to the invalid\ninput may be disruptive or cause the system to fail into an unsafe state.\n\n    The behavior will be derived from the organizational and system\nrequirements and includes, but is not limited to, notification of the\nappropriate personnel, creating an audit record, and rejecting invalid input.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered.\n  \"\n  desc  \"check\", \"\n    Review system documentation to determine how input errors are to be handled\nin general and if any special handling is defined for specific circumstances.\n\n    Review the source code for database program objects (stored procedures,\nfunctions, triggers) and application source code to identify how the system\nresponds to invalid input.\n\n    As database administrator, make a small syntax error:\n    Example command:\n    GT /_all_dbs\n     Verify the syntax error was logged:\n     # find . -name \\\"default.ini\\\"\n        # grep \\\"file =\\\" <path to default.ini>\n              if line does not exist or is commented out, this is a finding.\n     #grep \\\"level =\\\" <path to default.ini>\n              if line does not exist or is not set to info, this is a finding.\n\n\n    If it does not implement the documented behavior, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure CouchDB to generate audit records for all invalid inputs.\n    # find . -name \\\"default.ini\\\"\n    # set level = info\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000447-DB-000393\"\n  tag \"gid\": \"V-58183\"\n  tag \"rid\": \"SV-72613r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000447-DB-000393\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-002754\"]\n  tag \"nist\": [\"SI-10 (3)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-58183.rb"},"waiver_data":{},"results":[]},{"id":"V-61407","title":"If DBMS authentication, using passwords, is employed, the DBMS must\nenforce the DoD standards for password complexity and lifetime.","desc":"OS/enterprise authentication and identification must be used\n(SRG-APP-000023-DB-000001).  Native DBMS authentication may be used only when\ncircumstances make it unavoidable; and must be documented and AO-approved.\n\n    The DoD standard for authentication is DoD-approved PKI certificates.\nAuthentication based on User ID and Password may be used only when it is not\npossible to employ a PKI certificate, and requires AO approval.\n\n    In such cases, the DoD standards for password complexity and lifetime must\nbe implemented.  DBMS products that can inherit the rules for these from the\noperating system or access control program (e.g., Microsoft Active Directory)\nmust be configured to do so.  For other DBMSs, the rules must be enforced using\navailable configuration parameters or custom code.","descriptions":[{"label":"default","data":"OS/enterprise authentication and identification must be used\n(SRG-APP-000023-DB-000001).  Native DBMS authentication may be used only when\ncircumstances make it unavoidable; and must be documented and AO-approved.\n\n    The DoD standard for authentication is DoD-approved PKI certificates.\nAuthentication based on User ID and Password may be used only when it is not\npossible to employ a PKI certificate, and requires AO approval.\n\n    In such cases, the DoD standards for password complexity and lifetime must\nbe implemented.  DBMS products that can inherit the rules for these from the\noperating system or access control program (e.g., Microsoft Active Directory)\nmust be configured to do so.  For other DBMSs, the rules must be enforced using\navailable configuration parameters or custom code."},{"label":"check","data":"Review CouchDB settings relating to password complexity. Determine whether\nthe following rules are enforced. If any are not, this is a finding.\n\n\n    Review CouchDB settings relating to password lifetime. Determine whether\nthe following rules are enforced. If any are not, this is a finding.\n\n    # find . -name \"default.ini\"\n\n    # grep \"file =\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #cat <path to local.ini>\n    Review this file for users along with passwords. It can be seen in the\nfollowing format:\n\n    admin =\n-pbkdf2-71c01cb429088ac1a1e95f3482202622dc1e53fe,226701bece4ae0fc9a373a5e02bf5d07,10\n\n\n    Verify that the password follows the PBKDF2 (RFC-2898) algorithm"},{"label":"fix","data":"Restart the CouchDB services.\n# sudo restart couchdb"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000164-DB-000401","gid":"V-61407","rid":"SV-75897r3_rule","stig_id":"SRG-APP-000164-DB-000401","fix_id":null,"cci":["CCI-000192"],"nist":["IA-5 (1) (a)","Rev_4"]},"code":"control \"V-61407\" do\n  title \"If DBMS authentication, using passwords, is employed, the DBMS must\nenforce the DoD standards for password complexity and lifetime.\"\n  desc  \"OS/enterprise authentication and identification must be used\n(SRG-APP-000023-DB-000001).  Native DBMS authentication may be used only when\ncircumstances make it unavoidable; and must be documented and AO-approved.\n\n    The DoD standard for authentication is DoD-approved PKI certificates.\nAuthentication based on User ID and Password may be used only when it is not\npossible to employ a PKI certificate, and requires AO approval.\n\n    In such cases, the DoD standards for password complexity and lifetime must\nbe implemented.  DBMS products that can inherit the rules for these from the\noperating system or access control program (e.g., Microsoft Active Directory)\nmust be configured to do so.  For other DBMSs, the rules must be enforced using\navailable configuration parameters or custom code.\n  \"\n  desc  \"check\", \"\n    Review CouchDB settings relating to password complexity. Determine whether\nthe following rules are enforced. If any are not, this is a finding.\n\n\n    Review CouchDB settings relating to password lifetime. Determine whether\nthe following rules are enforced. If any are not, this is a finding.\n\n    # find . -name \\\"default.ini\\\"\n\n    # grep \\\"file =\\\" <path to default.ini>\n    if line does not exist or is commented out, this is a finding.\n\n    #cat <path to local.ini>\n    Review this file for users along with passwords. It can be seen in the\nfollowing format:\n\n    admin =\n-pbkdf2-71c01cb429088ac1a1e95f3482202622dc1e53fe,226701bece4ae0fc9a373a5e02bf5d07,10\n\n\n    Verify that the password follows the PBKDF2 (RFC-2898) algorithm\n\n  \"\n  desc  \"fix\", \"\n    Restart the CouchDB services.\n    # sudo restart couchdb\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000164-DB-000401\"\n  tag \"gid\": \"V-61407\"\n  tag \"rid\": \"SV-75897r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000164-DB-000401\"\n  tag \"fix_id\": nil\n  tag \"cci\": [\"CCI-000192\"]\n  tag \"nist\": [\"IA-5 (1) (a)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"C:/Users/zhangc/git/apache-couchdb-srg-baseline/controls/V-61407.rb"},"waiver_data":{},"results":[]}],"status":"loaded"}],"statistics":{"duration":0.1896373},"version":"4.21.1"}